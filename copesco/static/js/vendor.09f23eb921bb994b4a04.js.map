{"version":3,"sources":["webpack:///copesco/static/js/vendor.09f23eb921bb994b4a04.js","webpack:///./~/swiper/dist/js/swiper.js","webpack:///./~/css-loader/lib/css-base.js"],"names":["webpackJsonp","4","module","exports","__webpack_require__","addLibraryPlugin","lib","fn","swiper","params","firstInstance","this","each","s","Swiper","$","container","round","a","Math","floor","autoplay","autoplayDelay","activeSlide","slides","eq","activeIndex","attr","autoplayTimeoutId","setTimeout","loop","fixLoop","_slideNext","emit","isEnd","autoplayStopOnLast","stopAutoplay","_slideTo","findElementInEvent","e","selector","el","target","is","parents","nodeType","found","index","_el","length","initObserver","options","ObserverFunc","window","MutationObserver","WebkitMutationObserver","observer","mutations","forEach","mutation","onResize","observe","attributes","childList","characterData","observers","push","handleKeyboard","originalEvent","kc","keyCode","charCode","allowSwipeToNext","isHorizontal","allowSwipeToPrev","shiftKey","altKey","ctrlKey","metaKey","document","activeElement","nodeName","toLowerCase","inView","slideClass","slideActiveClass","windowScroll","left","pageXOffset","top","pageYOffset","windowWidth","innerWidth","windowHeight","innerHeight","swiperOffset","offset","rtl","scrollLeft","swiperCoord","width","height","i","point","preventDefault","returnValue","slideNext","slidePrev","isEventSupported","eventName","isSupported","element","createElement","setAttribute","implementation","hasFeature","handleMousewheel","delta","rtlFactor","data","normalizeWheel","mousewheelForceToAxis","abs","pixelX","pixelY","mousewheelInvert","freeMode","position","getWrapperTranslate","mousewheelSensitivity","wasBeginning","isBeginning","wasEnd","minTranslate","maxTranslate","setWrapperTransition","setWrapperTranslate","updateProgress","updateActiveIndex","updateClasses","freeModeSticky","clearTimeout","mousewheel","timeout","slideReset","lazyLoading","lazy","load","autoplayDisableOnInteraction","Date","getTime","lastScrollTime","animating","mousewheelReleaseOnEdges","event","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","setParallaxTransform","progress","p","indexOf","parseInt","transform","normalizeEventName","toUpperCase","substring","defaults","direction","touchEventsTarget","initialSlide","speed","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeMinimumVelocity","autoHeight","setWrapperSize","virtualTranslate","effect","coverflow","rotate","stretch","depth","modifier","slideShadows","flip","limitRotation","cube","shadow","shadowOffset","shadowScale","fade","crossFade","parallax","zoom","zoomMax","zoomMin","zoomToggle","scrollbar","scrollbarHide","scrollbarDraggable","scrollbarSnapOnRelease","keyboardControl","mousewheelControl","mousewheelEventsTarged","hashnav","hashnavWatchState","history","replaceState","breakpoints","undefined","spaceBetween","slidesPerView","slidesPerColumn","slidesPerColumnFill","slidesPerGroup","centeredSlides","slidesOffsetBefore","slidesOffsetAfter","roundLengths","touchRatio","touchAngle","simulateTouch","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","onlyExternal","threshold","touchMoveStopPropagation","touchReleaseOnEdges","uniqueNavElements","pagination","paginationElement","paginationClickable","paginationHide","paginationBulletRender","paginationProgressRender","paginationFractionRender","paginationCustomRender","paginationType","resistance","resistanceRatio","nextButton","prevButton","watchSlidesProgress","watchSlidesVisibility","grabCursor","preventClicks","preventClicksPropagation","slideToClickedSlide","lazyLoadingInPrevNext","lazyLoadingInPrevNextAmount","lazyLoadingOnTransitionStart","preloadImages","updateOnImagesReady","loopAdditionalSlides","loopedSlides","control","controlInverse","controlBy","normalizeSlideIndex","swipeHandler","noSwiping","noSwipingClass","passiveListeners","containerModifierClass","slideDuplicateActiveClass","slideVisibleClass","slideDuplicateClass","slideNextClass","slideDuplicateNextClass","slidePrevClass","slideDuplicatePrevClass","wrapperClass","bulletClass","bulletActiveClass","buttonDisabledClass","paginationCurrentClass","paginationTotalClass","paginationHiddenClass","paginationProgressbarClass","paginationClickableClass","paginationModifierClass","lazyLoadingClass","lazyStatusLoadingClass","lazyStatusLoadedClass","lazyPreloaderClass","notificationClass","preloaderClass","zoomContainerClass","observeParents","a11y","prevSlideMessage","nextSlideMessage","firstSlideMessage","lastSlideMessage","paginationBulletMessage","runCallbacksOnInit","initialVirtualTranslate","originalParams","param","Dom7","jQuery","deepParam","def","deepDef","classNames","Zepto","currentBreakpoint","getActiveBreakpoint","breakpoint","points","hasOwnProperty","sort","b","setBreakpoint","breakPointsParams","needsReLoop","destroyLoop","reLoop","swipers","support","flexbox","transforms3d","touch","wrapper","children","paginationContainer","find","addClass","dir","css","wrongRTL","device","android","join","translate","velocity","lockSwipeToNext","unsetGrabCursor","lockSwipeToPrev","lockSwipes","unlockSwipeToNext","setGrabCursor","unlockSwipeToPrev","unlockSwipes","moving","style","cursor","imagesToLoad","imagesLoaded","loadImage","imgElement","src","srcset","sizes","checkForComplete","callback","onReady","image","complete","Image","onload","onerror","_onReady","update","currentSrc","getAttribute","autoplaying","autoplayPaused","startAutoplay","internal","pauseAutoplay","transitionEnd","snapGrid","updateAutoHeight","activeSlides","newHeight","ceil","offsetHeight","updateContainerSize","clientWidth","clientHeight","size","updateSlidesSize","slidesGrid","slidesSizesGrid","slidePosition","prevSlideSize","parseFloat","replace","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesNumberEvenToRows","max","slideSize","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","outerWidth","outerHeight","swiperSlideSize","newSlidesGrid","updateSlidesOffset","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","offsetCenter","removeClass","slideProgress","slideBefore","slideAfter","isVisible","translatesDiff","newActiveIndex","snapIndex","previousIndex","updateRealIndex","realIndex","hasClass","nextSlide","next","prevSlide","prev","current","total","bullets","text","scale","scaleX","scaleY","transition","html","disable","enable","updatePagination","paginationHTML","numberOfBullets","initPagination","updateTranslate","forceSetTranslate","newTranslate","min","set","translated","controller","spline","slideTo","forceUpdatePagination","slideChangedBySlideTo","touchEventsDesktop","start","move","end","navigator","pointerEnabled","msPointerEnabled","touchEvents","initEvents","detach","actionDom","action","moveCapture","nested","browser","ie","onTouchStart","onTouchMove","onTouchEnd","passiveListener","passive","capture","ios","onClickNext","onEnterKey","onClickPrev","onClickIndex","attachEvents","detachEvents","allowClick","stopPropagation","stopImmediatePropagation","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToIndex","isTouched","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","clickTimeout","allowMomentumBounce","formElements","lastClickTime","now","velocities","touches","startX","startY","currentX","currentY","diff","isTouchEvent","startMoving","type","which","targetTouches","pageX","pageY","swipeDirection","blur","preventedByNestedSwiper","atan2","PI","ieTouch","trigger","disableParentSwiper","pow","time","touchEndTime","timeDiff","toggleClass","currentPos","lastMoveEvent","pop","velocityEvent","distance","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","j","onTransitionStart","onTransitionEnd","stopIndex","groupSize","ratio","slideIndex","runCallbacks","lteIE9","setHistory","setHash","clientLeft","_slidePrev","disableTouchControl","enableTouchControl","duration","byController","effects","setTransition","x","y","z","setTranslate","getTranslate","matrix","curTransform","curStyle","transformMatrix","getComputedStyle","WebKitCSSMatrix","webkitTransform","split","map","MozTransform","OTransform","MsTransform","msTransform","getPropertyValue","toString","m41","m42","initObservers","containerParents","disconnectObservers","disconnect","createLoop","remove","prependSlides","appendSlides","append","cloneNode","prepend","removeAttr","updatePosition","oldIndex","newIndex","appendSlide","prependSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","tx","ty","slideOpacity","opacity","eventTriggered","triggerEvents","rotateY","rotateX","zIndex","shadowBefore","shadowAfter","cubeShadow","wrapperRotate","slideAngle","tz","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowAngle","multiplier","sin","cos","scale1","scale2","zFactor","isSafari","isUiWebView","center","slideOffset","offsetMultiplier","translateZ","translateY","translateX","slideTransform","ws","perspectiveOrigin","initialImageLoaded","loadImageInSlide","loadInDuplicate","img","add","_img","background","slideOriginalIndex","originalSlide","duplicatedSlide","amount","spv","maxIndex","minIndex","setDragPosition","sb","pointerPosition","clientX","clientY","track","dragSize","positionMin","moveDivider","positionMax","dragStart","dragTimeout","drag","dragMove","dragEnd","draggableEvents","enableDraggable","on","disableDraggable","off","trackSize","offsetWidth","divider","display","newPos","newSize","LinearSpline","lastIndex","i1","i3","interpolate","x2","binarySearch","guess","array","val","getInterpolateFunction","c","setControlledTranslate","controlledTranslate","controlled","isArray","setControlledTransition","onHashCange","newHash","location","hash","activeSlideHash","initialized","init","slideHash","destroy","pushState","paths","getPathValues","key","value","scrollToSlide","addEventListener","setHistoryPopState","pathArray","pathname","slice","slugify","includes","slideHistory","disableKeyboardControl","enableKeyboardControl","userAgent","disableMousewheelControl","enableMousewheelControl","parallaxDuration","currentScale","isScaling","gesture","slideWidth","slideHeight","imageWrap","minX","minY","maxX","maxY","touchesStart","touchesCurrent","prevPositionX","prevPositionY","prevTime","getDistanceBetweenTouches","x1","y1","y2","sqrt","onGestureStart","gestures","scaleStart","parent","onGestureChange","scaleMove","onGestureEnd","changedTouches","os","scaledWidth","scaledHeight","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","toggleZoom","touchX","touchY","offsetX","offsetY","diffX","diffY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","_plugins","plugin","plugins","callPlugins","arguments","emitterEventListeners","handler","splice","once","_handler","makeFocusable","$el","addRole","role","addLabel","label","notify","click","liveRegion","message","notification","bullet","hashnavReplaceState","cleanupStyles","deleteInstance","removeEventListener","prototype","ua","test","arr","Object","apply","msMaxTouchPoints","maxTouchPoints","div","innerHTML","getElementsByTagName","match","ipad","ipod","iphone","Modernizr","DocumentTouch","csstransforms3d","styles","supportsPassive","opts","defineProperty","get","_this","context","els","tempParent","trim","toCreate","childNodes","querySelectorAll","getElementById","className","classes","classList","contains","toggle","attrs","attrName","removeAttribute","dom7ElementDataStorage","dataKey","elStyle","webkitTransitionDuration","MsTransitionDuration","msTransitionDuration","MozTransitionDuration","OTransitionDuration","transitionDuration","targetSelector","listener","handleLiveEvent","call","k","events","dom7LiveListeners","liveListener","proxy","dom","eventData","evt","CustomEvent","bubbles","cancelable","createEvent","initEvent","dispatchEvent","fireCallBack","includeMargins","box","getBoundingClientRect","body","clientTop","scrollTop","props","prop","textContent","compareWith","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","child","previousSibling","returnIndex","newChild","tempDiv","firstChild","appendChild","insertBefore","before","parentNode","insertAfter","after","nextSibling","nextElementSibling","nextAll","nextEls","previousElementSibling","prevAll","prevEls","unique","foundElements","removeChild","toAdd","swiperDomPlugins","domLib","5","list","result","item","modules","mediaQuery","alreadyImportedModules","id"],"mappings":"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","file":"copesco/static/js/vendor.09f23eb921bb994b4a04.js","sourcesContent":["webpackJsonp([2,0],{\n\n/***/ 4:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Swiper 3.4.0\n\t * Most modern mobile touch slider and framework with hardware accelerated transitions\n\t * \n\t * http://www.idangero.us/swiper/\n\t * \n\t * Copyright 2016, Vladimir Kharlampidi\n\t * The iDangero.us\n\t * http://www.idangero.us/\n\t * \n\t * Licensed under MIT\n\t * \n\t * Released on: October 16, 2016\n\t */\n\t(function () {\n\t    'use strict';\n\t    var $;\n\t    /*===========================\n\t    Swiper\n\t    ===========================*/\n\t    var Swiper = function (container, params) {\n\t        if (!(this instanceof Swiper)) return new Swiper(container, params);\n\t\n\t        var defaults = {\n\t            direction: 'horizontal',\n\t            touchEventsTarget: 'container',\n\t            initialSlide: 0,\n\t            speed: 300,\n\t            // autoplay\n\t            autoplay: false,\n\t            autoplayDisableOnInteraction: true,\n\t            autoplayStopOnLast: false,\n\t            // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n\t            iOSEdgeSwipeDetection: false,\n\t            iOSEdgeSwipeThreshold: 20,\n\t            // Free mode\n\t            freeMode: false,\n\t            freeModeMomentum: true,\n\t            freeModeMomentumRatio: 1,\n\t            freeModeMomentumBounce: true,\n\t            freeModeMomentumBounceRatio: 1,\n\t            freeModeMomentumVelocityRatio: 1,\n\t            freeModeSticky: false,\n\t            freeModeMinimumVelocity: 0.02,\n\t            // Autoheight\n\t            autoHeight: false,\n\t            // Set wrapper width\n\t            setWrapperSize: false,\n\t            // Virtual Translate\n\t            virtualTranslate: false,\n\t            // Effects\n\t            effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\t            coverflow: {\n\t                rotate: 50,\n\t                stretch: 0,\n\t                depth: 100,\n\t                modifier: 1,\n\t                slideShadows : true\n\t            },\n\t            flip: {\n\t                slideShadows : true,\n\t                limitRotation: true\n\t            },\n\t            cube: {\n\t                slideShadows: true,\n\t                shadow: true,\n\t                shadowOffset: 20,\n\t                shadowScale: 0.94\n\t            },\n\t            fade: {\n\t                crossFade: false\n\t            },\n\t            // Parallax\n\t            parallax: false,\n\t            // Zoom\n\t            zoom: false,\n\t            zoomMax: 3,\n\t            zoomMin: 1,\n\t            zoomToggle: true,\n\t            // Scrollbar\n\t            scrollbar: null,\n\t            scrollbarHide: true,\n\t            scrollbarDraggable: false,\n\t            scrollbarSnapOnRelease: false,\n\t            // Keyboard Mousewheel\n\t            keyboardControl: false,\n\t            mousewheelControl: false,\n\t            mousewheelReleaseOnEdges: false,\n\t            mousewheelInvert: false,\n\t            mousewheelForceToAxis: false,\n\t            mousewheelSensitivity: 1,\n\t            mousewheelEventsTarged: 'container',\n\t            // Hash Navigation\n\t            hashnav: false,\n\t            hashnavWatchState: false,\n\t            // History\n\t            history: false,\n\t            // Commong Nav State\n\t            replaceState: false,\n\t            // Breakpoints\n\t            breakpoints: undefined,\n\t            // Slides grid\n\t            spaceBetween: 0,\n\t            slidesPerView: 1,\n\t            slidesPerColumn: 1,\n\t            slidesPerColumnFill: 'column',\n\t            slidesPerGroup: 1,\n\t            centeredSlides: false,\n\t            slidesOffsetBefore: 0, // in px\n\t            slidesOffsetAfter: 0, // in px\n\t            // Round length\n\t            roundLengths: false,\n\t            // Touches\n\t            touchRatio: 1,\n\t            touchAngle: 45,\n\t            simulateTouch: true,\n\t            shortSwipes: true,\n\t            longSwipes: true,\n\t            longSwipesRatio: 0.5,\n\t            longSwipesMs: 300,\n\t            followFinger: true,\n\t            onlyExternal: false,\n\t            threshold: 0,\n\t            touchMoveStopPropagation: true,\n\t            touchReleaseOnEdges: false,\n\t            // Unique Navigation Elements\n\t            uniqueNavElements: true,\n\t            // Pagination\n\t            pagination: null,\n\t            paginationElement: 'span',\n\t            paginationClickable: false,\n\t            paginationHide: false,\n\t            paginationBulletRender: null,\n\t            paginationProgressRender: null,\n\t            paginationFractionRender: null,\n\t            paginationCustomRender: null,\n\t            paginationType: 'bullets', // 'bullets' or 'progress' or 'fraction' or 'custom'\n\t            // Resistance\n\t            resistance: true,\n\t            resistanceRatio: 0.85,\n\t            // Next/prev buttons\n\t            nextButton: null,\n\t            prevButton: null,\n\t            // Progress\n\t            watchSlidesProgress: false,\n\t            watchSlidesVisibility: false,\n\t            // Cursor\n\t            grabCursor: false,\n\t            // Clicks\n\t            preventClicks: true,\n\t            preventClicksPropagation: true,\n\t            slideToClickedSlide: false,\n\t            // Lazy Loading\n\t            lazyLoading: false,\n\t            lazyLoadingInPrevNext: false,\n\t            lazyLoadingInPrevNextAmount: 1,\n\t            lazyLoadingOnTransitionStart: false,\n\t            // Images\n\t            preloadImages: true,\n\t            updateOnImagesReady: true,\n\t            // loop\n\t            loop: false,\n\t            loopAdditionalSlides: 0,\n\t            loopedSlides: null,\n\t            // Control\n\t            control: undefined,\n\t            controlInverse: false,\n\t            controlBy: 'slide', //or 'container'\n\t            normalizeSlideIndex: true,\n\t            // Swiping/no swiping\n\t            allowSwipeToPrev: true,\n\t            allowSwipeToNext: true,\n\t            swipeHandler: null, //'.swipe-handler',\n\t            noSwiping: true,\n\t            noSwipingClass: 'swiper-no-swiping',\n\t            // Passive Listeners\n\t            passiveListeners: true,\n\t            // NS\n\t            containerModifierClass: 'swiper-container-', // NEW\n\t            slideClass: 'swiper-slide',\n\t            slideActiveClass: 'swiper-slide-active',\n\t            slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n\t            slideVisibleClass: 'swiper-slide-visible',\n\t            slideDuplicateClass: 'swiper-slide-duplicate',\n\t            slideNextClass: 'swiper-slide-next',\n\t            slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n\t            slidePrevClass: 'swiper-slide-prev',\n\t            slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n\t            wrapperClass: 'swiper-wrapper',\n\t            bulletClass: 'swiper-pagination-bullet',\n\t            bulletActiveClass: 'swiper-pagination-bullet-active',\n\t            buttonDisabledClass: 'swiper-button-disabled',\n\t            paginationCurrentClass: 'swiper-pagination-current',\n\t            paginationTotalClass: 'swiper-pagination-total',\n\t            paginationHiddenClass: 'swiper-pagination-hidden',\n\t            paginationProgressbarClass: 'swiper-pagination-progressbar',\n\t            paginationClickableClass: 'swiper-pagination-clickable', // NEW\n\t            paginationModifierClass: 'swiper-pagination-', // NEW\n\t            lazyLoadingClass: 'swiper-lazy',\n\t            lazyStatusLoadingClass: 'swiper-lazy-loading',\n\t            lazyStatusLoadedClass: 'swiper-lazy-loaded',\n\t            lazyPreloaderClass: 'swiper-lazy-preloader',\n\t            notificationClass: 'swiper-notification',\n\t            preloaderClass: 'preloader',\n\t            zoomContainerClass: 'swiper-zoom-container',\n\t        \n\t            // Observer\n\t            observer: false,\n\t            observeParents: false,\n\t            // Accessibility\n\t            a11y: false,\n\t            prevSlideMessage: 'Previous slide',\n\t            nextSlideMessage: 'Next slide',\n\t            firstSlideMessage: 'This is the first slide',\n\t            lastSlideMessage: 'This is the last slide',\n\t            paginationBulletMessage: 'Go to slide {{index}}',\n\t            // Callbacks\n\t            runCallbacksOnInit: true\n\t            /*\n\t            Callbacks:\n\t            onInit: function (swiper)\n\t            onDestroy: function (swiper)\n\t            onClick: function (swiper, e)\n\t            onTap: function (swiper, e)\n\t            onDoubleTap: function (swiper, e)\n\t            onSliderMove: function (swiper, e)\n\t            onSlideChangeStart: function (swiper)\n\t            onSlideChangeEnd: function (swiper)\n\t            onTransitionStart: function (swiper)\n\t            onTransitionEnd: function (swiper)\n\t            onImagesReady: function (swiper)\n\t            onProgress: function (swiper, progress)\n\t            onTouchStart: function (swiper, e)\n\t            onTouchMove: function (swiper, e)\n\t            onTouchMoveOpposite: function (swiper, e)\n\t            onTouchEnd: function (swiper, e)\n\t            onReachBeginning: function (swiper)\n\t            onReachEnd: function (swiper)\n\t            onSetTransition: function (swiper, duration)\n\t            onSetTranslate: function (swiper, translate)\n\t            onAutoplayStart: function (swiper)\n\t            onAutoplayStop: function (swiper),\n\t            onLazyImageLoad: function (swiper, slide, image)\n\t            onLazyImageReady: function (swiper, slide, image)\n\t            */\n\t        \n\t        };\n\t        var initialVirtualTranslate = params && params.virtualTranslate;\n\t        \n\t        params = params || {};\n\t        var originalParams = {};\n\t        for (var param in params) {\n\t            if (typeof params[param] === 'object' && params[param] !== null && !(params[param].nodeType || params[param] === window || params[param] === document || (typeof Dom7 !== 'undefined' && params[param] instanceof Dom7) || (typeof jQuery !== 'undefined' && params[param] instanceof jQuery))) {\n\t                originalParams[param] = {};\n\t                for (var deepParam in params[param]) {\n\t                    originalParams[param][deepParam] = params[param][deepParam];\n\t                }\n\t            }\n\t            else {\n\t                originalParams[param] = params[param];\n\t            }\n\t        }\n\t        for (var def in defaults) {\n\t            if (typeof params[def] === 'undefined') {\n\t                params[def] = defaults[def];\n\t            }\n\t            else if (typeof params[def] === 'object') {\n\t                for (var deepDef in defaults[def]) {\n\t                    if (typeof params[def][deepDef] === 'undefined') {\n\t                        params[def][deepDef] = defaults[def][deepDef];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        \n\t        // Swiper\n\t        var s = this;\n\t        \n\t        // Params\n\t        s.params = params;\n\t        s.originalParams = originalParams;\n\t        \n\t        // Classname\n\t        s.classNames = [];\n\t        /*=========================\n\t          Dom Library and plugins\n\t          ===========================*/\n\t        if (typeof $ !== 'undefined' && typeof Dom7 !== 'undefined'){\n\t            $ = Dom7;\n\t        }\n\t        if (typeof $ === 'undefined') {\n\t            if (typeof Dom7 === 'undefined') {\n\t                $ = window.Dom7 || window.Zepto || window.jQuery;\n\t            }\n\t            else {\n\t                $ = Dom7;\n\t            }\n\t            if (!$) return;\n\t        }\n\t        // Export it to Swiper instance\n\t        s.$ = $;\n\t        \n\t        /*=========================\n\t          Breakpoints\n\t          ===========================*/\n\t        s.currentBreakpoint = undefined;\n\t        s.getActiveBreakpoint = function () {\n\t            //Get breakpoint for window width\n\t            if (!s.params.breakpoints) return false;\n\t            var breakpoint = false;\n\t            var points = [], point;\n\t            for ( point in s.params.breakpoints ) {\n\t                if (s.params.breakpoints.hasOwnProperty(point)) {\n\t                    points.push(point);\n\t                }\n\t            }\n\t            points.sort(function (a, b) {\n\t                return parseInt(a, 10) > parseInt(b, 10);\n\t            });\n\t            for (var i = 0; i < points.length; i++) {\n\t                point = points[i];\n\t                if (point >= window.innerWidth && !breakpoint) {\n\t                    breakpoint = point;\n\t                }\n\t            }\n\t            return breakpoint || 'max';\n\t        };\n\t        s.setBreakpoint = function () {\n\t            //Set breakpoint for window width and update parameters\n\t            var breakpoint = s.getActiveBreakpoint();\n\t            if (breakpoint && s.currentBreakpoint !== breakpoint) {\n\t                var breakPointsParams = breakpoint in s.params.breakpoints ? s.params.breakpoints[breakpoint] : s.originalParams;\n\t                var needsReLoop = s.params.loop && (breakPointsParams.slidesPerView !== s.params.slidesPerView);\n\t                for ( var param in breakPointsParams ) {\n\t                    s.params[param] = breakPointsParams[param];\n\t                }\n\t                s.currentBreakpoint = breakpoint;\n\t                if(needsReLoop && s.destroyLoop) {\n\t                    s.reLoop(true);\n\t                }\n\t            }\n\t        };\n\t        // Set breakpoint on load\n\t        if (s.params.breakpoints) {\n\t            s.setBreakpoint();\n\t        }\n\t        \n\t        /*=========================\n\t          Preparation - Define Container, Wrapper and Pagination\n\t          ===========================*/\n\t        s.container = $(container);\n\t        if (s.container.length === 0) return;\n\t        if (s.container.length > 1) {\n\t            var swipers = [];\n\t            s.container.each(function () {\n\t                var container = this;\n\t                swipers.push(new Swiper(this, params));\n\t            });\n\t            return swipers;\n\t        }\n\t        \n\t        // Save instance in container HTML Element and in data\n\t        s.container[0].swiper = s;\n\t        s.container.data('swiper', s);\n\t        \n\t        s.classNames.push(s.params.containerModifierClass + s.params.direction);\n\t        \n\t        if (s.params.freeMode) {\n\t            s.classNames.push(s.params.containerModifierClass + 'free-mode');\n\t        }\n\t        if (!s.support.flexbox) {\n\t            s.classNames.push(s.params.containerModifierClass + 'no-flexbox');\n\t            s.params.slidesPerColumn = 1;\n\t        }\n\t        if (s.params.autoHeight) {\n\t            s.classNames.push(s.params.containerModifierClass + 'autoheight');\n\t        }\n\t        // Enable slides progress when required\n\t        if (s.params.parallax || s.params.watchSlidesVisibility) {\n\t            s.params.watchSlidesProgress = true;\n\t        }\n\t        // Max resistance when touchReleaseOnEdges\n\t        if (s.params.touchReleaseOnEdges) {\n\t            s.params.resistanceRatio = 0;\n\t        }\n\t        // Coverflow / 3D\n\t        if (['cube', 'coverflow', 'flip'].indexOf(s.params.effect) >= 0) {\n\t            if (s.support.transforms3d) {\n\t                s.params.watchSlidesProgress = true;\n\t                s.classNames.push(s.params.containerModifierClass + '3d');\n\t            }\n\t            else {\n\t                s.params.effect = 'slide';\n\t            }\n\t        }\n\t        if (s.params.effect !== 'slide') {\n\t            s.classNames.push(s.params.containerModifierClass + s.params.effect);\n\t        }\n\t        if (s.params.effect === 'cube') {\n\t            s.params.resistanceRatio = 0;\n\t            s.params.slidesPerView = 1;\n\t            s.params.slidesPerColumn = 1;\n\t            s.params.slidesPerGroup = 1;\n\t            s.params.centeredSlides = false;\n\t            s.params.spaceBetween = 0;\n\t            s.params.virtualTranslate = true;\n\t            s.params.setWrapperSize = false;\n\t        }\n\t        if (s.params.effect === 'fade' || s.params.effect === 'flip') {\n\t            s.params.slidesPerView = 1;\n\t            s.params.slidesPerColumn = 1;\n\t            s.params.slidesPerGroup = 1;\n\t            s.params.watchSlidesProgress = true;\n\t            s.params.spaceBetween = 0;\n\t            s.params.setWrapperSize = false;\n\t            if (typeof initialVirtualTranslate === 'undefined') {\n\t                s.params.virtualTranslate = true;\n\t            }\n\t        }\n\t        \n\t        // Grab Cursor\n\t        if (s.params.grabCursor && s.support.touch) {\n\t            s.params.grabCursor = false;\n\t        }\n\t        \n\t        // Wrapper\n\t        s.wrapper = s.container.children('.' + s.params.wrapperClass);\n\t        \n\t        // Pagination\n\t        if (s.params.pagination) {\n\t            s.paginationContainer = $(s.params.pagination);\n\t            if (s.params.uniqueNavElements && typeof s.params.pagination === 'string' && s.paginationContainer.length > 1 && s.container.find(s.params.pagination).length === 1) {\n\t                s.paginationContainer = s.container.find(s.params.pagination);\n\t            }\n\t        \n\t            if (s.params.paginationType === 'bullets' && s.params.paginationClickable) {\n\t                s.paginationContainer.addClass(s.params.paginationModifierClass + 'clickable');\n\t            }\n\t            else {\n\t                s.params.paginationClickable = false;\n\t            }\n\t            s.paginationContainer.addClass(s.params.paginationModifierClass + s.params.paginationType);\n\t        }\n\t        // Next/Prev Buttons\n\t        if (s.params.nextButton || s.params.prevButton) {\n\t            if (s.params.nextButton) {\n\t                s.nextButton = $(s.params.nextButton);\n\t                if (s.params.uniqueNavElements && typeof s.params.nextButton === 'string' && s.nextButton.length > 1 && s.container.find(s.params.nextButton).length === 1) {\n\t                    s.nextButton = s.container.find(s.params.nextButton);\n\t                }\n\t            }\n\t            if (s.params.prevButton) {\n\t                s.prevButton = $(s.params.prevButton);\n\t                if (s.params.uniqueNavElements && typeof s.params.prevButton === 'string' && s.prevButton.length > 1 && s.container.find(s.params.prevButton).length === 1) {\n\t                    s.prevButton = s.container.find(s.params.prevButton);\n\t                }\n\t            }\n\t        }\n\t        \n\t        // Is Horizontal\n\t        s.isHorizontal = function () {\n\t            return s.params.direction === 'horizontal';\n\t        };\n\t        // s.isH = isH;\n\t        \n\t        // RTL\n\t        s.rtl = s.isHorizontal() && (s.container[0].dir.toLowerCase() === 'rtl' || s.container.css('direction') === 'rtl');\n\t        if (s.rtl) {\n\t            s.classNames.push(s.params.containerModifierClass + 'rtl');\n\t        }\n\t        \n\t        // Wrong RTL support\n\t        if (s.rtl) {\n\t            s.wrongRTL = s.wrapper.css('display') === '-webkit-box';\n\t        }\n\t        \n\t        // Columns\n\t        if (s.params.slidesPerColumn > 1) {\n\t            s.classNames.push(s.params.containerModifierClass + 'multirow');\n\t        }\n\t        \n\t        // Check for Android\n\t        if (s.device.android) {\n\t            s.classNames.push(s.params.containerModifierClass + 'android');\n\t        }\n\t        \n\t        // Add classes\n\t        s.container.addClass(s.classNames.join(' '));\n\t        \n\t        // Translate\n\t        s.translate = 0;\n\t        \n\t        // Progress\n\t        s.progress = 0;\n\t        \n\t        // Velocity\n\t        s.velocity = 0;\n\t        \n\t        /*=========================\n\t          Locks, unlocks\n\t          ===========================*/\n\t        s.lockSwipeToNext = function () {\n\t            s.params.allowSwipeToNext = false;\n\t            if (s.params.allowSwipeToPrev === false && s.params.grabCursor) {\n\t                s.unsetGrabCursor();\n\t            }\n\t        };\n\t        s.lockSwipeToPrev = function () {\n\t            s.params.allowSwipeToPrev = false;\n\t            if (s.params.allowSwipeToNext === false && s.params.grabCursor) {\n\t                s.unsetGrabCursor();\n\t            }\n\t        };\n\t        s.lockSwipes = function () {\n\t            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = false;\n\t            if (s.params.grabCursor) s.unsetGrabCursor();\n\t        };\n\t        s.unlockSwipeToNext = function () {\n\t            s.params.allowSwipeToNext = true;\n\t            if (s.params.allowSwipeToPrev === true && s.params.grabCursor) {\n\t                s.setGrabCursor();\n\t            }\n\t        };\n\t        s.unlockSwipeToPrev = function () {\n\t            s.params.allowSwipeToPrev = true;\n\t            if (s.params.allowSwipeToNext === true && s.params.grabCursor) {\n\t                s.setGrabCursor();\n\t            }\n\t        };\n\t        s.unlockSwipes = function () {\n\t            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = true;\n\t            if (s.params.grabCursor) s.setGrabCursor();\n\t        };\n\t        \n\t        /*=========================\n\t          Round helper\n\t          ===========================*/\n\t        function round(a) {\n\t            return Math.floor(a);\n\t        }\n\t        /*=========================\n\t          Set grab cursor\n\t          ===========================*/\n\t        s.setGrabCursor = function(moving) {\n\t            s.container[0].style.cursor = 'move';\n\t            s.container[0].style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n\t            s.container[0].style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n\t            s.container[0].style.cursor = moving ? 'grabbing': 'grab';\n\t        };\n\t        s.unsetGrabCursor = function () {\n\t            s.container[0].style.cursor = '';\n\t        };\n\t        if (s.params.grabCursor) {\n\t            s.setGrabCursor();\n\t        }\n\t        /*=========================\n\t          Update on Images Ready\n\t          ===========================*/\n\t        s.imagesToLoad = [];\n\t        s.imagesLoaded = 0;\n\t        \n\t        s.loadImage = function (imgElement, src, srcset, sizes, checkForComplete, callback) {\n\t            var image;\n\t            function onReady () {\n\t                if (callback) callback();\n\t            }\n\t            if (!imgElement.complete || !checkForComplete) {\n\t                if (src) {\n\t                    image = new window.Image();\n\t                    image.onload = onReady;\n\t                    image.onerror = onReady;\n\t                    if (sizes) {\n\t                        image.sizes = sizes;\n\t                    }\n\t                    if (srcset) {\n\t                        image.srcset = srcset;\n\t                    }\n\t                    if (src) {\n\t                        image.src = src;\n\t                    }\n\t                } else {\n\t                    onReady();\n\t                }\n\t        \n\t            } else {//image already loaded...\n\t                onReady();\n\t            }\n\t        };\n\t        s.preloadImages = function () {\n\t            s.imagesToLoad = s.container.find('img');\n\t            function _onReady() {\n\t                if (typeof s === 'undefined' || s === null) return;\n\t                if (s.imagesLoaded !== undefined) s.imagesLoaded++;\n\t                if (s.imagesLoaded === s.imagesToLoad.length) {\n\t                    if (s.params.updateOnImagesReady) s.update();\n\t                    s.emit('onImagesReady', s);\n\t                }\n\t            }\n\t            for (var i = 0; i < s.imagesToLoad.length; i++) {\n\t                s.loadImage(s.imagesToLoad[i], (s.imagesToLoad[i].currentSrc || s.imagesToLoad[i].getAttribute('src')), (s.imagesToLoad[i].srcset || s.imagesToLoad[i].getAttribute('srcset')), s.imagesToLoad[i].sizes || s.imagesToLoad[i].getAttribute('sizes'), true, _onReady);\n\t            }\n\t        };\n\t        \n\t        /*=========================\n\t          Autoplay\n\t          ===========================*/\n\t        s.autoplayTimeoutId = undefined;\n\t        s.autoplaying = false;\n\t        s.autoplayPaused = false;\n\t        function autoplay() {\n\t            var autoplayDelay = s.params.autoplay;\n\t            var activeSlide = s.slides.eq(s.activeIndex);\n\t            if (activeSlide.attr('data-swiper-autoplay')) {\n\t                autoplayDelay = activeSlide.attr('data-swiper-autoplay') || s.params.autoplay;\n\t            }\n\t            s.autoplayTimeoutId = setTimeout(function () {\n\t                if (s.params.loop) {\n\t                    s.fixLoop();\n\t                    s._slideNext();\n\t                    s.emit('onAutoplay', s);\n\t                }\n\t                else {\n\t                    if (!s.isEnd) {\n\t                        s._slideNext();\n\t                        s.emit('onAutoplay', s);\n\t                    }\n\t                    else {\n\t                        if (!params.autoplayStopOnLast) {\n\t                            s._slideTo(0);\n\t                            s.emit('onAutoplay', s);\n\t                        }\n\t                        else {\n\t                            s.stopAutoplay();\n\t                        }\n\t                    }\n\t                }\n\t            }, autoplayDelay);\n\t        }\n\t        s.startAutoplay = function () {\n\t            if (typeof s.autoplayTimeoutId !== 'undefined') return false;\n\t            if (!s.params.autoplay) return false;\n\t            if (s.autoplaying) return false;\n\t            s.autoplaying = true;\n\t            s.emit('onAutoplayStart', s);\n\t            autoplay();\n\t        };\n\t        s.stopAutoplay = function (internal) {\n\t            if (!s.autoplayTimeoutId) return;\n\t            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);\n\t            s.autoplaying = false;\n\t            s.autoplayTimeoutId = undefined;\n\t            s.emit('onAutoplayStop', s);\n\t        };\n\t        s.pauseAutoplay = function (speed) {\n\t            if (s.autoplayPaused) return;\n\t            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);\n\t            s.autoplayPaused = true;\n\t            if (speed === 0) {\n\t                s.autoplayPaused = false;\n\t                autoplay();\n\t            }\n\t            else {\n\t                s.wrapper.transitionEnd(function () {\n\t                    if (!s) return;\n\t                    s.autoplayPaused = false;\n\t                    if (!s.autoplaying) {\n\t                        s.stopAutoplay();\n\t                    }\n\t                    else {\n\t                        autoplay();\n\t                    }\n\t                });\n\t            }\n\t        };\n\t        /*=========================\n\t          Min/Max Translate\n\t          ===========================*/\n\t        s.minTranslate = function () {\n\t            return (-s.snapGrid[0]);\n\t        };\n\t        s.maxTranslate = function () {\n\t            return (-s.snapGrid[s.snapGrid.length - 1]);\n\t        };\n\t        /*=========================\n\t          Slider/slides sizes\n\t          ===========================*/\n\t        s.updateAutoHeight = function () {\n\t            var activeSlides = [];\n\t            var newHeight = 0;\n\t        \n\t            // Find slides currently in view\n\t            if(s.params.slidesPerView !== 'auto' && s.params.slidesPerView > 1) {\n\t                for (i = 0; i < Math.ceil(s.params.slidesPerView); i++) {\n\t                    var index = s.activeIndex + i;\n\t                    if(index > s.slides.length) break;\n\t                    activeSlides.push(s.slides.eq(index)[0]);\n\t                }\n\t            } else {\n\t                activeSlides.push(s.slides.eq(s.activeIndex)[0]);\n\t            }\n\t        \n\t            // Find new height from heighest slide in view\n\t            for (i = 0; i < activeSlides.length; i++) {\n\t                if (typeof activeSlides[i] !== 'undefined') {\n\t                    var height = activeSlides[i].offsetHeight;\n\t                    newHeight = height > newHeight ? height : newHeight;\n\t                }\n\t            }\n\t        \n\t            // Update Height\n\t            if (newHeight) s.wrapper.css('height', newHeight + 'px');\n\t        };\n\t        s.updateContainerSize = function () {\n\t            var width, height;\n\t            if (typeof s.params.width !== 'undefined') {\n\t                width = s.params.width;\n\t            }\n\t            else {\n\t                width = s.container[0].clientWidth;\n\t            }\n\t            if (typeof s.params.height !== 'undefined') {\n\t                height = s.params.height;\n\t            }\n\t            else {\n\t                height = s.container[0].clientHeight;\n\t            }\n\t            if (width === 0 && s.isHorizontal() || height === 0 && !s.isHorizontal()) {\n\t                return;\n\t            }\n\t        \n\t            //Subtract paddings\n\t            width = width - parseInt(s.container.css('padding-left'), 10) - parseInt(s.container.css('padding-right'), 10);\n\t            height = height - parseInt(s.container.css('padding-top'), 10) - parseInt(s.container.css('padding-bottom'), 10);\n\t        \n\t            // Store values\n\t            s.width = width;\n\t            s.height = height;\n\t            s.size = s.isHorizontal() ? s.width : s.height;\n\t        };\n\t        \n\t        s.updateSlidesSize = function () {\n\t            s.slides = s.wrapper.children('.' + s.params.slideClass);\n\t            s.snapGrid = [];\n\t            s.slidesGrid = [];\n\t            s.slidesSizesGrid = [];\n\t        \n\t            var spaceBetween = s.params.spaceBetween,\n\t                slidePosition = -s.params.slidesOffsetBefore,\n\t                i,\n\t                prevSlideSize = 0,\n\t                index = 0;\n\t            if (typeof s.size === 'undefined') return;\n\t            if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n\t                spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * s.size;\n\t            }\n\t        \n\t            s.virtualSize = -spaceBetween;\n\t            // reset margins\n\t            if (s.rtl) s.slides.css({marginLeft: '', marginTop: ''});\n\t            else s.slides.css({marginRight: '', marginBottom: ''});\n\t        \n\t            var slidesNumberEvenToRows;\n\t            if (s.params.slidesPerColumn > 1) {\n\t                if (Math.floor(s.slides.length / s.params.slidesPerColumn) === s.slides.length / s.params.slidesPerColumn) {\n\t                    slidesNumberEvenToRows = s.slides.length;\n\t                }\n\t                else {\n\t                    slidesNumberEvenToRows = Math.ceil(s.slides.length / s.params.slidesPerColumn) * s.params.slidesPerColumn;\n\t                }\n\t                if (s.params.slidesPerView !== 'auto' && s.params.slidesPerColumnFill === 'row') {\n\t                    slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, s.params.slidesPerView * s.params.slidesPerColumn);\n\t                }\n\t            }\n\t        \n\t            // Calc slides\n\t            var slideSize;\n\t            var slidesPerColumn = s.params.slidesPerColumn;\n\t            var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n\t            var numFullColumns = slidesPerRow - (s.params.slidesPerColumn * slidesPerRow - s.slides.length);\n\t            for (i = 0; i < s.slides.length; i++) {\n\t                slideSize = 0;\n\t                var slide = s.slides.eq(i);\n\t                if (s.params.slidesPerColumn > 1) {\n\t                    // Set slides order\n\t                    var newSlideOrderIndex;\n\t                    var column, row;\n\t                    if (s.params.slidesPerColumnFill === 'column') {\n\t                        column = Math.floor(i / slidesPerColumn);\n\t                        row = i - column * slidesPerColumn;\n\t                        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn-1)) {\n\t                            if (++row >= slidesPerColumn) {\n\t                                row = 0;\n\t                                column++;\n\t                            }\n\t                        }\n\t                        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n\t                        slide\n\t                            .css({\n\t                                '-webkit-box-ordinal-group': newSlideOrderIndex,\n\t                                '-moz-box-ordinal-group': newSlideOrderIndex,\n\t                                '-ms-flex-order': newSlideOrderIndex,\n\t                                '-webkit-order': newSlideOrderIndex,\n\t                                'order': newSlideOrderIndex\n\t                            });\n\t                    }\n\t                    else {\n\t                        row = Math.floor(i / slidesPerRow);\n\t                        column = i - row * slidesPerRow;\n\t                    }\n\t                    slide\n\t                        .css(\n\t                            'margin-' + (s.isHorizontal() ? 'top' : 'left'),\n\t                            (row !== 0 && s.params.spaceBetween) && (s.params.spaceBetween + 'px')\n\t                        )\n\t                        .attr('data-swiper-column', column)\n\t                        .attr('data-swiper-row', row);\n\t        \n\t                }\n\t                if (slide.css('display') === 'none') continue;\n\t                if (s.params.slidesPerView === 'auto') {\n\t                    slideSize = s.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n\t                    if (s.params.roundLengths) slideSize = round(slideSize);\n\t                }\n\t                else {\n\t                    slideSize = (s.size - (s.params.slidesPerView - 1) * spaceBetween) / s.params.slidesPerView;\n\t                    if (s.params.roundLengths) slideSize = round(slideSize);\n\t        \n\t                    if (s.isHorizontal()) {\n\t                        s.slides[i].style.width = slideSize + 'px';\n\t                    }\n\t                    else {\n\t                        s.slides[i].style.height = slideSize + 'px';\n\t                    }\n\t                }\n\t                s.slides[i].swiperSlideSize = slideSize;\n\t                s.slidesSizesGrid.push(slideSize);\n\t        \n\t        \n\t                if (s.params.centeredSlides) {\n\t                    slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n\t                    if (i === 0) slidePosition = slidePosition - s.size / 2 - spaceBetween;\n\t                    if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n\t                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);\n\t                    s.slidesGrid.push(slidePosition);\n\t                }\n\t                else {\n\t                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);\n\t                    s.slidesGrid.push(slidePosition);\n\t                    slidePosition = slidePosition + slideSize + spaceBetween;\n\t                }\n\t        \n\t                s.virtualSize += slideSize + spaceBetween;\n\t        \n\t                prevSlideSize = slideSize;\n\t        \n\t                index ++;\n\t            }\n\t            s.virtualSize = Math.max(s.virtualSize, s.size) + s.params.slidesOffsetAfter;\n\t            var newSlidesGrid;\n\t        \n\t            if (\n\t                s.rtl && s.wrongRTL && (s.params.effect === 'slide' || s.params.effect === 'coverflow')) {\n\t                s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n\t            }\n\t            if (!s.support.flexbox || s.params.setWrapperSize) {\n\t                if (s.isHorizontal()) s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n\t                else s.wrapper.css({height: s.virtualSize + s.params.spaceBetween + 'px'});\n\t            }\n\t        \n\t            if (s.params.slidesPerColumn > 1) {\n\t                s.virtualSize = (slideSize + s.params.spaceBetween) * slidesNumberEvenToRows;\n\t                s.virtualSize = Math.ceil(s.virtualSize / s.params.slidesPerColumn) - s.params.spaceBetween;\n\t                if (s.isHorizontal()) s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n\t                else s.wrapper.css({height: s.virtualSize + s.params.spaceBetween + 'px'});\n\t                if (s.params.centeredSlides) {\n\t                    newSlidesGrid = [];\n\t                    for (i = 0; i < s.snapGrid.length; i++) {\n\t                        if (s.snapGrid[i] < s.virtualSize + s.snapGrid[0]) newSlidesGrid.push(s.snapGrid[i]);\n\t                    }\n\t                    s.snapGrid = newSlidesGrid;\n\t                }\n\t            }\n\t        \n\t            // Remove last grid elements depending on width\n\t            if (!s.params.centeredSlides) {\n\t                newSlidesGrid = [];\n\t                for (i = 0; i < s.snapGrid.length; i++) {\n\t                    if (s.snapGrid[i] <= s.virtualSize - s.size) {\n\t                        newSlidesGrid.push(s.snapGrid[i]);\n\t                    }\n\t                }\n\t                s.snapGrid = newSlidesGrid;\n\t                if (Math.floor(s.virtualSize - s.size) - Math.floor(s.snapGrid[s.snapGrid.length - 1]) > 1) {\n\t                    s.snapGrid.push(s.virtualSize - s.size);\n\t                }\n\t            }\n\t            if (s.snapGrid.length === 0) s.snapGrid = [0];\n\t        \n\t            if (s.params.spaceBetween !== 0) {\n\t                if (s.isHorizontal()) {\n\t                    if (s.rtl) s.slides.css({marginLeft: spaceBetween + 'px'});\n\t                    else s.slides.css({marginRight: spaceBetween + 'px'});\n\t                }\n\t                else s.slides.css({marginBottom: spaceBetween + 'px'});\n\t            }\n\t            if (s.params.watchSlidesProgress) {\n\t                s.updateSlidesOffset();\n\t            }\n\t        };\n\t        s.updateSlidesOffset = function () {\n\t            for (var i = 0; i < s.slides.length; i++) {\n\t                s.slides[i].swiperSlideOffset = s.isHorizontal() ? s.slides[i].offsetLeft : s.slides[i].offsetTop;\n\t            }\n\t        };\n\t        \n\t        /*=========================\n\t          Slider/slides progress\n\t          ===========================*/\n\t        s.updateSlidesProgress = function (translate) {\n\t            if (typeof translate === 'undefined') {\n\t                translate = s.translate || 0;\n\t            }\n\t            if (s.slides.length === 0) return;\n\t            if (typeof s.slides[0].swiperSlideOffset === 'undefined') s.updateSlidesOffset();\n\t        \n\t            var offsetCenter = -translate;\n\t            if (s.rtl) offsetCenter = translate;\n\t        \n\t            // Visible Slides\n\t            s.slides.removeClass(s.params.slideVisibleClass);\n\t            for (var i = 0; i < s.slides.length; i++) {\n\t                var slide = s.slides[i];\n\t                var slideProgress = (offsetCenter + (s.params.centeredSlides ? s.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + s.params.spaceBetween);\n\t                if (s.params.watchSlidesVisibility) {\n\t                    var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n\t                    var slideAfter = slideBefore + s.slidesSizesGrid[i];\n\t                    var isVisible =\n\t                        (slideBefore >= 0 && slideBefore < s.size) ||\n\t                        (slideAfter > 0 && slideAfter <= s.size) ||\n\t                        (slideBefore <= 0 && slideAfter >= s.size);\n\t                    if (isVisible) {\n\t                        s.slides.eq(i).addClass(s.params.slideVisibleClass);\n\t                    }\n\t                }\n\t                slide.progress = s.rtl ? -slideProgress : slideProgress;\n\t            }\n\t        };\n\t        s.updateProgress = function (translate) {\n\t            if (typeof translate === 'undefined') {\n\t                translate = s.translate || 0;\n\t            }\n\t            var translatesDiff = s.maxTranslate() - s.minTranslate();\n\t            var wasBeginning = s.isBeginning;\n\t            var wasEnd = s.isEnd;\n\t            if (translatesDiff === 0) {\n\t                s.progress = 0;\n\t                s.isBeginning = s.isEnd = true;\n\t            }\n\t            else {\n\t                s.progress = (translate - s.minTranslate()) / (translatesDiff);\n\t                s.isBeginning = s.progress <= 0;\n\t                s.isEnd = s.progress >= 1;\n\t            }\n\t            if (s.isBeginning && !wasBeginning) s.emit('onReachBeginning', s);\n\t            if (s.isEnd && !wasEnd) s.emit('onReachEnd', s);\n\t        \n\t            if (s.params.watchSlidesProgress) s.updateSlidesProgress(translate);\n\t            s.emit('onProgress', s, s.progress);\n\t        };\n\t        s.updateActiveIndex = function () {\n\t            var translate = s.rtl ? s.translate : -s.translate;\n\t            var newActiveIndex, i, snapIndex;\n\t            for (i = 0; i < s.slidesGrid.length; i ++) {\n\t                if (typeof s.slidesGrid[i + 1] !== 'undefined') {\n\t                    if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1] - (s.slidesGrid[i + 1] - s.slidesGrid[i]) / 2) {\n\t                        newActiveIndex = i;\n\t                    }\n\t                    else if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1]) {\n\t                        newActiveIndex = i + 1;\n\t                    }\n\t                }\n\t                else {\n\t                    if (translate >= s.slidesGrid[i]) {\n\t                        newActiveIndex = i;\n\t                    }\n\t                }\n\t            }\n\t            // Normalize slideIndex\n\t            if(s.params.normalizeSlideIndex){\n\t                if (newActiveIndex < 0 || typeof newActiveIndex === 'undefined') newActiveIndex = 0;\n\t            }\n\t            // for (i = 0; i < s.slidesGrid.length; i++) {\n\t                // if (- translate >= s.slidesGrid[i]) {\n\t                    // newActiveIndex = i;\n\t                // }\n\t            // }\n\t            snapIndex = Math.floor(newActiveIndex / s.params.slidesPerGroup);\n\t            if (snapIndex >= s.snapGrid.length) snapIndex = s.snapGrid.length - 1;\n\t        \n\t            if (newActiveIndex === s.activeIndex) {\n\t                return;\n\t            }\n\t            s.snapIndex = snapIndex;\n\t            s.previousIndex = s.activeIndex;\n\t            s.activeIndex = newActiveIndex;\n\t            s.updateClasses();\n\t            s.updateRealIndex();\n\t        };\n\t        s.updateRealIndex = function(){\n\t            s.realIndex = s.slides.eq(s.activeIndex).attr('data-swiper-slide-index') || s.activeIndex;\n\t        };\n\t        \n\t        /*=========================\n\t          Classes\n\t          ===========================*/\n\t        s.updateClasses = function () {\n\t            s.slides.removeClass(s.params.slideActiveClass + ' ' + s.params.slideNextClass + ' ' + s.params.slidePrevClass + ' ' + s.params.slideDuplicateActiveClass + ' ' + s.params.slideDuplicateNextClass + ' ' + s.params.slideDuplicatePrevClass);\n\t            var activeSlide = s.slides.eq(s.activeIndex);\n\t            // Active classes\n\t            activeSlide.addClass(s.params.slideActiveClass);\n\t            if (params.loop) {\n\t                // Duplicate to all looped slides\n\t                if (activeSlide.hasClass(s.params.slideDuplicateClass)) {\n\t                    s.wrapper.children('.' + s.params.slideClass + ':not(.' + s.params.slideDuplicateClass + ')[data-swiper-slide-index=\"' + s.realIndex + '\"]').addClass(s.params.slideDuplicateActiveClass);\n\t                }\n\t                else {\n\t                    s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + s.realIndex + '\"]').addClass(s.params.slideDuplicateActiveClass);\n\t                }\n\t            }\n\t            // Next Slide\n\t            var nextSlide = activeSlide.next('.' + s.params.slideClass).addClass(s.params.slideNextClass);\n\t            if (s.params.loop && nextSlide.length === 0) {\n\t                nextSlide = s.slides.eq(0);\n\t                nextSlide.addClass(s.params.slideNextClass);\n\t            }\n\t            // Prev Slide\n\t            var prevSlide = activeSlide.prev('.' + s.params.slideClass).addClass(s.params.slidePrevClass);\n\t            if (s.params.loop && prevSlide.length === 0) {\n\t                prevSlide = s.slides.eq(-1);\n\t                prevSlide.addClass(s.params.slidePrevClass);\n\t            }\n\t            if (params.loop) {\n\t                // Duplicate to all looped slides\n\t                if (nextSlide.hasClass(s.params.slideDuplicateClass)) {\n\t                    s.wrapper.children('.' + s.params.slideClass + ':not(.' + s.params.slideDuplicateClass + ')[data-swiper-slide-index=\"' + nextSlide.attr('data-swiper-slide-index') + '\"]').addClass(s.params.slideDuplicateNextClass);\n\t                }\n\t                else {\n\t                    s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + nextSlide.attr('data-swiper-slide-index') + '\"]').addClass(s.params.slideDuplicateNextClass);\n\t                }\n\t                if (prevSlide.hasClass(s.params.slideDuplicateClass)) {\n\t                    s.wrapper.children('.' + s.params.slideClass + ':not(.' + s.params.slideDuplicateClass + ')[data-swiper-slide-index=\"' + prevSlide.attr('data-swiper-slide-index') + '\"]').addClass(s.params.slideDuplicatePrevClass);\n\t                }\n\t                else {\n\t                    s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + prevSlide.attr('data-swiper-slide-index') + '\"]').addClass(s.params.slideDuplicatePrevClass);\n\t                }\n\t            }\n\t        \n\t            // Pagination\n\t            if (s.paginationContainer && s.paginationContainer.length > 0) {\n\t                // Current/Total\n\t                var current,\n\t                    total = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;\n\t                if (s.params.loop) {\n\t                    current = Math.ceil((s.activeIndex - s.loopedSlides)/s.params.slidesPerGroup);\n\t                    if (current > s.slides.length - 1 - s.loopedSlides * 2) {\n\t                        current = current - (s.slides.length - s.loopedSlides * 2);\n\t                    }\n\t                    if (current > total - 1) current = current - total;\n\t                    if (current < 0 && s.params.paginationType !== 'bullets') current = total + current;\n\t                }\n\t                else {\n\t                    if (typeof s.snapIndex !== 'undefined') {\n\t                        current = s.snapIndex;\n\t                    }\n\t                    else {\n\t                        current = s.activeIndex || 0;\n\t                    }\n\t                }\n\t                // Types\n\t                if (s.params.paginationType === 'bullets' && s.bullets && s.bullets.length > 0) {\n\t                    s.bullets.removeClass(s.params.bulletActiveClass);\n\t                    if (s.paginationContainer.length > 1) {\n\t                        s.bullets.each(function () {\n\t                            if ($(this).index() === current) $(this).addClass(s.params.bulletActiveClass);\n\t                        });\n\t                    }\n\t                    else {\n\t                        s.bullets.eq(current).addClass(s.params.bulletActiveClass);\n\t                    }\n\t                }\n\t                if (s.params.paginationType === 'fraction') {\n\t                    s.paginationContainer.find('.' + s.params.paginationCurrentClass).text(current + 1);\n\t                    s.paginationContainer.find('.' + s.params.paginationTotalClass).text(total);\n\t                }\n\t                if (s.params.paginationType === 'progress') {\n\t                    var scale = (current + 1) / total,\n\t                        scaleX = scale,\n\t                        scaleY = 1;\n\t                    if (!s.isHorizontal()) {\n\t                        scaleY = scale;\n\t                        scaleX = 1;\n\t                    }\n\t                    s.paginationContainer.find('.' + s.params.paginationProgressbarClass).transform('translate3d(0,0,0) scaleX(' + scaleX + ') scaleY(' + scaleY + ')').transition(s.params.speed);\n\t                }\n\t                if (s.params.paginationType === 'custom' && s.params.paginationCustomRender) {\n\t                    s.paginationContainer.html(s.params.paginationCustomRender(s, current + 1, total));\n\t                    s.emit('onPaginationRendered', s, s.paginationContainer[0]);\n\t                }\n\t            }\n\t        \n\t            // Next/active buttons\n\t            if (!s.params.loop) {\n\t                if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {\n\t                    if (s.isBeginning) {\n\t                        s.prevButton.addClass(s.params.buttonDisabledClass);\n\t                        if (s.params.a11y && s.a11y) s.a11y.disable(s.prevButton);\n\t                    }\n\t                    else {\n\t                        s.prevButton.removeClass(s.params.buttonDisabledClass);\n\t                        if (s.params.a11y && s.a11y) s.a11y.enable(s.prevButton);\n\t                    }\n\t                }\n\t                if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {\n\t                    if (s.isEnd) {\n\t                        s.nextButton.addClass(s.params.buttonDisabledClass);\n\t                        if (s.params.a11y && s.a11y) s.a11y.disable(s.nextButton);\n\t                    }\n\t                    else {\n\t                        s.nextButton.removeClass(s.params.buttonDisabledClass);\n\t                        if (s.params.a11y && s.a11y) s.a11y.enable(s.nextButton);\n\t                    }\n\t                }\n\t            }\n\t        };\n\t        \n\t        /*=========================\n\t          Pagination\n\t          ===========================*/\n\t        s.updatePagination = function () {\n\t            if (!s.params.pagination) return;\n\t            if (s.paginationContainer && s.paginationContainer.length > 0) {\n\t                var paginationHTML = '';\n\t                if (s.params.paginationType === 'bullets') {\n\t                    var numberOfBullets = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;\n\t                    for (var i = 0; i < numberOfBullets; i++) {\n\t                        if (s.params.paginationBulletRender) {\n\t                            paginationHTML += s.params.paginationBulletRender(s, i, s.params.bulletClass);\n\t                        }\n\t                        else {\n\t                            paginationHTML += '<' + s.params.paginationElement+' class=\"' + s.params.bulletClass + '\"></' + s.params.paginationElement + '>';\n\t                        }\n\t                    }\n\t                    s.paginationContainer.html(paginationHTML);\n\t                    s.bullets = s.paginationContainer.find('.' + s.params.bulletClass);\n\t                    if (s.params.paginationClickable && s.params.a11y && s.a11y) {\n\t                        s.a11y.initPagination();\n\t                    }\n\t                }\n\t                if (s.params.paginationType === 'fraction') {\n\t                    if (s.params.paginationFractionRender) {\n\t                        paginationHTML = s.params.paginationFractionRender(s, s.params.paginationCurrentClass, s.params.paginationTotalClass);\n\t                    }\n\t                    else {\n\t                        paginationHTML =\n\t                            '<span class=\"' + s.params.paginationCurrentClass + '\"></span>' +\n\t                            ' / ' +\n\t                            '<span class=\"' + s.params.paginationTotalClass+'\"></span>';\n\t                    }\n\t                    s.paginationContainer.html(paginationHTML);\n\t                }\n\t                if (s.params.paginationType === 'progress') {\n\t                    if (s.params.paginationProgressRender) {\n\t                        paginationHTML = s.params.paginationProgressRender(s, s.params.paginationProgressbarClass);\n\t                    }\n\t                    else {\n\t                        paginationHTML = '<span class=\"' + s.params.paginationProgressbarClass + '\"></span>';\n\t                    }\n\t                    s.paginationContainer.html(paginationHTML);\n\t                }\n\t                if (s.params.paginationType !== 'custom') {\n\t                    s.emit('onPaginationRendered', s, s.paginationContainer[0]);\n\t                }\n\t            }\n\t        };\n\t        /*=========================\n\t          Common update method\n\t          ===========================*/\n\t        s.update = function (updateTranslate) {\n\t            s.updateContainerSize();\n\t            s.updateSlidesSize();\n\t            s.updateProgress();\n\t            s.updatePagination();\n\t            s.updateClasses();\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                s.scrollbar.set();\n\t            }\n\t            function forceSetTranslate() {\n\t                var translate = s.rtl ? -s.translate : s.translate;\n\t                newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());\n\t                s.setWrapperTranslate(newTranslate);\n\t                s.updateActiveIndex();\n\t                s.updateClasses();\n\t            }\n\t            if (updateTranslate) {\n\t                var translated, newTranslate;\n\t                if (s.controller && s.controller.spline) {\n\t                    s.controller.spline = undefined;\n\t                }\n\t                if (s.params.freeMode) {\n\t                    forceSetTranslate();\n\t                    if (s.params.autoHeight) {\n\t                        s.updateAutoHeight();\n\t                    }\n\t                }\n\t                else {\n\t                    if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {\n\t                        translated = s.slideTo(s.slides.length - 1, 0, false, true);\n\t                    }\n\t                    else {\n\t                        translated = s.slideTo(s.activeIndex, 0, false, true);\n\t                    }\n\t                    if (!translated) {\n\t                        forceSetTranslate();\n\t                    }\n\t                }\n\t            }\n\t            else if (s.params.autoHeight) {\n\t                s.updateAutoHeight();\n\t            }\n\t        };\n\t        \n\t        /*=========================\n\t          Resize Handler\n\t          ===========================*/\n\t        s.onResize = function (forceUpdatePagination) {\n\t            //Breakpoints\n\t            if (s.params.breakpoints) {\n\t                s.setBreakpoint();\n\t            }\n\t        \n\t            // Disable locks on resize\n\t            var allowSwipeToPrev = s.params.allowSwipeToPrev;\n\t            var allowSwipeToNext = s.params.allowSwipeToNext;\n\t            s.params.allowSwipeToPrev = s.params.allowSwipeToNext = true;\n\t        \n\t            s.updateContainerSize();\n\t            s.updateSlidesSize();\n\t            if (s.params.slidesPerView === 'auto' || s.params.freeMode || forceUpdatePagination) s.updatePagination();\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                s.scrollbar.set();\n\t            }\n\t            if (s.controller && s.controller.spline) {\n\t                s.controller.spline = undefined;\n\t            }\n\t            var slideChangedBySlideTo = false;\n\t            if (s.params.freeMode) {\n\t                var newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());\n\t                s.setWrapperTranslate(newTranslate);\n\t                s.updateActiveIndex();\n\t                s.updateClasses();\n\t        \n\t                if (s.params.autoHeight) {\n\t                    s.updateAutoHeight();\n\t                }\n\t            }\n\t            else {\n\t                s.updateClasses();\n\t                if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {\n\t                    slideChangedBySlideTo = s.slideTo(s.slides.length - 1, 0, false, true);\n\t                }\n\t                else {\n\t                    slideChangedBySlideTo = s.slideTo(s.activeIndex, 0, false, true);\n\t                }\n\t            }\n\t            if (s.params.lazyLoading && !slideChangedBySlideTo && s.lazy) {\n\t                s.lazy.load();\n\t            }\n\t            // Return locks after resize\n\t            s.params.allowSwipeToPrev = allowSwipeToPrev;\n\t            s.params.allowSwipeToNext = allowSwipeToNext;\n\t        };\n\t        \n\t        /*=========================\n\t          Events\n\t          ===========================*/\n\t        \n\t        //Define Touch Events\n\t        s.touchEventsDesktop = {start: 'mousedown', move: 'mousemove', end: 'mouseup'};\n\t        if (window.navigator.pointerEnabled) s.touchEventsDesktop = {start: 'pointerdown', move: 'pointermove', end: 'pointerup'};\n\t        else if (window.navigator.msPointerEnabled) s.touchEventsDesktop = {start: 'MSPointerDown', move: 'MSPointerMove', end: 'MSPointerUp'};\n\t        s.touchEvents = {\n\t            start : s.support.touch || !s.params.simulateTouch  ? 'touchstart' : s.touchEventsDesktop.start,\n\t            move : s.support.touch || !s.params.simulateTouch ? 'touchmove' : s.touchEventsDesktop.move,\n\t            end : s.support.touch || !s.params.simulateTouch ? 'touchend' : s.touchEventsDesktop.end\n\t        };\n\t        \n\t        \n\t        // WP8 Touch Events Fix\n\t        if (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) {\n\t            (s.params.touchEventsTarget === 'container' ? s.container : s.wrapper).addClass('swiper-wp8-' + s.params.direction);\n\t        }\n\t        \n\t        // Attach/detach events\n\t        s.initEvents = function (detach) {\n\t            var actionDom = detach ? 'off' : 'on';\n\t            var action = detach ? 'removeEventListener' : 'addEventListener';\n\t            var touchEventsTarget = s.params.touchEventsTarget === 'container' ? s.container[0] : s.wrapper[0];\n\t            var target = s.support.touch ? touchEventsTarget : document;\n\t        \n\t            var moveCapture = s.params.nested ? true : false;\n\t        \n\t            //Touch Events\n\t            if (s.browser.ie) {\n\t                touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);\n\t                target[action](s.touchEvents.move, s.onTouchMove, moveCapture);\n\t                target[action](s.touchEvents.end, s.onTouchEnd, false);\n\t            }\n\t            else {\n\t                if (s.support.touch) {\n\t                    var passiveListener = s.touchEvents.start === 'touchstart' && s.support.passiveListener && s.params.passiveListeners ? {passive: true, capture: false} : false;\n\t                    touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, passiveListener);\n\t                    touchEventsTarget[action](s.touchEvents.move, s.onTouchMove, moveCapture);\n\t                    touchEventsTarget[action](s.touchEvents.end, s.onTouchEnd, passiveListener);\n\t                }\n\t                if ((params.simulateTouch && !s.device.ios && !s.device.android) || (params.simulateTouch && !s.support.touch && s.device.ios)) {\n\t                    touchEventsTarget[action]('mousedown', s.onTouchStart, false);\n\t                    document[action]('mousemove', s.onTouchMove, moveCapture);\n\t                    document[action]('mouseup', s.onTouchEnd, false);\n\t                }\n\t            }\n\t            window[action]('resize', s.onResize);\n\t        \n\t            // Next, Prev, Index\n\t            if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {\n\t                s.nextButton[actionDom]('click', s.onClickNext);\n\t                if (s.params.a11y && s.a11y) s.nextButton[actionDom]('keydown', s.a11y.onEnterKey);\n\t            }\n\t            if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {\n\t                s.prevButton[actionDom]('click', s.onClickPrev);\n\t                if (s.params.a11y && s.a11y) s.prevButton[actionDom]('keydown', s.a11y.onEnterKey);\n\t            }\n\t            if (s.params.pagination && s.params.paginationClickable) {\n\t                s.paginationContainer[actionDom]('click', '.' + s.params.bulletClass, s.onClickIndex);\n\t                if (s.params.a11y && s.a11y) s.paginationContainer[actionDom]('keydown', '.' + s.params.bulletClass, s.a11y.onEnterKey);\n\t            }\n\t        \n\t            // Prevent Links Clicks\n\t            if (s.params.preventClicks || s.params.preventClicksPropagation) touchEventsTarget[action]('click', s.preventClicks, true);\n\t        };\n\t        s.attachEvents = function () {\n\t            s.initEvents();\n\t        };\n\t        s.detachEvents = function () {\n\t            s.initEvents(true);\n\t        };\n\t        \n\t        /*=========================\n\t          Handle Clicks\n\t          ===========================*/\n\t        // Prevent Clicks\n\t        s.allowClick = true;\n\t        s.preventClicks = function (e) {\n\t            if (!s.allowClick) {\n\t                if (s.params.preventClicks) e.preventDefault();\n\t                if (s.params.preventClicksPropagation && s.animating) {\n\t                    e.stopPropagation();\n\t                    e.stopImmediatePropagation();\n\t                }\n\t            }\n\t        };\n\t        // Clicks\n\t        s.onClickNext = function (e) {\n\t            e.preventDefault();\n\t            if (s.isEnd && !s.params.loop) return;\n\t            s.slideNext();\n\t        };\n\t        s.onClickPrev = function (e) {\n\t            e.preventDefault();\n\t            if (s.isBeginning && !s.params.loop) return;\n\t            s.slidePrev();\n\t        };\n\t        s.onClickIndex = function (e) {\n\t            e.preventDefault();\n\t            var index = $(this).index() * s.params.slidesPerGroup;\n\t            if (s.params.loop) index = index + s.loopedSlides;\n\t            s.slideTo(index);\n\t        };\n\t        \n\t        /*=========================\n\t          Handle Touches\n\t          ===========================*/\n\t        function findElementInEvent(e, selector) {\n\t            var el = $(e.target);\n\t            if (!el.is(selector)) {\n\t                if (typeof selector === 'string') {\n\t                    el = el.parents(selector);\n\t                }\n\t                else if (selector.nodeType) {\n\t                    var found;\n\t                    el.parents().each(function (index, _el) {\n\t                        if (_el === selector) found = selector;\n\t                    });\n\t                    if (!found) return undefined;\n\t                    else return selector;\n\t                }\n\t            }\n\t            if (el.length === 0) {\n\t                return undefined;\n\t            }\n\t            return el[0];\n\t        }\n\t        s.updateClickedSlide = function (e) {\n\t            var slide = findElementInEvent(e, '.' + s.params.slideClass);\n\t            var slideFound = false;\n\t            if (slide) {\n\t                for (var i = 0; i < s.slides.length; i++) {\n\t                    if (s.slides[i] === slide) slideFound = true;\n\t                }\n\t            }\n\t        \n\t            if (slide && slideFound) {\n\t                s.clickedSlide = slide;\n\t                s.clickedIndex = $(slide).index();\n\t            }\n\t            else {\n\t                s.clickedSlide = undefined;\n\t                s.clickedIndex = undefined;\n\t                return;\n\t            }\n\t            if (s.params.slideToClickedSlide && s.clickedIndex !== undefined && s.clickedIndex !== s.activeIndex) {\n\t                var slideToIndex = s.clickedIndex,\n\t                    realIndex,\n\t                    duplicatedSlides;\n\t                if (s.params.loop) {\n\t                    if (s.animating) return;\n\t                    realIndex = $(s.clickedSlide).attr('data-swiper-slide-index');\n\t                    if (s.params.centeredSlides) {\n\t                        if ((slideToIndex < s.loopedSlides - s.params.slidesPerView/2) || (slideToIndex > s.slides.length - s.loopedSlides + s.params.slidesPerView/2)) {\n\t                            s.fixLoop();\n\t                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index=\"' + realIndex + '\"]:not(.' + s.params.slideDuplicateClass + ')').eq(0).index();\n\t                            setTimeout(function () {\n\t                                s.slideTo(slideToIndex);\n\t                            }, 0);\n\t                        }\n\t                        else {\n\t                            s.slideTo(slideToIndex);\n\t                        }\n\t                    }\n\t                    else {\n\t                        if (slideToIndex > s.slides.length - s.params.slidesPerView) {\n\t                            s.fixLoop();\n\t                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index=\"' + realIndex + '\"]:not(.' + s.params.slideDuplicateClass + ')').eq(0).index();\n\t                            setTimeout(function () {\n\t                                s.slideTo(slideToIndex);\n\t                            }, 0);\n\t                        }\n\t                        else {\n\t                            s.slideTo(slideToIndex);\n\t                        }\n\t                    }\n\t                }\n\t                else {\n\t                    s.slideTo(slideToIndex);\n\t                }\n\t            }\n\t        };\n\t        \n\t        var isTouched,\n\t            isMoved,\n\t            allowTouchCallbacks,\n\t            touchStartTime,\n\t            isScrolling,\n\t            currentTranslate,\n\t            startTranslate,\n\t            allowThresholdMove,\n\t            // Form elements to match\n\t            formElements = 'input, select, textarea, button, video',\n\t            // Last click time\n\t            lastClickTime = Date.now(), clickTimeout,\n\t            //Velocities\n\t            velocities = [],\n\t            allowMomentumBounce;\n\t        \n\t        // Animating Flag\n\t        s.animating = false;\n\t        \n\t        // Touches information\n\t        s.touches = {\n\t            startX: 0,\n\t            startY: 0,\n\t            currentX: 0,\n\t            currentY: 0,\n\t            diff: 0\n\t        };\n\t        \n\t        // Touch handlers\n\t        var isTouchEvent, startMoving;\n\t        s.onTouchStart = function (e) {\n\t            if (e.originalEvent) e = e.originalEvent;\n\t            isTouchEvent = e.type === 'touchstart';\n\t            if (!isTouchEvent && 'which' in e && e.which === 3) return;\n\t            if (s.params.noSwiping && findElementInEvent(e, '.' + s.params.noSwipingClass)) {\n\t                s.allowClick = true;\n\t                return;\n\t            }\n\t            if (s.params.swipeHandler) {\n\t                if (!findElementInEvent(e, s.params.swipeHandler)) return;\n\t            }\n\t        \n\t            var startX = s.touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n\t            var startY = s.touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n\t        \n\t            // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\t            if(s.device.ios && s.params.iOSEdgeSwipeDetection && startX <= s.params.iOSEdgeSwipeThreshold) {\n\t                return;\n\t            }\n\t        \n\t            isTouched = true;\n\t            isMoved = false;\n\t            allowTouchCallbacks = true;\n\t            isScrolling = undefined;\n\t            startMoving = undefined;\n\t            s.touches.startX = startX;\n\t            s.touches.startY = startY;\n\t            touchStartTime = Date.now();\n\t            s.allowClick = true;\n\t            s.updateContainerSize();\n\t            s.swipeDirection = undefined;\n\t            if (s.params.threshold > 0) allowThresholdMove = false;\n\t            if (e.type !== 'touchstart') {\n\t                var preventDefault = true;\n\t                if ($(e.target).is(formElements)) preventDefault = false;\n\t                if (document.activeElement && $(document.activeElement).is(formElements)) {\n\t                    document.activeElement.blur();\n\t                }\n\t                if (preventDefault) {\n\t                    e.preventDefault();\n\t                }\n\t            }\n\t            s.emit('onTouchStart', s, e);\n\t        };\n\t        \n\t        s.onTouchMove = function (e) {\n\t            if (e.originalEvent) e = e.originalEvent;\n\t            if (isTouchEvent && e.type === 'mousemove') return;\n\t            if (e.preventedByNestedSwiper) {\n\t                s.touches.startX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n\t                s.touches.startY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\t                return;\n\t            }\n\t            if (s.params.onlyExternal) {\n\t                // isMoved = true;\n\t                s.allowClick = false;\n\t                if (isTouched) {\n\t                    s.touches.startX = s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n\t                    s.touches.startY = s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\t                    touchStartTime = Date.now();\n\t                }\n\t                return;\n\t            }\n\t            if (isTouchEvent && s.params.touchReleaseOnEdges && !s.params.loop) {\n\t                if (!s.isHorizontal()) {\n\t                    // Vertical\n\t                    if (\n\t                        (s.touches.currentY < s.touches.startY && s.translate <= s.maxTranslate()) ||\n\t                        (s.touches.currentY > s.touches.startY && s.translate >= s.minTranslate())\n\t                        ) {\n\t                        return;\n\t                    }\n\t                }\n\t                else {\n\t                    if (\n\t                        (s.touches.currentX < s.touches.startX && s.translate <= s.maxTranslate()) ||\n\t                        (s.touches.currentX > s.touches.startX && s.translate >= s.minTranslate())\n\t                        ) {\n\t                        return;\n\t                    }\n\t                }\n\t            }\n\t            if (isTouchEvent && document.activeElement) {\n\t                if (e.target === document.activeElement && $(e.target).is(formElements)) {\n\t                    isMoved = true;\n\t                    s.allowClick = false;\n\t                    return;\n\t                }\n\t            }\n\t            if (allowTouchCallbacks) {\n\t                s.emit('onTouchMove', s, e);\n\t            }\n\t            if (e.targetTouches && e.targetTouches.length > 1) return;\n\t        \n\t            s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n\t            s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\t        \n\t            if (typeof isScrolling === 'undefined') {\n\t                var touchAngle;\n\t                if (s.isHorizontal() && s.touches.currentY === s.touches.startY || !s.isHorizontal() && s.touches.currentX !== s.touches.startX) {\n\t                    isScrolling = false;\n\t                }\n\t                else {\n\t                    touchAngle = Math.atan2(Math.abs(s.touches.currentY - s.touches.startY), Math.abs(s.touches.currentX - s.touches.startX)) * 180 / Math.PI;\n\t                    isScrolling = s.isHorizontal() ? touchAngle > s.params.touchAngle : (90 - touchAngle > s.params.touchAngle);\n\t                }\n\t            }\n\t            if (isScrolling) {\n\t                s.emit('onTouchMoveOpposite', s, e);\n\t            }\n\t            if (typeof startMoving === 'undefined' && s.browser.ieTouch) {\n\t                if (s.touches.currentX !== s.touches.startX || s.touches.currentY !== s.touches.startY) {\n\t                    startMoving = true;\n\t                }\n\t            }\n\t            if (!isTouched) return;\n\t            if (isScrolling)  {\n\t                isTouched = false;\n\t                return;\n\t            }\n\t            if (!startMoving && s.browser.ieTouch) {\n\t                return;\n\t            }\n\t            s.allowClick = false;\n\t            s.emit('onSliderMove', s, e);\n\t            e.preventDefault();\n\t            if (s.params.touchMoveStopPropagation && !s.params.nested) {\n\t                e.stopPropagation();\n\t            }\n\t        \n\t            if (!isMoved) {\n\t                if (params.loop) {\n\t                    s.fixLoop();\n\t                }\n\t                startTranslate = s.getWrapperTranslate();\n\t                s.setWrapperTransition(0);\n\t                if (s.animating) {\n\t                    s.wrapper.trigger('webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd');\n\t                }\n\t                if (s.params.autoplay && s.autoplaying) {\n\t                    if (s.params.autoplayDisableOnInteraction) {\n\t                        s.stopAutoplay();\n\t                    }\n\t                    else {\n\t                        s.pauseAutoplay();\n\t                    }\n\t                }\n\t                allowMomentumBounce = false;\n\t                //Grab Cursor\n\t                if (s.params.grabCursor && (s.params.allowSwipeToNext === true || s.params.allowSwipeToPrev === true)) {\n\t                    s.setGrabCursor(true);\n\t                }\n\t            }\n\t            isMoved = true;\n\t        \n\t            var diff = s.touches.diff = s.isHorizontal() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;\n\t        \n\t            diff = diff * s.params.touchRatio;\n\t            if (s.rtl) diff = -diff;\n\t        \n\t            s.swipeDirection = diff > 0 ? 'prev' : 'next';\n\t            currentTranslate = diff + startTranslate;\n\t        \n\t            var disableParentSwiper = true;\n\t            if ((diff > 0 && currentTranslate > s.minTranslate())) {\n\t                disableParentSwiper = false;\n\t                if (s.params.resistance) currentTranslate = s.minTranslate() - 1 + Math.pow(-s.minTranslate() + startTranslate + diff, s.params.resistanceRatio);\n\t            }\n\t            else if (diff < 0 && currentTranslate < s.maxTranslate()) {\n\t                disableParentSwiper = false;\n\t                if (s.params.resistance) currentTranslate = s.maxTranslate() + 1 - Math.pow(s.maxTranslate() - startTranslate - diff, s.params.resistanceRatio);\n\t            }\n\t        \n\t            if (disableParentSwiper) {\n\t                e.preventedByNestedSwiper = true;\n\t            }\n\t        \n\t            // Directions locks\n\t            if (!s.params.allowSwipeToNext && s.swipeDirection === 'next' && currentTranslate < startTranslate) {\n\t                currentTranslate = startTranslate;\n\t            }\n\t            if (!s.params.allowSwipeToPrev && s.swipeDirection === 'prev' && currentTranslate > startTranslate) {\n\t                currentTranslate = startTranslate;\n\t            }\n\t        \n\t        \n\t            // Threshold\n\t            if (s.params.threshold > 0) {\n\t                if (Math.abs(diff) > s.params.threshold || allowThresholdMove) {\n\t                    if (!allowThresholdMove) {\n\t                        allowThresholdMove = true;\n\t                        s.touches.startX = s.touches.currentX;\n\t                        s.touches.startY = s.touches.currentY;\n\t                        currentTranslate = startTranslate;\n\t                        s.touches.diff = s.isHorizontal() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;\n\t                        return;\n\t                    }\n\t                }\n\t                else {\n\t                    currentTranslate = startTranslate;\n\t                    return;\n\t                }\n\t            }\n\t        \n\t            if (!s.params.followFinger) return;\n\t        \n\t            // Update active index in free mode\n\t            if (s.params.freeMode || s.params.watchSlidesProgress) {\n\t                s.updateActiveIndex();\n\t            }\n\t            if (s.params.freeMode) {\n\t                //Velocity\n\t                if (velocities.length === 0) {\n\t                    velocities.push({\n\t                        position: s.touches[s.isHorizontal() ? 'startX' : 'startY'],\n\t                        time: touchStartTime\n\t                    });\n\t                }\n\t                velocities.push({\n\t                    position: s.touches[s.isHorizontal() ? 'currentX' : 'currentY'],\n\t                    time: (new window.Date()).getTime()\n\t                });\n\t            }\n\t            // Update progress\n\t            s.updateProgress(currentTranslate);\n\t            // Update translate\n\t            s.setWrapperTranslate(currentTranslate);\n\t        };\n\t        s.onTouchEnd = function (e) {\n\t            if (e.originalEvent) e = e.originalEvent;\n\t            if (allowTouchCallbacks) {\n\t                s.emit('onTouchEnd', s, e);\n\t            }\n\t            allowTouchCallbacks = false;\n\t            if (!isTouched) return;\n\t            //Return Grab Cursor\n\t            if (s.params.grabCursor && isMoved && isTouched  && (s.params.allowSwipeToNext === true || s.params.allowSwipeToPrev === true)) {\n\t                s.setGrabCursor(false);\n\t            }\n\t        \n\t            // Time diff\n\t            var touchEndTime = Date.now();\n\t            var timeDiff = touchEndTime - touchStartTime;\n\t        \n\t            // Tap, doubleTap, Click\n\t            if (s.allowClick) {\n\t                s.updateClickedSlide(e);\n\t                s.emit('onTap', s, e);\n\t                if (timeDiff < 300 && (touchEndTime - lastClickTime) > 300) {\n\t                    if (clickTimeout) clearTimeout(clickTimeout);\n\t                    clickTimeout = setTimeout(function () {\n\t                        if (!s) return;\n\t                        if (s.params.paginationHide && s.paginationContainer.length > 0 && !$(e.target).hasClass(s.params.bulletClass)) {\n\t                            s.paginationContainer.toggleClass(s.params.paginationHiddenClass);\n\t                        }\n\t                        s.emit('onClick', s, e);\n\t                    }, 300);\n\t        \n\t                }\n\t                if (timeDiff < 300 && (touchEndTime - lastClickTime) < 300) {\n\t                    if (clickTimeout) clearTimeout(clickTimeout);\n\t                    s.emit('onDoubleTap', s, e);\n\t                }\n\t            }\n\t        \n\t            lastClickTime = Date.now();\n\t            setTimeout(function () {\n\t                if (s) s.allowClick = true;\n\t            }, 0);\n\t        \n\t            if (!isTouched || !isMoved || !s.swipeDirection || s.touches.diff === 0 || currentTranslate === startTranslate) {\n\t                isTouched = isMoved = false;\n\t                return;\n\t            }\n\t            isTouched = isMoved = false;\n\t        \n\t            var currentPos;\n\t            if (s.params.followFinger) {\n\t                currentPos = s.rtl ? s.translate : -s.translate;\n\t            }\n\t            else {\n\t                currentPos = -currentTranslate;\n\t            }\n\t            if (s.params.freeMode) {\n\t                if (currentPos < -s.minTranslate()) {\n\t                    s.slideTo(s.activeIndex);\n\t                    return;\n\t                }\n\t                else if (currentPos > -s.maxTranslate()) {\n\t                    if (s.slides.length < s.snapGrid.length) {\n\t                        s.slideTo(s.snapGrid.length - 1);\n\t                    }\n\t                    else {\n\t                        s.slideTo(s.slides.length - 1);\n\t                    }\n\t                    return;\n\t                }\n\t        \n\t                if (s.params.freeModeMomentum) {\n\t                    if (velocities.length > 1) {\n\t                        var lastMoveEvent = velocities.pop(), velocityEvent = velocities.pop();\n\t        \n\t                        var distance = lastMoveEvent.position - velocityEvent.position;\n\t                        var time = lastMoveEvent.time - velocityEvent.time;\n\t                        s.velocity = distance / time;\n\t                        s.velocity = s.velocity / 2;\n\t                        if (Math.abs(s.velocity) < s.params.freeModeMinimumVelocity) {\n\t                            s.velocity = 0;\n\t                        }\n\t                        // this implies that the user stopped moving a finger then released.\n\t                        // There would be no events with distance zero, so the last event is stale.\n\t                        if (time > 150 || (new window.Date().getTime() - lastMoveEvent.time) > 300) {\n\t                            s.velocity = 0;\n\t                        }\n\t                    } else {\n\t                        s.velocity = 0;\n\t                    }\n\t                    s.velocity = s.velocity * s.params.freeModeMomentumVelocityRatio;\n\t        \n\t                    velocities.length = 0;\n\t                    var momentumDuration = 1000 * s.params.freeModeMomentumRatio;\n\t                    var momentumDistance = s.velocity * momentumDuration;\n\t        \n\t                    var newPosition = s.translate + momentumDistance;\n\t                    if (s.rtl) newPosition = - newPosition;\n\t                    var doBounce = false;\n\t                    var afterBouncePosition;\n\t                    var bounceAmount = Math.abs(s.velocity) * 20 * s.params.freeModeMomentumBounceRatio;\n\t                    if (newPosition < s.maxTranslate()) {\n\t                        if (s.params.freeModeMomentumBounce) {\n\t                            if (newPosition + s.maxTranslate() < -bounceAmount) {\n\t                                newPosition = s.maxTranslate() - bounceAmount;\n\t                            }\n\t                            afterBouncePosition = s.maxTranslate();\n\t                            doBounce = true;\n\t                            allowMomentumBounce = true;\n\t                        }\n\t                        else {\n\t                            newPosition = s.maxTranslate();\n\t                        }\n\t                    }\n\t                    else if (newPosition > s.minTranslate()) {\n\t                        if (s.params.freeModeMomentumBounce) {\n\t                            if (newPosition - s.minTranslate() > bounceAmount) {\n\t                                newPosition = s.minTranslate() + bounceAmount;\n\t                            }\n\t                            afterBouncePosition = s.minTranslate();\n\t                            doBounce = true;\n\t                            allowMomentumBounce = true;\n\t                        }\n\t                        else {\n\t                            newPosition = s.minTranslate();\n\t                        }\n\t                    }\n\t                    else if (s.params.freeModeSticky) {\n\t                        var j = 0,\n\t                            nextSlide;\n\t                        for (j = 0; j < s.snapGrid.length; j += 1) {\n\t                            if (s.snapGrid[j] > -newPosition) {\n\t                                nextSlide = j;\n\t                                break;\n\t                            }\n\t        \n\t                        }\n\t                        if (Math.abs(s.snapGrid[nextSlide] - newPosition) < Math.abs(s.snapGrid[nextSlide - 1] - newPosition) || s.swipeDirection === 'next') {\n\t                            newPosition = s.snapGrid[nextSlide];\n\t                        } else {\n\t                            newPosition = s.snapGrid[nextSlide - 1];\n\t                        }\n\t                        if (!s.rtl) newPosition = - newPosition;\n\t                    }\n\t                    //Fix duration\n\t                    if (s.velocity !== 0) {\n\t                        if (s.rtl) {\n\t                            momentumDuration = Math.abs((-newPosition - s.translate) / s.velocity);\n\t                        }\n\t                        else {\n\t                            momentumDuration = Math.abs((newPosition - s.translate) / s.velocity);\n\t                        }\n\t                    }\n\t                    else if (s.params.freeModeSticky) {\n\t                        s.slideReset();\n\t                        return;\n\t                    }\n\t        \n\t                    if (s.params.freeModeMomentumBounce && doBounce) {\n\t                        s.updateProgress(afterBouncePosition);\n\t                        s.setWrapperTransition(momentumDuration);\n\t                        s.setWrapperTranslate(newPosition);\n\t                        s.onTransitionStart();\n\t                        s.animating = true;\n\t                        s.wrapper.transitionEnd(function () {\n\t                            if (!s || !allowMomentumBounce) return;\n\t                            s.emit('onMomentumBounce', s);\n\t        \n\t                            s.setWrapperTransition(s.params.speed);\n\t                            s.setWrapperTranslate(afterBouncePosition);\n\t                            s.wrapper.transitionEnd(function () {\n\t                                if (!s) return;\n\t                                s.onTransitionEnd();\n\t                            });\n\t                        });\n\t                    } else if (s.velocity) {\n\t                        s.updateProgress(newPosition);\n\t                        s.setWrapperTransition(momentumDuration);\n\t                        s.setWrapperTranslate(newPosition);\n\t                        s.onTransitionStart();\n\t                        if (!s.animating) {\n\t                            s.animating = true;\n\t                            s.wrapper.transitionEnd(function () {\n\t                                if (!s) return;\n\t                                s.onTransitionEnd();\n\t                            });\n\t                        }\n\t        \n\t                    } else {\n\t                        s.updateProgress(newPosition);\n\t                    }\n\t        \n\t                    s.updateActiveIndex();\n\t                }\n\t                if (!s.params.freeModeMomentum || timeDiff >= s.params.longSwipesMs) {\n\t                    s.updateProgress();\n\t                    s.updateActiveIndex();\n\t                }\n\t                return;\n\t            }\n\t        \n\t            // Find current slide\n\t            var i, stopIndex = 0, groupSize = s.slidesSizesGrid[0];\n\t            for (i = 0; i < s.slidesGrid.length; i += s.params.slidesPerGroup) {\n\t                if (typeof s.slidesGrid[i + s.params.slidesPerGroup] !== 'undefined') {\n\t                    if (currentPos >= s.slidesGrid[i] && currentPos < s.slidesGrid[i + s.params.slidesPerGroup]) {\n\t                        stopIndex = i;\n\t                        groupSize = s.slidesGrid[i + s.params.slidesPerGroup] - s.slidesGrid[i];\n\t                    }\n\t                }\n\t                else {\n\t                    if (currentPos >= s.slidesGrid[i]) {\n\t                        stopIndex = i;\n\t                        groupSize = s.slidesGrid[s.slidesGrid.length - 1] - s.slidesGrid[s.slidesGrid.length - 2];\n\t                    }\n\t                }\n\t            }\n\t        \n\t            // Find current slide size\n\t            var ratio = (currentPos - s.slidesGrid[stopIndex]) / groupSize;\n\t        \n\t            if (timeDiff > s.params.longSwipesMs) {\n\t                // Long touches\n\t                if (!s.params.longSwipes) {\n\t                    s.slideTo(s.activeIndex);\n\t                    return;\n\t                }\n\t                if (s.swipeDirection === 'next') {\n\t                    if (ratio >= s.params.longSwipesRatio) s.slideTo(stopIndex + s.params.slidesPerGroup);\n\t                    else s.slideTo(stopIndex);\n\t        \n\t                }\n\t                if (s.swipeDirection === 'prev') {\n\t                    if (ratio > (1 - s.params.longSwipesRatio)) s.slideTo(stopIndex + s.params.slidesPerGroup);\n\t                    else s.slideTo(stopIndex);\n\t                }\n\t            }\n\t            else {\n\t                // Short swipes\n\t                if (!s.params.shortSwipes) {\n\t                    s.slideTo(s.activeIndex);\n\t                    return;\n\t                }\n\t                if (s.swipeDirection === 'next') {\n\t                    s.slideTo(stopIndex + s.params.slidesPerGroup);\n\t        \n\t                }\n\t                if (s.swipeDirection === 'prev') {\n\t                    s.slideTo(stopIndex);\n\t                }\n\t            }\n\t        };\n\t        /*=========================\n\t          Transitions\n\t          ===========================*/\n\t        s._slideTo = function (slideIndex, speed) {\n\t            return s.slideTo(slideIndex, speed, true, true);\n\t        };\n\t        s.slideTo = function (slideIndex, speed, runCallbacks, internal) {\n\t            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n\t            if (typeof slideIndex === 'undefined') slideIndex = 0;\n\t            if (slideIndex < 0) slideIndex = 0;\n\t            s.snapIndex = Math.floor(slideIndex / s.params.slidesPerGroup);\n\t            if (s.snapIndex >= s.snapGrid.length) s.snapIndex = s.snapGrid.length - 1;\n\t        \n\t            var translate = - s.snapGrid[s.snapIndex];\n\t            // Stop autoplay\n\t            if (s.params.autoplay && s.autoplaying) {\n\t                if (internal || !s.params.autoplayDisableOnInteraction) {\n\t                    s.pauseAutoplay(speed);\n\t                }\n\t                else {\n\t                    s.stopAutoplay();\n\t                }\n\t            }\n\t            // Update progress\n\t            s.updateProgress(translate);\n\t        \n\t            // Normalize slideIndex\n\t            if(s.params.normalizeSlideIndex){\n\t                for (var i = 0; i < s.slidesGrid.length; i++) {\n\t                    if (- Math.floor(translate * 100) >= Math.floor(s.slidesGrid[i] * 100)) {\n\t                        slideIndex = i;\n\t                    }\n\t                }\n\t            }\n\t        \n\t            // Directions locks\n\t            if (!s.params.allowSwipeToNext && translate < s.translate && translate < s.minTranslate()) {\n\t                return false;\n\t            }\n\t            if (!s.params.allowSwipeToPrev && translate > s.translate && translate > s.maxTranslate()) {\n\t                if ((s.activeIndex || 0) !== slideIndex ) return false;\n\t            }\n\t        \n\t            // Update Index\n\t            if (typeof speed === 'undefined') speed = s.params.speed;\n\t            s.previousIndex = s.activeIndex || 0;\n\t            s.activeIndex = slideIndex;\n\t            s.updateRealIndex();\n\t            if ((s.rtl && -translate === s.translate) || (!s.rtl && translate === s.translate)) {\n\t                // Update Height\n\t                if (s.params.autoHeight) {\n\t                    s.updateAutoHeight();\n\t                }\n\t                s.updateClasses();\n\t                if (s.params.effect !== 'slide') {\n\t                    s.setWrapperTranslate(translate);\n\t                }\n\t                return false;\n\t            }\n\t            s.updateClasses();\n\t            s.onTransitionStart(runCallbacks);\n\t        \n\t            if (speed === 0 || s.browser.lteIE9) {\n\t                s.setWrapperTranslate(translate);\n\t                s.setWrapperTransition(0);\n\t                s.onTransitionEnd(runCallbacks);\n\t            }\n\t            else {\n\t                s.setWrapperTranslate(translate);\n\t                s.setWrapperTransition(speed);\n\t                if (!s.animating) {\n\t                    s.animating = true;\n\t                    s.wrapper.transitionEnd(function () {\n\t                        if (!s) return;\n\t                        s.onTransitionEnd(runCallbacks);\n\t                    });\n\t                }\n\t        \n\t            }\n\t        \n\t            return true;\n\t        };\n\t        \n\t        s.onTransitionStart = function (runCallbacks) {\n\t            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n\t            if (s.params.autoHeight) {\n\t                s.updateAutoHeight();\n\t            }\n\t            if (s.lazy) s.lazy.onTransitionStart();\n\t            if (runCallbacks) {\n\t                s.emit('onTransitionStart', s);\n\t                if (s.activeIndex !== s.previousIndex) {\n\t                    s.emit('onSlideChangeStart', s);\n\t                    if (s.activeIndex > s.previousIndex) {\n\t                        s.emit('onSlideNextStart', s);\n\t                    }\n\t                    else {\n\t                        s.emit('onSlidePrevStart', s);\n\t                    }\n\t                }\n\t        \n\t            }\n\t        };\n\t        s.onTransitionEnd = function (runCallbacks) {\n\t            s.animating = false;\n\t            s.setWrapperTransition(0);\n\t            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n\t            if (s.lazy) s.lazy.onTransitionEnd();\n\t            if (runCallbacks) {\n\t                s.emit('onTransitionEnd', s);\n\t                if (s.activeIndex !== s.previousIndex) {\n\t                    s.emit('onSlideChangeEnd', s);\n\t                    if (s.activeIndex > s.previousIndex) {\n\t                        s.emit('onSlideNextEnd', s);\n\t                    }\n\t                    else {\n\t                        s.emit('onSlidePrevEnd', s);\n\t                    }\n\t                }\n\t            }\n\t            if (s.params.history && s.history) {\n\t                s.history.setHistory(s.params.history, s.activeIndex);\n\t            }\n\t            if (s.params.hashnav && s.hashnav) {\n\t                s.hashnav.setHash();\n\t            }\n\t        \n\t        };\n\t        s.slideNext = function (runCallbacks, speed, internal) {\n\t            if (s.params.loop) {\n\t                if (s.animating) return false;\n\t                s.fixLoop();\n\t                var clientLeft = s.container[0].clientLeft;\n\t                return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);\n\t            }\n\t            else return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);\n\t        };\n\t        s._slideNext = function (speed) {\n\t            return s.slideNext(true, speed, true);\n\t        };\n\t        s.slidePrev = function (runCallbacks, speed, internal) {\n\t            if (s.params.loop) {\n\t                if (s.animating) return false;\n\t                s.fixLoop();\n\t                var clientLeft = s.container[0].clientLeft;\n\t                return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);\n\t            }\n\t            else return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);\n\t        };\n\t        s._slidePrev = function (speed) {\n\t            return s.slidePrev(true, speed, true);\n\t        };\n\t        s.slideReset = function (runCallbacks, speed, internal) {\n\t            return s.slideTo(s.activeIndex, speed, runCallbacks);\n\t        };\n\t        \n\t        s.disableTouchControl = function () {\n\t            s.params.onlyExternal = true;\n\t            return true;\n\t        };\n\t        s.enableTouchControl = function () {\n\t            s.params.onlyExternal = false;\n\t            return true;\n\t        };\n\t        \n\t        /*=========================\n\t          Translate/transition helpers\n\t          ===========================*/\n\t        s.setWrapperTransition = function (duration, byController) {\n\t            s.wrapper.transition(duration);\n\t            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n\t                s.effects[s.params.effect].setTransition(duration);\n\t            }\n\t            if (s.params.parallax && s.parallax) {\n\t                s.parallax.setTransition(duration);\n\t            }\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                s.scrollbar.setTransition(duration);\n\t            }\n\t            if (s.params.control && s.controller) {\n\t                s.controller.setTransition(duration, byController);\n\t            }\n\t            s.emit('onSetTransition', s, duration);\n\t        };\n\t        s.setWrapperTranslate = function (translate, updateActiveIndex, byController) {\n\t            var x = 0, y = 0, z = 0;\n\t            if (s.isHorizontal()) {\n\t                x = s.rtl ? -translate : translate;\n\t            }\n\t            else {\n\t                y = translate;\n\t            }\n\t        \n\t            if (s.params.roundLengths) {\n\t                x = round(x);\n\t                y = round(y);\n\t            }\n\t        \n\t            if (!s.params.virtualTranslate) {\n\t                if (s.support.transforms3d) s.wrapper.transform('translate3d(' + x + 'px, ' + y + 'px, ' + z + 'px)');\n\t                else s.wrapper.transform('translate(' + x + 'px, ' + y + 'px)');\n\t            }\n\t        \n\t            s.translate = s.isHorizontal() ? x : y;\n\t        \n\t            // Check if we need to update progress\n\t            var progress;\n\t            var translatesDiff = s.maxTranslate() - s.minTranslate();\n\t            if (translatesDiff === 0) {\n\t                progress = 0;\n\t            }\n\t            else {\n\t                progress = (translate - s.minTranslate()) / (translatesDiff);\n\t            }\n\t            if (progress !== s.progress) {\n\t                s.updateProgress(translate);\n\t            }\n\t        \n\t            if (updateActiveIndex) s.updateActiveIndex();\n\t            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n\t                s.effects[s.params.effect].setTranslate(s.translate);\n\t            }\n\t            if (s.params.parallax && s.parallax) {\n\t                s.parallax.setTranslate(s.translate);\n\t            }\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                s.scrollbar.setTranslate(s.translate);\n\t            }\n\t            if (s.params.control && s.controller) {\n\t                s.controller.setTranslate(s.translate, byController);\n\t            }\n\t            s.emit('onSetTranslate', s, s.translate);\n\t        };\n\t        \n\t        s.getTranslate = function (el, axis) {\n\t            var matrix, curTransform, curStyle, transformMatrix;\n\t        \n\t            // automatic axis detection\n\t            if (typeof axis === 'undefined') {\n\t                axis = 'x';\n\t            }\n\t        \n\t            if (s.params.virtualTranslate) {\n\t                return s.rtl ? -s.translate : s.translate;\n\t            }\n\t        \n\t            curStyle = window.getComputedStyle(el, null);\n\t            if (window.WebKitCSSMatrix) {\n\t                curTransform = curStyle.transform || curStyle.webkitTransform;\n\t                if (curTransform.split(',').length > 6) {\n\t                    curTransform = curTransform.split(', ').map(function(a){\n\t                        return a.replace(',','.');\n\t                    }).join(', ');\n\t                }\n\t                // Some old versions of Webkit choke when 'none' is passed; pass\n\t                // empty string instead in this case\n\t                transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n\t            }\n\t            else {\n\t                transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform  || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n\t                matrix = transformMatrix.toString().split(',');\n\t            }\n\t        \n\t            if (axis === 'x') {\n\t                //Latest Chrome and webkits Fix\n\t                if (window.WebKitCSSMatrix)\n\t                    curTransform = transformMatrix.m41;\n\t                //Crazy IE10 Matrix\n\t                else if (matrix.length === 16)\n\t                    curTransform = parseFloat(matrix[12]);\n\t                //Normal Browsers\n\t                else\n\t                    curTransform = parseFloat(matrix[4]);\n\t            }\n\t            if (axis === 'y') {\n\t                //Latest Chrome and webkits Fix\n\t                if (window.WebKitCSSMatrix)\n\t                    curTransform = transformMatrix.m42;\n\t                //Crazy IE10 Matrix\n\t                else if (matrix.length === 16)\n\t                    curTransform = parseFloat(matrix[13]);\n\t                //Normal Browsers\n\t                else\n\t                    curTransform = parseFloat(matrix[5]);\n\t            }\n\t            if (s.rtl && curTransform) curTransform = -curTransform;\n\t            return curTransform || 0;\n\t        };\n\t        s.getWrapperTranslate = function (axis) {\n\t            if (typeof axis === 'undefined') {\n\t                axis = s.isHorizontal() ? 'x' : 'y';\n\t            }\n\t            return s.getTranslate(s.wrapper[0], axis);\n\t        };\n\t        \n\t        /*=========================\n\t          Observer\n\t          ===========================*/\n\t        s.observers = [];\n\t        function initObserver(target, options) {\n\t            options = options || {};\n\t            // create an observer instance\n\t            var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n\t            var observer = new ObserverFunc(function (mutations) {\n\t                mutations.forEach(function (mutation) {\n\t                    s.onResize(true);\n\t                    s.emit('onObserverUpdate', s, mutation);\n\t                });\n\t            });\n\t        \n\t            observer.observe(target, {\n\t                attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n\t                childList: typeof options.childList === 'undefined' ? true : options.childList,\n\t                characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n\t            });\n\t        \n\t            s.observers.push(observer);\n\t        }\n\t        s.initObservers = function () {\n\t            if (s.params.observeParents) {\n\t                var containerParents = s.container.parents();\n\t                for (var i = 0; i < containerParents.length; i++) {\n\t                    initObserver(containerParents[i]);\n\t                }\n\t            }\n\t        \n\t            // Observe container\n\t            initObserver(s.container[0], {childList: false});\n\t        \n\t            // Observe wrapper\n\t            initObserver(s.wrapper[0], {attributes: false});\n\t        };\n\t        s.disconnectObservers = function () {\n\t            for (var i = 0; i < s.observers.length; i++) {\n\t                s.observers[i].disconnect();\n\t            }\n\t            s.observers = [];\n\t        };\n\t        /*=========================\n\t          Loop\n\t          ===========================*/\n\t        // Create looped slides\n\t        s.createLoop = function () {\n\t            // Remove duplicated slides\n\t            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();\n\t        \n\t            var slides = s.wrapper.children('.' + s.params.slideClass);\n\t        \n\t            if(s.params.slidesPerView === 'auto' && !s.params.loopedSlides) s.params.loopedSlides = slides.length;\n\t        \n\t            s.loopedSlides = parseInt(s.params.loopedSlides || s.params.slidesPerView, 10);\n\t            s.loopedSlides = s.loopedSlides + s.params.loopAdditionalSlides;\n\t            if (s.loopedSlides > slides.length) {\n\t                s.loopedSlides = slides.length;\n\t            }\n\t        \n\t            var prependSlides = [], appendSlides = [], i;\n\t            slides.each(function (index, el) {\n\t                var slide = $(this);\n\t                if (index < s.loopedSlides) appendSlides.push(el);\n\t                if (index < slides.length && index >= slides.length - s.loopedSlides) prependSlides.push(el);\n\t                slide.attr('data-swiper-slide-index', index);\n\t            });\n\t            for (i = 0; i < appendSlides.length; i++) {\n\t                s.wrapper.append($(appendSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));\n\t            }\n\t            for (i = prependSlides.length - 1; i >= 0; i--) {\n\t                s.wrapper.prepend($(prependSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));\n\t            }\n\t        };\n\t        s.destroyLoop = function () {\n\t            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();\n\t            s.slides.removeAttr('data-swiper-slide-index');\n\t        };\n\t        s.reLoop = function (updatePosition) {\n\t            var oldIndex = s.activeIndex - s.loopedSlides;\n\t            s.destroyLoop();\n\t            s.createLoop();\n\t            s.updateSlidesSize();\n\t            if (updatePosition) {\n\t                s.slideTo(oldIndex + s.loopedSlides, 0, false);\n\t            }\n\t        \n\t        };\n\t        s.fixLoop = function () {\n\t            var newIndex;\n\t            //Fix For Negative Oversliding\n\t            if (s.activeIndex < s.loopedSlides) {\n\t                newIndex = s.slides.length - s.loopedSlides * 3 + s.activeIndex;\n\t                newIndex = newIndex + s.loopedSlides;\n\t                s.slideTo(newIndex, 0, false, true);\n\t            }\n\t            //Fix For Positive Oversliding\n\t            else if ((s.params.slidesPerView === 'auto' && s.activeIndex >= s.loopedSlides * 2) || (s.activeIndex > s.slides.length - s.params.slidesPerView * 2)) {\n\t                newIndex = -s.slides.length + s.activeIndex + s.loopedSlides;\n\t                newIndex = newIndex + s.loopedSlides;\n\t                s.slideTo(newIndex, 0, false, true);\n\t            }\n\t        };\n\t        /*=========================\n\t          Append/Prepend/Remove Slides\n\t          ===========================*/\n\t        s.appendSlide = function (slides) {\n\t            if (s.params.loop) {\n\t                s.destroyLoop();\n\t            }\n\t            if (typeof slides === 'object' && slides.length) {\n\t                for (var i = 0; i < slides.length; i++) {\n\t                    if (slides[i]) s.wrapper.append(slides[i]);\n\t                }\n\t            }\n\t            else {\n\t                s.wrapper.append(slides);\n\t            }\n\t            if (s.params.loop) {\n\t                s.createLoop();\n\t            }\n\t            if (!(s.params.observer && s.support.observer)) {\n\t                s.update(true);\n\t            }\n\t        };\n\t        s.prependSlide = function (slides) {\n\t            if (s.params.loop) {\n\t                s.destroyLoop();\n\t            }\n\t            var newActiveIndex = s.activeIndex + 1;\n\t            if (typeof slides === 'object' && slides.length) {\n\t                for (var i = 0; i < slides.length; i++) {\n\t                    if (slides[i]) s.wrapper.prepend(slides[i]);\n\t                }\n\t                newActiveIndex = s.activeIndex + slides.length;\n\t            }\n\t            else {\n\t                s.wrapper.prepend(slides);\n\t            }\n\t            if (s.params.loop) {\n\t                s.createLoop();\n\t            }\n\t            if (!(s.params.observer && s.support.observer)) {\n\t                s.update(true);\n\t            }\n\t            s.slideTo(newActiveIndex, 0, false);\n\t        };\n\t        s.removeSlide = function (slidesIndexes) {\n\t            if (s.params.loop) {\n\t                s.destroyLoop();\n\t                s.slides = s.wrapper.children('.' + s.params.slideClass);\n\t            }\n\t            var newActiveIndex = s.activeIndex,\n\t                indexToRemove;\n\t            if (typeof slidesIndexes === 'object' && slidesIndexes.length) {\n\t                for (var i = 0; i < slidesIndexes.length; i++) {\n\t                    indexToRemove = slidesIndexes[i];\n\t                    if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();\n\t                    if (indexToRemove < newActiveIndex) newActiveIndex--;\n\t                }\n\t                newActiveIndex = Math.max(newActiveIndex, 0);\n\t            }\n\t            else {\n\t                indexToRemove = slidesIndexes;\n\t                if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();\n\t                if (indexToRemove < newActiveIndex) newActiveIndex--;\n\t                newActiveIndex = Math.max(newActiveIndex, 0);\n\t            }\n\t        \n\t            if (s.params.loop) {\n\t                s.createLoop();\n\t            }\n\t        \n\t            if (!(s.params.observer && s.support.observer)) {\n\t                s.update(true);\n\t            }\n\t            if (s.params.loop) {\n\t                s.slideTo(newActiveIndex + s.loopedSlides, 0, false);\n\t            }\n\t            else {\n\t                s.slideTo(newActiveIndex, 0, false);\n\t            }\n\t        \n\t        };\n\t        s.removeAllSlides = function () {\n\t            var slidesIndexes = [];\n\t            for (var i = 0; i < s.slides.length; i++) {\n\t                slidesIndexes.push(i);\n\t            }\n\t            s.removeSlide(slidesIndexes);\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Effects\n\t          ===========================*/\n\t        s.effects = {\n\t            fade: {\n\t                setTranslate: function () {\n\t                    for (var i = 0; i < s.slides.length; i++) {\n\t                        var slide = s.slides.eq(i);\n\t                        var offset = slide[0].swiperSlideOffset;\n\t                        var tx = -offset;\n\t                        if (!s.params.virtualTranslate) tx = tx - s.translate;\n\t                        var ty = 0;\n\t                        if (!s.isHorizontal()) {\n\t                            ty = tx;\n\t                            tx = 0;\n\t                        }\n\t                        var slideOpacity = s.params.fade.crossFade ?\n\t                                Math.max(1 - Math.abs(slide[0].progress), 0) :\n\t                                1 + Math.min(Math.max(slide[0].progress, -1), 0);\n\t                        slide\n\t                            .css({\n\t                                opacity: slideOpacity\n\t                            })\n\t                            .transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px)');\n\t        \n\t                    }\n\t        \n\t                },\n\t                setTransition: function (duration) {\n\t                    s.slides.transition(duration);\n\t                    if (s.params.virtualTranslate && duration !== 0) {\n\t                        var eventTriggered = false;\n\t                        s.slides.transitionEnd(function () {\n\t                            if (eventTriggered) return;\n\t                            if (!s) return;\n\t                            eventTriggered = true;\n\t                            s.animating = false;\n\t                            var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];\n\t                            for (var i = 0; i < triggerEvents.length; i++) {\n\t                                s.wrapper.trigger(triggerEvents[i]);\n\t                            }\n\t                        });\n\t                    }\n\t                }\n\t            },\n\t            flip: {\n\t                setTranslate: function () {\n\t                    for (var i = 0; i < s.slides.length; i++) {\n\t                        var slide = s.slides.eq(i);\n\t                        var progress = slide[0].progress;\n\t                        if (s.params.flip.limitRotation) {\n\t                            progress = Math.max(Math.min(slide[0].progress, 1), -1);\n\t                        }\n\t                        var offset = slide[0].swiperSlideOffset;\n\t                        var rotate = -180 * progress,\n\t                            rotateY = rotate,\n\t                            rotateX = 0,\n\t                            tx = -offset,\n\t                            ty = 0;\n\t                        if (!s.isHorizontal()) {\n\t                            ty = tx;\n\t                            tx = 0;\n\t                            rotateX = -rotateY;\n\t                            rotateY = 0;\n\t                        }\n\t                        else if (s.rtl) {\n\t                            rotateY = -rotateY;\n\t                        }\n\t        \n\t                        slide[0].style.zIndex = -Math.abs(Math.round(progress)) + s.slides.length;\n\t        \n\t                        if (s.params.flip.slideShadows) {\n\t                            //Set shadows\n\t                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n\t                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n\t                            if (shadowBefore.length === 0) {\n\t                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '\"></div>');\n\t                                slide.append(shadowBefore);\n\t                            }\n\t                            if (shadowAfter.length === 0) {\n\t                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '\"></div>');\n\t                                slide.append(shadowAfter);\n\t                            }\n\t                            if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n\t                            if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n\t                        }\n\t        \n\t                        slide\n\t                            .transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px) rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)');\n\t                    }\n\t                },\n\t                setTransition: function (duration) {\n\t                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\t                    if (s.params.virtualTranslate && duration !== 0) {\n\t                        var eventTriggered = false;\n\t                        s.slides.eq(s.activeIndex).transitionEnd(function () {\n\t                            if (eventTriggered) return;\n\t                            if (!s) return;\n\t                            if (!$(this).hasClass(s.params.slideActiveClass)) return;\n\t                            eventTriggered = true;\n\t                            s.animating = false;\n\t                            var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];\n\t                            for (var i = 0; i < triggerEvents.length; i++) {\n\t                                s.wrapper.trigger(triggerEvents[i]);\n\t                            }\n\t                        });\n\t                    }\n\t                }\n\t            },\n\t            cube: {\n\t                setTranslate: function () {\n\t                    var wrapperRotate = 0, cubeShadow;\n\t                    if (s.params.cube.shadow) {\n\t                        if (s.isHorizontal()) {\n\t                            cubeShadow = s.wrapper.find('.swiper-cube-shadow');\n\t                            if (cubeShadow.length === 0) {\n\t                                cubeShadow = $('<div class=\"swiper-cube-shadow\"></div>');\n\t                                s.wrapper.append(cubeShadow);\n\t                            }\n\t                            cubeShadow.css({height: s.width + 'px'});\n\t                        }\n\t                        else {\n\t                            cubeShadow = s.container.find('.swiper-cube-shadow');\n\t                            if (cubeShadow.length === 0) {\n\t                                cubeShadow = $('<div class=\"swiper-cube-shadow\"></div>');\n\t                                s.container.append(cubeShadow);\n\t                            }\n\t                        }\n\t                    }\n\t                    for (var i = 0; i < s.slides.length; i++) {\n\t                        var slide = s.slides.eq(i);\n\t                        var slideAngle = i * 90;\n\t                        var round = Math.floor(slideAngle / 360);\n\t                        if (s.rtl) {\n\t                            slideAngle = -slideAngle;\n\t                            round = Math.floor(-slideAngle / 360);\n\t                        }\n\t                        var progress = Math.max(Math.min(slide[0].progress, 1), -1);\n\t                        var tx = 0, ty = 0, tz = 0;\n\t                        if (i % 4 === 0) {\n\t                            tx = - round * 4 * s.size;\n\t                            tz = 0;\n\t                        }\n\t                        else if ((i - 1) % 4 === 0) {\n\t                            tx = 0;\n\t                            tz = - round * 4 * s.size;\n\t                        }\n\t                        else if ((i - 2) % 4 === 0) {\n\t                            tx = s.size + round * 4 * s.size;\n\t                            tz = s.size;\n\t                        }\n\t                        else if ((i - 3) % 4 === 0) {\n\t                            tx = - s.size;\n\t                            tz = 3 * s.size + s.size * 4 * round;\n\t                        }\n\t                        if (s.rtl) {\n\t                            tx = -tx;\n\t                        }\n\t        \n\t                        if (!s.isHorizontal()) {\n\t                            ty = tx;\n\t                            tx = 0;\n\t                        }\n\t        \n\t                        var transform = 'rotateX(' + (s.isHorizontal() ? 0 : -slideAngle) + 'deg) rotateY(' + (s.isHorizontal() ? slideAngle : 0) + 'deg) translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px)';\n\t                        if (progress <= 1 && progress > -1) {\n\t                            wrapperRotate = i * 90 + progress * 90;\n\t                            if (s.rtl) wrapperRotate = -i * 90 - progress * 90;\n\t                        }\n\t                        slide.transform(transform);\n\t                        if (s.params.cube.slideShadows) {\n\t                            //Set shadows\n\t                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n\t                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n\t                            if (shadowBefore.length === 0) {\n\t                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '\"></div>');\n\t                                slide.append(shadowBefore);\n\t                            }\n\t                            if (shadowAfter.length === 0) {\n\t                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '\"></div>');\n\t                                slide.append(shadowAfter);\n\t                            }\n\t                            if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n\t                            if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n\t                        }\n\t                    }\n\t                    s.wrapper.css({\n\t                        '-webkit-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n\t                        '-moz-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n\t                        '-ms-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n\t                        'transform-origin': '50% 50% -' + (s.size / 2) + 'px'\n\t                    });\n\t        \n\t                    if (s.params.cube.shadow) {\n\t                        if (s.isHorizontal()) {\n\t                            cubeShadow.transform('translate3d(0px, ' + (s.width / 2 + s.params.cube.shadowOffset) + 'px, ' + (-s.width / 2) + 'px) rotateX(90deg) rotateZ(0deg) scale(' + (s.params.cube.shadowScale) + ')');\n\t                        }\n\t                        else {\n\t                            var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n\t                            var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n\t                            var scale1 = s.params.cube.shadowScale,\n\t                                scale2 = s.params.cube.shadowScale / multiplier,\n\t                                offset = s.params.cube.shadowOffset;\n\t                            cubeShadow.transform('scale3d(' + scale1 + ', 1, ' + scale2 + ') translate3d(0px, ' + (s.height / 2 + offset) + 'px, ' + (-s.height / 2 / scale2) + 'px) rotateX(-90deg)');\n\t                        }\n\t                    }\n\t                    var zFactor = (s.isSafari || s.isUiWebView) ? (-s.size / 2) : 0;\n\t                    s.wrapper.transform('translate3d(0px,0,' + zFactor + 'px) rotateX(' + (s.isHorizontal() ? 0 : wrapperRotate) + 'deg) rotateY(' + (s.isHorizontal() ? -wrapperRotate : 0) + 'deg)');\n\t                },\n\t                setTransition: function (duration) {\n\t                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\t                    if (s.params.cube.shadow && !s.isHorizontal()) {\n\t                        s.container.find('.swiper-cube-shadow').transition(duration);\n\t                    }\n\t                }\n\t            },\n\t            coverflow: {\n\t                setTranslate: function () {\n\t                    var transform = s.translate;\n\t                    var center = s.isHorizontal() ? -transform + s.width / 2 : -transform + s.height / 2;\n\t                    var rotate = s.isHorizontal() ? s.params.coverflow.rotate: -s.params.coverflow.rotate;\n\t                    var translate = s.params.coverflow.depth;\n\t                    //Each slide offset from center\n\t                    for (var i = 0, length = s.slides.length; i < length; i++) {\n\t                        var slide = s.slides.eq(i);\n\t                        var slideSize = s.slidesSizesGrid[i];\n\t                        var slideOffset = slide[0].swiperSlideOffset;\n\t                        var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * s.params.coverflow.modifier;\n\t        \n\t                        var rotateY = s.isHorizontal() ? rotate * offsetMultiplier : 0;\n\t                        var rotateX = s.isHorizontal() ? 0 : rotate * offsetMultiplier;\n\t                        // var rotateZ = 0\n\t                        var translateZ = -translate * Math.abs(offsetMultiplier);\n\t        \n\t                        var translateY = s.isHorizontal() ? 0 : s.params.coverflow.stretch * (offsetMultiplier);\n\t                        var translateX = s.isHorizontal() ? s.params.coverflow.stretch * (offsetMultiplier) : 0;\n\t        \n\t                        //Fix for ultra small values\n\t                        if (Math.abs(translateX) < 0.001) translateX = 0;\n\t                        if (Math.abs(translateY) < 0.001) translateY = 0;\n\t                        if (Math.abs(translateZ) < 0.001) translateZ = 0;\n\t                        if (Math.abs(rotateY) < 0.001) rotateY = 0;\n\t                        if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\t        \n\t                        var slideTransform = 'translate3d(' + translateX + 'px,' + translateY + 'px,' + translateZ + 'px)  rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)';\n\t        \n\t                        slide.transform(slideTransform);\n\t                        slide[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\t                        if (s.params.coverflow.slideShadows) {\n\t                            //Set shadows\n\t                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n\t                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n\t                            if (shadowBefore.length === 0) {\n\t                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '\"></div>');\n\t                                slide.append(shadowBefore);\n\t                            }\n\t                            if (shadowAfter.length === 0) {\n\t                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '\"></div>');\n\t                                slide.append(shadowAfter);\n\t                            }\n\t                            if (shadowBefore.length) shadowBefore[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n\t                            if (shadowAfter.length) shadowAfter[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n\t                        }\n\t                    }\n\t        \n\t                    //Set correct perspective for IE10\n\t                    if (s.browser.ie) {\n\t                        var ws = s.wrapper[0].style;\n\t                        ws.perspectiveOrigin = center + 'px 50%';\n\t                    }\n\t                },\n\t                setTransition: function (duration) {\n\t                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\t                }\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          Images Lazy Loading\n\t          ===========================*/\n\t        s.lazy = {\n\t            initialImageLoaded: false,\n\t            loadImageInSlide: function (index, loadInDuplicate) {\n\t                if (typeof index === 'undefined') return;\n\t                if (typeof loadInDuplicate === 'undefined') loadInDuplicate = true;\n\t                if (s.slides.length === 0) return;\n\t        \n\t                var slide = s.slides.eq(index);\n\t                var img = slide.find('.' + s.params.lazyLoadingClass + ':not(.' + s.params.lazyStatusLoadedClass + '):not(.' + s.params.lazyStatusLoadingClass + ')');\n\t                if (slide.hasClass(s.params.lazyLoadingClass) && !slide.hasClass(s.params.lazyStatusLoadedClass) && !slide.hasClass(s.params.lazyStatusLoadingClass)) {\n\t                    img = img.add(slide[0]);\n\t                }\n\t                if (img.length === 0) return;\n\t        \n\t                img.each(function () {\n\t                    var _img = $(this);\n\t                    _img.addClass(s.params.lazyStatusLoadingClass);\n\t                    var background = _img.attr('data-background');\n\t                    var src = _img.attr('data-src'),\n\t                        srcset = _img.attr('data-srcset'),\n\t                        sizes = _img.attr('data-sizes');\n\t                    s.loadImage(_img[0], (src || background), srcset, sizes, false, function () {\n\t                        if (background) {\n\t                            _img.css('background-image', 'url(\"' + background + '\")');\n\t                            _img.removeAttr('data-background');\n\t                        }\n\t                        else {\n\t                            if (srcset) {\n\t                                _img.attr('srcset', srcset);\n\t                                _img.removeAttr('data-srcset');\n\t                            }\n\t                            if (sizes) {\n\t                                _img.attr('sizes', sizes);\n\t                                _img.removeAttr('data-sizes');\n\t                            }\n\t                            if (src) {\n\t                                _img.attr('src', src);\n\t                                _img.removeAttr('data-src');\n\t                            }\n\t        \n\t                        }\n\t        \n\t                        _img.addClass(s.params.lazyStatusLoadedClass).removeClass(s.params.lazyStatusLoadingClass);\n\t                        slide.find('.' + s.params.lazyPreloaderClass + ', .' + s.params.preloaderClass).remove();\n\t                        if (s.params.loop && loadInDuplicate) {\n\t                            var slideOriginalIndex = slide.attr('data-swiper-slide-index');\n\t                            if (slide.hasClass(s.params.slideDuplicateClass)) {\n\t                                var originalSlide = s.wrapper.children('[data-swiper-slide-index=\"' + slideOriginalIndex + '\"]:not(.' + s.params.slideDuplicateClass + ')');\n\t                                s.lazy.loadImageInSlide(originalSlide.index(), false);\n\t                            }\n\t                            else {\n\t                                var duplicatedSlide = s.wrapper.children('.' + s.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + slideOriginalIndex + '\"]');\n\t                                s.lazy.loadImageInSlide(duplicatedSlide.index(), false);\n\t                            }\n\t                        }\n\t                        s.emit('onLazyImageReady', s, slide[0], _img[0]);\n\t                    });\n\t        \n\t                    s.emit('onLazyImageLoad', s, slide[0], _img[0]);\n\t                });\n\t        \n\t            },\n\t            load: function () {\n\t                var i;\n\t                var slidesPerView = s.params.slidesPerView;\n\t                if (slidesPerView === 'auto') {\n\t                    slidesPerView = 0;\n\t                }\n\t                if (!s.lazy.initialImageLoaded) s.lazy.initialImageLoaded = true;\n\t                if (s.params.watchSlidesVisibility) {\n\t                    s.wrapper.children('.' + s.params.slideVisibleClass).each(function () {\n\t                        s.lazy.loadImageInSlide($(this).index());\n\t                    });\n\t                }\n\t                else {\n\t                    if (slidesPerView > 1) {\n\t                        for (i = s.activeIndex; i < s.activeIndex + slidesPerView ; i++) {\n\t                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n\t                        }\n\t                    }\n\t                    else {\n\t                        s.lazy.loadImageInSlide(s.activeIndex);\n\t                    }\n\t                }\n\t                if (s.params.lazyLoadingInPrevNext) {\n\t                    if (slidesPerView > 1 || (s.params.lazyLoadingInPrevNextAmount && s.params.lazyLoadingInPrevNextAmount > 1)) {\n\t                        var amount = s.params.lazyLoadingInPrevNextAmount;\n\t                        var spv = slidesPerView;\n\t                        var maxIndex = Math.min(s.activeIndex + spv + Math.max(amount, spv), s.slides.length);\n\t                        var minIndex = Math.max(s.activeIndex - Math.max(spv, amount), 0);\n\t                        // Next Slides\n\t                        for (i = s.activeIndex + slidesPerView; i < maxIndex; i++) {\n\t                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n\t                        }\n\t                        // Prev Slides\n\t                        for (i = minIndex; i < s.activeIndex ; i++) {\n\t                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n\t                        }\n\t                    }\n\t                    else {\n\t                        var nextSlide = s.wrapper.children('.' + s.params.slideNextClass);\n\t                        if (nextSlide.length > 0) s.lazy.loadImageInSlide(nextSlide.index());\n\t        \n\t                        var prevSlide = s.wrapper.children('.' + s.params.slidePrevClass);\n\t                        if (prevSlide.length > 0) s.lazy.loadImageInSlide(prevSlide.index());\n\t                    }\n\t                }\n\t            },\n\t            onTransitionStart: function () {\n\t                if (s.params.lazyLoading) {\n\t                    if (s.params.lazyLoadingOnTransitionStart || (!s.params.lazyLoadingOnTransitionStart && !s.lazy.initialImageLoaded)) {\n\t                        s.lazy.load();\n\t                    }\n\t                }\n\t            },\n\t            onTransitionEnd: function () {\n\t                if (s.params.lazyLoading && !s.params.lazyLoadingOnTransitionStart) {\n\t                    s.lazy.load();\n\t                }\n\t            }\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Scrollbar\n\t          ===========================*/\n\t        s.scrollbar = {\n\t            isTouched: false,\n\t            setDragPosition: function (e) {\n\t                var sb = s.scrollbar;\n\t                var x = 0, y = 0;\n\t                var translate;\n\t                var pointerPosition = s.isHorizontal() ?\n\t                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX) :\n\t                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY) ;\n\t                var position = (pointerPosition) - sb.track.offset()[s.isHorizontal() ? 'left' : 'top'] - sb.dragSize / 2;\n\t                var positionMin = -s.minTranslate() * sb.moveDivider;\n\t                var positionMax = -s.maxTranslate() * sb.moveDivider;\n\t                if (position < positionMin) {\n\t                    position = positionMin;\n\t                }\n\t                else if (position > positionMax) {\n\t                    position = positionMax;\n\t                }\n\t                position = -position / sb.moveDivider;\n\t                s.updateProgress(position);\n\t                s.setWrapperTranslate(position, true);\n\t            },\n\t            dragStart: function (e) {\n\t                var sb = s.scrollbar;\n\t                sb.isTouched = true;\n\t                e.preventDefault();\n\t                e.stopPropagation();\n\t        \n\t                sb.setDragPosition(e);\n\t                clearTimeout(sb.dragTimeout);\n\t        \n\t                sb.track.transition(0);\n\t                if (s.params.scrollbarHide) {\n\t                    sb.track.css('opacity', 1);\n\t                }\n\t                s.wrapper.transition(100);\n\t                sb.drag.transition(100);\n\t                s.emit('onScrollbarDragStart', s);\n\t            },\n\t            dragMove: function (e) {\n\t                var sb = s.scrollbar;\n\t                if (!sb.isTouched) return;\n\t                if (e.preventDefault) e.preventDefault();\n\t                else e.returnValue = false;\n\t                sb.setDragPosition(e);\n\t                s.wrapper.transition(0);\n\t                sb.track.transition(0);\n\t                sb.drag.transition(0);\n\t                s.emit('onScrollbarDragMove', s);\n\t            },\n\t            dragEnd: function (e) {\n\t                var sb = s.scrollbar;\n\t                if (!sb.isTouched) return;\n\t                sb.isTouched = false;\n\t                if (s.params.scrollbarHide) {\n\t                    clearTimeout(sb.dragTimeout);\n\t                    sb.dragTimeout = setTimeout(function () {\n\t                        sb.track.css('opacity', 0);\n\t                        sb.track.transition(400);\n\t                    }, 1000);\n\t        \n\t                }\n\t                s.emit('onScrollbarDragEnd', s);\n\t                if (s.params.scrollbarSnapOnRelease) {\n\t                    s.slideReset();\n\t                }\n\t            },\n\t            draggableEvents: (function () {\n\t                if ((s.params.simulateTouch === false && !s.support.touch)) return s.touchEventsDesktop;\n\t                else return s.touchEvents;\n\t            })(),\n\t            enableDraggable: function () {\n\t                var sb = s.scrollbar;\n\t                var target = s.support.touch ? sb.track : document;\n\t                $(sb.track).on(sb.draggableEvents.start, sb.dragStart);\n\t                $(target).on(sb.draggableEvents.move, sb.dragMove);\n\t                $(target).on(sb.draggableEvents.end, sb.dragEnd);\n\t            },\n\t            disableDraggable: function () {\n\t                var sb = s.scrollbar;\n\t                var target = s.support.touch ? sb.track : document;\n\t                $(sb.track).off(s.draggableEvents.start, sb.dragStart);\n\t                $(target).off(s.draggableEvents.move, sb.dragMove);\n\t                $(target).off(s.draggableEvents.end, sb.dragEnd);\n\t            },\n\t            set: function () {\n\t                if (!s.params.scrollbar) return;\n\t                var sb = s.scrollbar;\n\t                sb.track = $(s.params.scrollbar);\n\t                if (s.params.uniqueNavElements && typeof s.params.scrollbar === 'string' && sb.track.length > 1 && s.container.find(s.params.scrollbar).length === 1) {\n\t                    sb.track = s.container.find(s.params.scrollbar);\n\t                }\n\t                sb.drag = sb.track.find('.swiper-scrollbar-drag');\n\t                if (sb.drag.length === 0) {\n\t                    sb.drag = $('<div class=\"swiper-scrollbar-drag\"></div>');\n\t                    sb.track.append(sb.drag);\n\t                }\n\t                sb.drag[0].style.width = '';\n\t                sb.drag[0].style.height = '';\n\t                sb.trackSize = s.isHorizontal() ? sb.track[0].offsetWidth : sb.track[0].offsetHeight;\n\t        \n\t                sb.divider = s.size / s.virtualSize;\n\t                sb.moveDivider = sb.divider * (sb.trackSize / s.size);\n\t                sb.dragSize = sb.trackSize * sb.divider;\n\t        \n\t                if (s.isHorizontal()) {\n\t                    sb.drag[0].style.width = sb.dragSize + 'px';\n\t                }\n\t                else {\n\t                    sb.drag[0].style.height = sb.dragSize + 'px';\n\t                }\n\t        \n\t                if (sb.divider >= 1) {\n\t                    sb.track[0].style.display = 'none';\n\t                }\n\t                else {\n\t                    sb.track[0].style.display = '';\n\t                }\n\t                if (s.params.scrollbarHide) {\n\t                    sb.track[0].style.opacity = 0;\n\t                }\n\t            },\n\t            setTranslate: function () {\n\t                if (!s.params.scrollbar) return;\n\t                var diff;\n\t                var sb = s.scrollbar;\n\t                var translate = s.translate || 0;\n\t                var newPos;\n\t        \n\t                var newSize = sb.dragSize;\n\t                newPos = (sb.trackSize - sb.dragSize) * s.progress;\n\t                if (s.rtl && s.isHorizontal()) {\n\t                    newPos = -newPos;\n\t                    if (newPos > 0) {\n\t                        newSize = sb.dragSize - newPos;\n\t                        newPos = 0;\n\t                    }\n\t                    else if (-newPos + sb.dragSize > sb.trackSize) {\n\t                        newSize = sb.trackSize + newPos;\n\t                    }\n\t                }\n\t                else {\n\t                    if (newPos < 0) {\n\t                        newSize = sb.dragSize + newPos;\n\t                        newPos = 0;\n\t                    }\n\t                    else if (newPos + sb.dragSize > sb.trackSize) {\n\t                        newSize = sb.trackSize - newPos;\n\t                    }\n\t                }\n\t                if (s.isHorizontal()) {\n\t                    if (s.support.transforms3d) {\n\t                        sb.drag.transform('translate3d(' + (newPos) + 'px, 0, 0)');\n\t                    }\n\t                    else {\n\t                        sb.drag.transform('translateX(' + (newPos) + 'px)');\n\t                    }\n\t                    sb.drag[0].style.width = newSize + 'px';\n\t                }\n\t                else {\n\t                    if (s.support.transforms3d) {\n\t                        sb.drag.transform('translate3d(0px, ' + (newPos) + 'px, 0)');\n\t                    }\n\t                    else {\n\t                        sb.drag.transform('translateY(' + (newPos) + 'px)');\n\t                    }\n\t                    sb.drag[0].style.height = newSize + 'px';\n\t                }\n\t                if (s.params.scrollbarHide) {\n\t                    clearTimeout(sb.timeout);\n\t                    sb.track[0].style.opacity = 1;\n\t                    sb.timeout = setTimeout(function () {\n\t                        sb.track[0].style.opacity = 0;\n\t                        sb.track.transition(400);\n\t                    }, 1000);\n\t                }\n\t            },\n\t            setTransition: function (duration) {\n\t                if (!s.params.scrollbar) return;\n\t                s.scrollbar.drag.transition(duration);\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          Controller\n\t          ===========================*/\n\t        s.controller = {\n\t            LinearSpline: function (x, y) {\n\t                this.x = x;\n\t                this.y = y;\n\t                this.lastIndex = x.length - 1;\n\t                // Given an x value (x2), return the expected y2 value:\n\t                // (x1,y1) is the known point before given value,\n\t                // (x3,y3) is the known point after given value.\n\t                var i1, i3;\n\t                var l = this.x.length;\n\t        \n\t                this.interpolate = function (x2) {\n\t                    if (!x2) return 0;\n\t        \n\t                    // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n\t                    i3 = binarySearch(this.x, x2);\n\t                    i1 = i3 - 1;\n\t        \n\t                    // We have our indexes i1 & i3, so we can calculate already:\n\t                    // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n\t                    return ((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1]) + this.y[i1];\n\t                };\n\t        \n\t                var binarySearch = (function() {\n\t                    var maxIndex, minIndex, guess;\n\t                    return function(array, val) {\n\t                        minIndex = -1;\n\t                        maxIndex = array.length;\n\t                        while (maxIndex - minIndex > 1)\n\t                            if (array[guess = maxIndex + minIndex >> 1] <= val) {\n\t                                minIndex = guess;\n\t                            } else {\n\t                                maxIndex = guess;\n\t                            }\n\t                        return maxIndex;\n\t                    };\n\t                })();\n\t            },\n\t            //xxx: for now i will just save one spline function to to\n\t            getInterpolateFunction: function(c){\n\t                if(!s.controller.spline) s.controller.spline = s.params.loop ?\n\t                    new s.controller.LinearSpline(s.slidesGrid, c.slidesGrid) :\n\t                    new s.controller.LinearSpline(s.snapGrid, c.snapGrid);\n\t            },\n\t            setTranslate: function (translate, byController) {\n\t               var controlled = s.params.control;\n\t               var multiplier, controlledTranslate;\n\t               function setControlledTranslate(c) {\n\t                    // this will create an Interpolate function based on the snapGrids\n\t                    // x is the Grid of the scrolled scroller and y will be the controlled scroller\n\t                    // it makes sense to create this only once and recall it for the interpolation\n\t                    // the function does a lot of value caching for performance\n\t                    translate = c.rtl && c.params.direction === 'horizontal' ? -s.translate : s.translate;\n\t                    if (s.params.controlBy === 'slide') {\n\t                        s.controller.getInterpolateFunction(c);\n\t                        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n\t                        // but it did not work out\n\t                        controlledTranslate = -s.controller.spline.interpolate(-translate);\n\t                    }\n\t        \n\t                    if(!controlledTranslate || s.params.controlBy === 'container'){\n\t                        multiplier = (c.maxTranslate() - c.minTranslate()) / (s.maxTranslate() - s.minTranslate());\n\t                        controlledTranslate = (translate - s.minTranslate()) * multiplier + c.minTranslate();\n\t                    }\n\t        \n\t                    if (s.params.controlInverse) {\n\t                        controlledTranslate = c.maxTranslate() - controlledTranslate;\n\t                    }\n\t                    c.updateProgress(controlledTranslate);\n\t                    c.setWrapperTranslate(controlledTranslate, false, s);\n\t                    c.updateActiveIndex();\n\t               }\n\t               if (s.isArray(controlled)) {\n\t                   for (var i = 0; i < controlled.length; i++) {\n\t                       if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n\t                           setControlledTranslate(controlled[i]);\n\t                       }\n\t                   }\n\t               }\n\t               else if (controlled instanceof Swiper && byController !== controlled) {\n\t        \n\t                   setControlledTranslate(controlled);\n\t               }\n\t            },\n\t            setTransition: function (duration, byController) {\n\t                var controlled = s.params.control;\n\t                var i;\n\t                function setControlledTransition(c) {\n\t                    c.setWrapperTransition(duration, s);\n\t                    if (duration !== 0) {\n\t                        c.onTransitionStart();\n\t                        c.wrapper.transitionEnd(function(){\n\t                            if (!controlled) return;\n\t                            if (c.params.loop && s.params.controlBy === 'slide') {\n\t                                c.fixLoop();\n\t                            }\n\t                            c.onTransitionEnd();\n\t        \n\t                        });\n\t                    }\n\t                }\n\t                if (s.isArray(controlled)) {\n\t                    for (i = 0; i < controlled.length; i++) {\n\t                        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n\t                            setControlledTransition(controlled[i]);\n\t                        }\n\t                    }\n\t                }\n\t                else if (controlled instanceof Swiper && byController !== controlled) {\n\t                    setControlledTransition(controlled);\n\t                }\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          Hash Navigation\n\t          ===========================*/\n\t        s.hashnav = {\n\t            onHashCange: function (e, a) {\n\t                var newHash = document.location.hash.replace('#', '');\n\t                var activeSlideHash = s.slides.eq(s.activeIndex).attr('data-hash');\n\t                if (newHash !== activeSlideHash) {\n\t                    s.slideTo(s.wrapper.children('.' + s.params.slideClass + '[data-hash=\"' + (newHash) + '\"]').index());\n\t                }\n\t            },\n\t            attachEvents: function (detach) {\n\t                var action = detach ? 'off' : 'on';\n\t                $(window)[action]('hashchange', s.hashnav.onHashCange);\n\t            },\n\t            setHash: function () {\n\t                if (!s.hashnav.initialized || !s.params.hashnav) return;\n\t                if (s.params.replaceState && window.history && window.history.replaceState) {\n\t                    window.history.replaceState(null, null, ('#' + s.slides.eq(s.activeIndex).attr('data-hash') || ''));\n\t                } else {\n\t                    var slide = s.slides.eq(s.activeIndex);\n\t                    var hash = slide.attr('data-hash') || slide.attr('data-history');\n\t                    document.location.hash = hash || '';\n\t                }\n\t            },\n\t            init: function () {\n\t                if (!s.params.hashnav || s.params.history) return;\n\t                s.hashnav.initialized = true;\n\t                var hash = document.location.hash.replace('#', '');\n\t                if (!hash) return;\n\t                var speed = 0;\n\t                for (var i = 0, length = s.slides.length; i < length; i++) {\n\t                    var slide = s.slides.eq(i);\n\t                    var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n\t                    if (slideHash === hash && !slide.hasClass(s.params.slideDuplicateClass)) {\n\t                        var index = slide.index();\n\t                        s.slideTo(index, speed, s.params.runCallbacksOnInit, true);\n\t                    }\n\t                }\n\t                if (s.params.hashnavWatchState) s.hashnav.attachEvents();\n\t            },\n\t            destroy: function () {\n\t                if (s.params.hashnavWatchState) s.hashnav.attachEvents(true);\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          History Api with fallback to Hashnav\n\t          ===========================*/\n\t        s.history = {\n\t            init: function () {\n\t                if (!s.params.history) return;\n\t                if (!window.history || !window.history.pushState) {\n\t                    s.params.history = false;\n\t                    s.params.hashnav = true;\n\t                    return;\n\t                }\n\t                s.history.initialized = true;\n\t                this.paths = this.getPathValues();\n\t                if (!this.paths.key && !this.paths.value) return;\n\t                this.scrollToSlide(0, this.paths.value, s.params.runCallbacksOnInit);\n\t                if (!s.params.replaceState) {\n\t                    window.addEventListener('popstate', this.setHistoryPopState);\n\t                }\n\t            },\n\t            setHistoryPopState: function() {\n\t                s.history.paths = s.history.getPathValues();\n\t                s.history.scrollToSlide(s.params.speed, s.history.paths.value, false);\n\t            },\n\t            getPathValues: function() {\n\t                var pathArray = window.location.pathname.slice(1).split('/');\n\t                var total = pathArray.length;\n\t                var key = pathArray[total - 2];\n\t                var value = pathArray[total - 1];\n\t                return { key: key, value: value };\n\t            },\n\t            setHistory: function (key, index) {\n\t                if (!s.history.initialized || !s.params.history) return;\n\t                var slide = s.slides.eq(index);\n\t                var value = this.slugify(slide.attr('data-history'));\n\t                if (!window.location.pathname.includes(key)) {\n\t                    value = key + '/' + value;\n\t                }\n\t                if (s.params.replaceState) {\n\t                    window.history.replaceState(null, null, value);\n\t                } else {\n\t                    window.history.pushState(null, null, value);\n\t                }\n\t            },\n\t            slugify: function(text) {\n\t                return text.toString().toLowerCase()\n\t                    .replace(/\\s+/g, '-')\n\t                    .replace(/[^\\w\\-]+/g, '')\n\t                    .replace(/\\-\\-+/g, '-')\n\t                    .replace(/^-+/, '')\n\t                    .replace(/-+$/, '');\n\t            },\n\t            scrollToSlide: function(speed, value, runCallbacks) {\n\t                if (value) {\n\t                    for (var i = 0, length = s.slides.length; i < length; i++) {\n\t                        var slide = s.slides.eq(i);\n\t                        var slideHistory = this.slugify(slide.attr('data-history'));\n\t                        if (slideHistory === value && !slide.hasClass(s.params.slideDuplicateClass)) {\n\t                            var index = slide.index();\n\t                            s.slideTo(index, speed, runCallbacks);\n\t                        }\n\t                    }\n\t                } else {\n\t                    s.slideTo(0, speed, runCallbacks);\n\t                }\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          Keyboard Control\n\t          ===========================*/\n\t        function handleKeyboard(e) {\n\t            if (e.originalEvent) e = e.originalEvent; //jquery fix\n\t            var kc = e.keyCode || e.charCode;\n\t            // Directions locks\n\t            if (!s.params.allowSwipeToNext && (s.isHorizontal() && kc === 39 || !s.isHorizontal() && kc === 40)) {\n\t                return false;\n\t            }\n\t            if (!s.params.allowSwipeToPrev && (s.isHorizontal() && kc === 37 || !s.isHorizontal() && kc === 38)) {\n\t                return false;\n\t            }\n\t            if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n\t                return;\n\t            }\n\t            if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n\t                return;\n\t            }\n\t            if (kc === 37 || kc === 39 || kc === 38 || kc === 40) {\n\t                var inView = false;\n\t                //Check that swiper should be inside of visible area of window\n\t                if (s.container.parents('.' + s.params.slideClass).length > 0 && s.container.parents('.' + s.params.slideActiveClass).length === 0) {\n\t                    return;\n\t                }\n\t                var windowScroll = {\n\t                    left: window.pageXOffset,\n\t                    top: window.pageYOffset\n\t                };\n\t                var windowWidth = window.innerWidth;\n\t                var windowHeight = window.innerHeight;\n\t                var swiperOffset = s.container.offset();\n\t                if (s.rtl) swiperOffset.left = swiperOffset.left - s.container[0].scrollLeft;\n\t                var swiperCoord = [\n\t                    [swiperOffset.left, swiperOffset.top],\n\t                    [swiperOffset.left + s.width, swiperOffset.top],\n\t                    [swiperOffset.left, swiperOffset.top + s.height],\n\t                    [swiperOffset.left + s.width, swiperOffset.top + s.height]\n\t                ];\n\t                for (var i = 0; i < swiperCoord.length; i++) {\n\t                    var point = swiperCoord[i];\n\t                    if (\n\t                        point[0] >= windowScroll.left && point[0] <= windowScroll.left + windowWidth &&\n\t                        point[1] >= windowScroll.top && point[1] <= windowScroll.top + windowHeight\n\t                    ) {\n\t                        inView = true;\n\t                    }\n\t        \n\t                }\n\t                if (!inView) return;\n\t            }\n\t            if (s.isHorizontal()) {\n\t                if (kc === 37 || kc === 39) {\n\t                    if (e.preventDefault) e.preventDefault();\n\t                    else e.returnValue = false;\n\t                }\n\t                if ((kc === 39 && !s.rtl) || (kc === 37 && s.rtl)) s.slideNext();\n\t                if ((kc === 37 && !s.rtl) || (kc === 39 && s.rtl)) s.slidePrev();\n\t            }\n\t            else {\n\t                if (kc === 38 || kc === 40) {\n\t                    if (e.preventDefault) e.preventDefault();\n\t                    else e.returnValue = false;\n\t                }\n\t                if (kc === 40) s.slideNext();\n\t                if (kc === 38) s.slidePrev();\n\t            }\n\t        }\n\t        s.disableKeyboardControl = function () {\n\t            s.params.keyboardControl = false;\n\t            $(document).off('keydown', handleKeyboard);\n\t        };\n\t        s.enableKeyboardControl = function () {\n\t            s.params.keyboardControl = true;\n\t            $(document).on('keydown', handleKeyboard);\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Mousewheel Control\n\t          ===========================*/\n\t        s.mousewheel = {\n\t            event: false,\n\t            lastScrollTime: (new window.Date()).getTime()\n\t        };\n\t        if (s.params.mousewheelControl) {\n\t            /**\n\t             * The best combination if you prefer spinX + spinY normalization.  It favors\n\t             * the older DOMMouseScroll for Firefox, as FF does not include wheelDelta with\n\t             * 'wheel' event, making spin speed determination impossible.\n\t             */\n\t            s.mousewheel.event = (navigator.userAgent.indexOf('firefox') > -1) ?\n\t                'DOMMouseScroll' :\n\t                isEventSupported() ?\n\t                    'wheel' : 'mousewheel';\n\t        }\n\t        \n\t        function isEventSupported() {\n\t            var eventName = 'onwheel';\n\t            var isSupported = eventName in document;\n\t        \n\t            if (!isSupported) {\n\t                var element = document.createElement('div');\n\t                element.setAttribute(eventName, 'return;');\n\t                isSupported = typeof element[eventName] === 'function';\n\t            }\n\t        \n\t            if (!isSupported &&\n\t                document.implementation &&\n\t                document.implementation.hasFeature &&\n\t                    // always returns true in newer browsers as per the standard.\n\t                    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n\t                document.implementation.hasFeature('', '') !== true ) {\n\t                // This is the only way to test support for the `wheel` event in IE9+.\n\t                isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n\t            }\n\t        \n\t            return isSupported;\n\t        }\n\t        \n\t        function handleMousewheel(e) {\n\t            if (e.originalEvent) e = e.originalEvent; //jquery fix\n\t            var delta = 0;\n\t            var rtlFactor = s.rtl ? -1 : 1;\n\t        \n\t            var data = normalizeWheel( e );\n\t        \n\t            if (s.params.mousewheelForceToAxis) {\n\t                if (s.isHorizontal()) {\n\t                    if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n\t                    else return;\n\t                }\n\t                else {\n\t                    if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n\t                    else return;\n\t                }\n\t            }\n\t            else {\n\t                delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? - data.pixelX * rtlFactor : - data.pixelY;\n\t            }\n\t        \n\t            if (delta === 0) return;\n\t        \n\t            if (s.params.mousewheelInvert) delta = -delta;\n\t        \n\t            if (!s.params.freeMode) {\n\t                if ((new window.Date()).getTime() - s.mousewheel.lastScrollTime > 60) {\n\t                    if (delta < 0) {\n\t                        if ((!s.isEnd || s.params.loop) && !s.animating) {\n\t                            s.slideNext();\n\t                            s.emit('onScroll', s, e);\n\t                        }\n\t                        else if (s.params.mousewheelReleaseOnEdges) return true;\n\t                    }\n\t                    else {\n\t                        if ((!s.isBeginning || s.params.loop) && !s.animating) {\n\t                            s.slidePrev();\n\t                            s.emit('onScroll', s, e);\n\t                        }\n\t                        else if (s.params.mousewheelReleaseOnEdges) return true;\n\t                    }\n\t                }\n\t                s.mousewheel.lastScrollTime = (new window.Date()).getTime();\n\t        \n\t            }\n\t            else {\n\t                //Freemode or scrollContainer:\n\t                var position = s.getWrapperTranslate() + delta * s.params.mousewheelSensitivity;\n\t                var wasBeginning = s.isBeginning,\n\t                    wasEnd = s.isEnd;\n\t        \n\t                if (position >= s.minTranslate()) position = s.minTranslate();\n\t                if (position <= s.maxTranslate()) position = s.maxTranslate();\n\t        \n\t                s.setWrapperTransition(0);\n\t                s.setWrapperTranslate(position);\n\t                s.updateProgress();\n\t                s.updateActiveIndex();\n\t        \n\t                if (!wasBeginning && s.isBeginning || !wasEnd && s.isEnd) {\n\t                    s.updateClasses();\n\t                }\n\t        \n\t                if (s.params.freeModeSticky) {\n\t                    clearTimeout(s.mousewheel.timeout);\n\t                    s.mousewheel.timeout = setTimeout(function () {\n\t                        s.slideReset();\n\t                    }, 300);\n\t                }\n\t                else {\n\t                    if (s.params.lazyLoading && s.lazy) {\n\t                        s.lazy.load();\n\t                    }\n\t                }\n\t                // Emit event\n\t                s.emit('onScroll', s, e);\n\t        \n\t                // Stop autoplay\n\t                if (s.params.autoplay && s.params.autoplayDisableOnInteraction) s.stopAutoplay();\n\t        \n\t                // Return page scroll on edge positions\n\t                if (position === 0 || position === s.maxTranslate()) return;\n\t            }\n\t        \n\t            if (e.preventDefault) e.preventDefault();\n\t            else e.returnValue = false;\n\t            return false;\n\t        }\n\t        s.disableMousewheelControl = function () {\n\t            if (!s.mousewheel.event) return false;\n\t            var target = s.container;\n\t            if (s.params.mousewheelEventsTarged !== 'container') {\n\t                target = $(s.params.mousewheelEventsTarged);\n\t            }\n\t            target.off(s.mousewheel.event, handleMousewheel);\n\t            return true;\n\t        };\n\t        \n\t        s.enableMousewheelControl = function () {\n\t            if (!s.mousewheel.event) return false;\n\t            var target = s.container;\n\t            if (s.params.mousewheelEventsTarged !== 'container') {\n\t                target = $(s.params.mousewheelEventsTarged);\n\t            }\n\t            target.on(s.mousewheel.event, handleMousewheel);\n\t            return true;\n\t        };\n\t        \n\t        /**\n\t         * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n\t         * complicated, thus this doc is long and (hopefully) detailed enough to answer\n\t         * your questions.\n\t         *\n\t         * If you need to react to the mouse wheel in a predictable way, this code is\n\t         * like your bestest friend. * hugs *\n\t         *\n\t         * As of today, there are 4 DOM event types you can listen to:\n\t         *\n\t         *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n\t         *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n\t         *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n\t         *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n\t         *\n\t         * So what to do?  The is the best:\n\t         *\n\t         *   normalizeWheel.getEventType();\n\t         *\n\t         * In your event callback, use this code to get sane interpretation of the\n\t         * deltas.  This code will return an object with properties:\n\t         *\n\t         *   spinX   -- normalized spin speed (use for zoom) - x plane\n\t         *   spinY   -- \" - y plane\n\t         *   pixelX  -- normalized distance (to pixels) - x plane\n\t         *   pixelY  -- \" - y plane\n\t         *\n\t         * Wheel values are provided by the browser assuming you are using the wheel to\n\t         * scroll a web page by a number of lines or pixels (or pages).  Values can vary\n\t         * significantly on different platforms and browsers, forgetting that you can\n\t         * scroll at different speeds.  Some devices (like trackpads) emit more events\n\t         * at smaller increments with fine granularity, and some emit massive jumps with\n\t         * linear speed or acceleration.\n\t         *\n\t         * This code does its best to normalize the deltas for you:\n\t         *\n\t         *   - spin is trying to normalize how far the wheel was spun (or trackpad\n\t         *     dragged).  This is super useful for zoom support where you want to\n\t         *     throw away the chunky scroll steps on the PC and make those equal to\n\t         *     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n\t         *     resolve a single slow step on a wheel to 1.\n\t         *\n\t         *   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n\t         *     get the crazy differences between browsers, but at least it'll be in\n\t         *     pixels!\n\t         *\n\t         *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n\t         *     should translate to positive value zooming IN, negative zooming OUT.\n\t         *     This matches the newer 'wheel' event.\n\t         *\n\t         * Why are there spinX, spinY (or pixels)?\n\t         *\n\t         *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n\t         *     with a mouse.  It results in side-scrolling in the browser by default.\n\t         *\n\t         *   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n\t         *\n\t         *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n\t         *     probably is by browsers in conjunction with fancy 3D controllers .. but\n\t         *     you know.\n\t         *\n\t         * Implementation info:\n\t         *\n\t         * Examples of 'wheel' event if you scroll slowly (down) by one step with an\n\t         * average mouse:\n\t         *\n\t         *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n\t         *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n\t         *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n\t         *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n\t         *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n\t         *\n\t         * On the trackpad:\n\t         *\n\t         *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n\t         *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n\t         *\n\t         * On other/older browsers.. it's more complicated as there can be multiple and\n\t         * also missing delta values.\n\t         *\n\t         * The 'wheel' event is more standard:\n\t         *\n\t         * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n\t         *\n\t         * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n\t         * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n\t         * backward compatibility with older events.  Those other values help us\n\t         * better normalize spin speed.  Example of what the browsers provide:\n\t         *\n\t         *                          | event.wheelDelta | event.detail\n\t         *        ------------------+------------------+--------------\n\t         *          Safari v5/OS X  |       -120       |       0\n\t         *          Safari v5/Win7  |       -120       |       0\n\t         *         Chrome v17/OS X  |       -120       |       0\n\t         *         Chrome v17/Win7  |       -120       |       0\n\t         *                IE9/Win7  |       -120       |   undefined\n\t         *         Firefox v4/OS X  |     undefined    |       1\n\t         *         Firefox v4/Win7  |     undefined    |       3\n\t         *\n\t         */\n\t        function normalizeWheel( /*object*/ event ) /*object*/ {\n\t            // Reasonable defaults\n\t            var PIXEL_STEP = 10;\n\t            var LINE_HEIGHT = 40;\n\t            var PAGE_HEIGHT = 800;\n\t        \n\t            var sX = 0, sY = 0,       // spinX, spinY\n\t                pX = 0, pY = 0;       // pixelX, pixelY\n\t        \n\t            // Legacy\n\t            if( 'detail' in event ) {\n\t                sY = event.detail;\n\t            }\n\t            if( 'wheelDelta' in event ) {\n\t                sY = -event.wheelDelta / 120;\n\t            }\n\t            if( 'wheelDeltaY' in event ) {\n\t                sY = -event.wheelDeltaY / 120;\n\t            }\n\t            if( 'wheelDeltaX' in event ) {\n\t                sX = -event.wheelDeltaX / 120;\n\t            }\n\t        \n\t            // side scrolling on FF with DOMMouseScroll\n\t            if( 'axis' in event && event.axis === event.HORIZONTAL_AXIS ) {\n\t                sX = sY;\n\t                sY = 0;\n\t            }\n\t        \n\t            pX = sX * PIXEL_STEP;\n\t            pY = sY * PIXEL_STEP;\n\t        \n\t            if( 'deltaY' in event ) {\n\t                pY = event.deltaY;\n\t            }\n\t            if( 'deltaX' in event ) {\n\t                pX = event.deltaX;\n\t            }\n\t        \n\t            if( (pX || pY) && event.deltaMode ) {\n\t                if( event.deltaMode === 1 ) {          // delta in LINE units\n\t                    pX *= LINE_HEIGHT;\n\t                    pY *= LINE_HEIGHT;\n\t                } else {                             // delta in PAGE units\n\t                    pX *= PAGE_HEIGHT;\n\t                    pY *= PAGE_HEIGHT;\n\t                }\n\t            }\n\t        \n\t            // Fall-back if spin cannot be determined\n\t            if( pX && !sX ) {\n\t                sX = (pX < 1) ? -1 : 1;\n\t            }\n\t            if( pY && !sY ) {\n\t                sY = (pY < 1) ? -1 : 1;\n\t            }\n\t        \n\t            return {\n\t                spinX: sX,\n\t                spinY: sY,\n\t                pixelX: pX,\n\t                pixelY: pY\n\t            };\n\t        }\n\t\n\t        /*=========================\n\t          Parallax\n\t          ===========================*/\n\t        function setParallaxTransform(el, progress) {\n\t            el = $(el);\n\t            var p, pX, pY;\n\t            var rtlFactor = s.rtl ? -1 : 1;\n\t        \n\t            p = el.attr('data-swiper-parallax') || '0';\n\t            pX = el.attr('data-swiper-parallax-x');\n\t            pY = el.attr('data-swiper-parallax-y');\n\t            if (pX || pY) {\n\t                pX = pX || '0';\n\t                pY = pY || '0';\n\t            }\n\t            else {\n\t                if (s.isHorizontal()) {\n\t                    pX = p;\n\t                    pY = '0';\n\t                }\n\t                else {\n\t                    pY = p;\n\t                    pX = '0';\n\t                }\n\t            }\n\t        \n\t            if ((pX).indexOf('%') >= 0) {\n\t                pX = parseInt(pX, 10) * progress * rtlFactor + '%';\n\t            }\n\t            else {\n\t                pX = pX * progress * rtlFactor + 'px' ;\n\t            }\n\t            if ((pY).indexOf('%') >= 0) {\n\t                pY = parseInt(pY, 10) * progress + '%';\n\t            }\n\t            else {\n\t                pY = pY * progress + 'px' ;\n\t            }\n\t        \n\t            el.transform('translate3d(' + pX + ', ' + pY + ',0px)');\n\t        }\n\t        s.parallax = {\n\t            setTranslate: function () {\n\t                s.container.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){\n\t                    setParallaxTransform(this, s.progress);\n\t        \n\t                });\n\t                s.slides.each(function () {\n\t                    var slide = $(this);\n\t                    slide.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function () {\n\t                        var progress = Math.min(Math.max(slide[0].progress, -1), 1);\n\t                        setParallaxTransform(this, progress);\n\t                    });\n\t                });\n\t            },\n\t            setTransition: function (duration) {\n\t                if (typeof duration === 'undefined') duration = s.params.speed;\n\t                s.container.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){\n\t                    var el = $(this);\n\t                    var parallaxDuration = parseInt(el.attr('data-swiper-parallax-duration'), 10) || duration;\n\t                    if (duration === 0) parallaxDuration = 0;\n\t                    el.transition(parallaxDuration);\n\t                });\n\t            }\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Zoom\n\t          ===========================*/\n\t        s.zoom = {\n\t            // \"Global\" Props\n\t            scale: 1,\n\t            currentScale: 1,\n\t            isScaling: false,\n\t            gesture: {\n\t                slide: undefined,\n\t                slideWidth: undefined,\n\t                slideHeight: undefined,\n\t                image: undefined,\n\t                imageWrap: undefined,\n\t                zoomMax: s.params.zoomMax\n\t            },\n\t            image: {\n\t                isTouched: undefined,\n\t                isMoved: undefined,\n\t                currentX: undefined,\n\t                currentY: undefined,\n\t                minX: undefined,\n\t                minY: undefined,\n\t                maxX: undefined,\n\t                maxY: undefined,\n\t                width: undefined,\n\t                height: undefined,\n\t                startX: undefined,\n\t                startY: undefined,\n\t                touchesStart: {},\n\t                touchesCurrent: {}\n\t            },\n\t            velocity: {\n\t                x: undefined,\n\t                y: undefined,\n\t                prevPositionX: undefined,\n\t                prevPositionY: undefined,\n\t                prevTime: undefined\n\t            },\n\t            // Calc Scale From Multi-touches\n\t            getDistanceBetweenTouches: function (e) {\n\t                if (e.targetTouches.length < 2) return 1;\n\t                var x1 = e.targetTouches[0].pageX,\n\t                    y1 = e.targetTouches[0].pageY,\n\t                    x2 = e.targetTouches[1].pageX,\n\t                    y2 = e.targetTouches[1].pageY;\n\t                var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\t                return distance;\n\t            },\n\t            // Events\n\t            onGestureStart: function (e) {\n\t                var z = s.zoom;\n\t                if (!s.support.gestures) {\n\t                    if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\n\t                        return;\n\t                    }\n\t                    z.gesture.scaleStart = z.getDistanceBetweenTouches(e);\n\t                }\n\t                if (!z.gesture.slide || !z.gesture.slide.length) {\n\t                    z.gesture.slide = $(this);\n\t                    if (z.gesture.slide.length === 0) z.gesture.slide = s.slides.eq(s.activeIndex);\n\t                    z.gesture.image = z.gesture.slide.find('img, svg, canvas');\n\t                    z.gesture.imageWrap = z.gesture.image.parent('.' + s.params.zoomContainerClass);\n\t                    z.gesture.zoomMax = z.gesture.imageWrap.attr('data-swiper-zoom') || s.params.zoomMax ;\n\t                    if (z.gesture.imageWrap.length === 0) {\n\t                        z.gesture.image = undefined;\n\t                        return;\n\t                    }\n\t                }\n\t                z.gesture.image.transition(0);\n\t                z.isScaling = true;\n\t            },\n\t            onGestureChange: function (e) {\n\t                var z = s.zoom;\n\t                if (!s.support.gestures) {\n\t                    if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\n\t                        return;\n\t                    }\n\t                    z.gesture.scaleMove = z.getDistanceBetweenTouches(e);\n\t                }\n\t                if (!z.gesture.image || z.gesture.image.length === 0) return;\n\t                if (s.support.gestures) {\n\t                    z.scale = e.scale * z.currentScale;\n\t                }\n\t                else {\n\t                    z.scale = (z.gesture.scaleMove / z.gesture.scaleStart) * z.currentScale;\n\t                }\n\t                if (z.scale > z.gesture.zoomMax) {\n\t                    z.scale = z.gesture.zoomMax - 1 + Math.pow((z.scale - z.gesture.zoomMax + 1), 0.5);\n\t                }\n\t                if (z.scale < s.params.zoomMin) {\n\t                    z.scale =  s.params.zoomMin + 1 - Math.pow((s.params.zoomMin - z.scale + 1), 0.5);\n\t                }\n\t                z.gesture.image.transform('translate3d(0,0,0) scale(' + z.scale + ')');\n\t            },\n\t            onGestureEnd: function (e) {\n\t                var z = s.zoom;\n\t                if (!s.support.gestures) {\n\t                    if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2) {\n\t                        return;\n\t                    }\n\t                }\n\t                if (!z.gesture.image || z.gesture.image.length === 0) return;\n\t                z.scale = Math.max(Math.min(z.scale, z.gesture.zoomMax), s.params.zoomMin);\n\t                z.gesture.image.transition(s.params.speed).transform('translate3d(0,0,0) scale(' + z.scale + ')');\n\t                z.currentScale = z.scale;\n\t                z.isScaling = false;\n\t                if (z.scale === 1) z.gesture.slide = undefined;\n\t            },\n\t            onTouchStart: function (s, e) {\n\t                var z = s.zoom;\n\t                if (!z.gesture.image || z.gesture.image.length === 0) return;\n\t                if (z.image.isTouched) return;\n\t                if (s.device.os === 'android') e.preventDefault();\n\t                z.image.isTouched = true;\n\t                z.image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n\t                z.image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n\t            },\n\t            onTouchMove: function (e) {\n\t                var z = s.zoom;\n\t                if (!z.gesture.image || z.gesture.image.length === 0) return;\n\t                s.allowClick = false;\n\t                if (!z.image.isTouched || !z.gesture.slide) return;\n\t        \n\t                if (!z.image.isMoved) {\n\t                    z.image.width = z.gesture.image[0].offsetWidth;\n\t                    z.image.height = z.gesture.image[0].offsetHeight;\n\t                    z.image.startX = s.getTranslate(z.gesture.imageWrap[0], 'x') || 0;\n\t                    z.image.startY = s.getTranslate(z.gesture.imageWrap[0], 'y') || 0;\n\t                    z.gesture.slideWidth = z.gesture.slide[0].offsetWidth;\n\t                    z.gesture.slideHeight = z.gesture.slide[0].offsetHeight;\n\t                    z.gesture.imageWrap.transition(0);\n\t                }\n\t                // Define if we need image drag\n\t                var scaledWidth = z.image.width * z.scale;\n\t                var scaledHeight = z.image.height * z.scale;\n\t        \n\t                if (scaledWidth < z.gesture.slideWidth && scaledHeight < z.gesture.slideHeight) return;\n\t        \n\t                z.image.minX = Math.min((z.gesture.slideWidth / 2 - scaledWidth / 2), 0);\n\t                z.image.maxX = -z.image.minX;\n\t                z.image.minY = Math.min((z.gesture.slideHeight / 2 - scaledHeight / 2), 0);\n\t                z.image.maxY = -z.image.minY;\n\t        \n\t                z.image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n\t                z.image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\t        \n\t                if (!z.image.isMoved && !z.isScaling) {\n\t                    if (s.isHorizontal() &&\n\t                        (Math.floor(z.image.minX) === Math.floor(z.image.startX) && z.image.touchesCurrent.x < z.image.touchesStart.x) ||\n\t                        (Math.floor(z.image.maxX) === Math.floor(z.image.startX) && z.image.touchesCurrent.x > z.image.touchesStart.x)\n\t                        ) {\n\t                        z.image.isTouched = false;\n\t                        return;\n\t                    }\n\t                    else if (!s.isHorizontal() &&\n\t                        (Math.floor(z.image.minY) === Math.floor(z.image.startY) && z.image.touchesCurrent.y < z.image.touchesStart.y) ||\n\t                        (Math.floor(z.image.maxY) === Math.floor(z.image.startY) && z.image.touchesCurrent.y > z.image.touchesStart.y)\n\t                        ) {\n\t                        z.image.isTouched = false;\n\t                        return;\n\t                    }\n\t                }\n\t                e.preventDefault();\n\t                e.stopPropagation();\n\t        \n\t                z.image.isMoved = true;\n\t                z.image.currentX = z.image.touchesCurrent.x - z.image.touchesStart.x + z.image.startX;\n\t                z.image.currentY = z.image.touchesCurrent.y - z.image.touchesStart.y + z.image.startY;\n\t        \n\t                if (z.image.currentX < z.image.minX) {\n\t                    z.image.currentX =  z.image.minX + 1 - Math.pow((z.image.minX - z.image.currentX + 1), 0.8);\n\t                }\n\t                if (z.image.currentX > z.image.maxX) {\n\t                    z.image.currentX = z.image.maxX - 1 + Math.pow((z.image.currentX - z.image.maxX + 1), 0.8);\n\t                }\n\t        \n\t                if (z.image.currentY < z.image.minY) {\n\t                    z.image.currentY =  z.image.minY + 1 - Math.pow((z.image.minY - z.image.currentY + 1), 0.8);\n\t                }\n\t                if (z.image.currentY > z.image.maxY) {\n\t                    z.image.currentY = z.image.maxY - 1 + Math.pow((z.image.currentY - z.image.maxY + 1), 0.8);\n\t                }\n\t        \n\t                //Velocity\n\t                if (!z.velocity.prevPositionX) z.velocity.prevPositionX = z.image.touchesCurrent.x;\n\t                if (!z.velocity.prevPositionY) z.velocity.prevPositionY = z.image.touchesCurrent.y;\n\t                if (!z.velocity.prevTime) z.velocity.prevTime = Date.now();\n\t                z.velocity.x = (z.image.touchesCurrent.x - z.velocity.prevPositionX) / (Date.now() - z.velocity.prevTime) / 2;\n\t                z.velocity.y = (z.image.touchesCurrent.y - z.velocity.prevPositionY) / (Date.now() - z.velocity.prevTime) / 2;\n\t                if (Math.abs(z.image.touchesCurrent.x - z.velocity.prevPositionX) < 2) z.velocity.x = 0;\n\t                if (Math.abs(z.image.touchesCurrent.y - z.velocity.prevPositionY) < 2) z.velocity.y = 0;\n\t                z.velocity.prevPositionX = z.image.touchesCurrent.x;\n\t                z.velocity.prevPositionY = z.image.touchesCurrent.y;\n\t                z.velocity.prevTime = Date.now();\n\t        \n\t                z.gesture.imageWrap.transform('translate3d(' + z.image.currentX + 'px, ' + z.image.currentY + 'px,0)');\n\t            },\n\t            onTouchEnd: function (s, e) {\n\t                var z = s.zoom;\n\t                if (!z.gesture.image || z.gesture.image.length === 0) return;\n\t                if (!z.image.isTouched || !z.image.isMoved) {\n\t                    z.image.isTouched = false;\n\t                    z.image.isMoved = false;\n\t                    return;\n\t                }\n\t                z.image.isTouched = false;\n\t                z.image.isMoved = false;\n\t                var momentumDurationX = 300;\n\t                var momentumDurationY = 300;\n\t                var momentumDistanceX = z.velocity.x * momentumDurationX;\n\t                var newPositionX = z.image.currentX + momentumDistanceX;\n\t                var momentumDistanceY = z.velocity.y * momentumDurationY;\n\t                var newPositionY = z.image.currentY + momentumDistanceY;\n\t        \n\t                //Fix duration\n\t                if (z.velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - z.image.currentX) / z.velocity.x);\n\t                if (z.velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - z.image.currentY) / z.velocity.y);\n\t                var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\t        \n\t                z.image.currentX = newPositionX;\n\t                z.image.currentY = newPositionY;\n\t        \n\t                // Define if we need image drag\n\t                var scaledWidth = z.image.width * z.scale;\n\t                var scaledHeight = z.image.height * z.scale;\n\t                z.image.minX = Math.min((z.gesture.slideWidth / 2 - scaledWidth / 2), 0);\n\t                z.image.maxX = -z.image.minX;\n\t                z.image.minY = Math.min((z.gesture.slideHeight / 2 - scaledHeight / 2), 0);\n\t                z.image.maxY = -z.image.minY;\n\t                z.image.currentX = Math.max(Math.min(z.image.currentX, z.image.maxX), z.image.minX);\n\t                z.image.currentY = Math.max(Math.min(z.image.currentY, z.image.maxY), z.image.minY);\n\t        \n\t                z.gesture.imageWrap.transition(momentumDuration).transform('translate3d(' + z.image.currentX + 'px, ' + z.image.currentY + 'px,0)');\n\t            },\n\t            onTransitionEnd: function (s) {\n\t                var z = s.zoom;\n\t                if (z.gesture.slide && s.previousIndex !== s.activeIndex) {\n\t                    z.gesture.image.transform('translate3d(0,0,0) scale(1)');\n\t                    z.gesture.imageWrap.transform('translate3d(0,0,0)');\n\t                    z.gesture.slide = z.gesture.image = z.gesture.imageWrap = undefined;\n\t                    z.scale = z.currentScale = 1;\n\t                }\n\t            },\n\t            // Toggle Zoom\n\t            toggleZoom: function (s, e) {\n\t                var z = s.zoom;\n\t                if (!z.gesture.slide) {\n\t                    z.gesture.slide = s.clickedSlide ? $(s.clickedSlide) : s.slides.eq(s.activeIndex);\n\t                    z.gesture.image = z.gesture.slide.find('img, svg, canvas');\n\t                    z.gesture.imageWrap = z.gesture.image.parent('.' + s.params.zoomContainerClass);\n\t                }\n\t                if (!z.gesture.image || z.gesture.image.length === 0) return;\n\t        \n\t                var touchX, touchY, offsetX, offsetY, diffX, diffY, translateX, translateY, imageWidth, imageHeight, scaledWidth, scaledHeight, translateMinX, translateMinY, translateMaxX, translateMaxY, slideWidth, slideHeight;\n\t        \n\t                if (typeof z.image.touchesStart.x === 'undefined' && e) {\n\t                    touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n\t                    touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n\t                }\n\t                else {\n\t                    touchX = z.image.touchesStart.x;\n\t                    touchY = z.image.touchesStart.y;\n\t                }\n\t        \n\t                if (z.scale && z.scale !== 1) {\n\t                    // Zoom Out\n\t                    z.scale = z.currentScale = 1;\n\t                    z.gesture.imageWrap.transition(300).transform('translate3d(0,0,0)');\n\t                    z.gesture.image.transition(300).transform('translate3d(0,0,0) scale(1)');\n\t                    z.gesture.slide = undefined;\n\t                }\n\t                else {\n\t                    // Zoom In\n\t                    z.scale = z.currentScale = z.gesture.imageWrap.attr('data-swiper-zoom') || s.params.zoomMax;\n\t                    if (e) {\n\t                        slideWidth = z.gesture.slide[0].offsetWidth;\n\t                        slideHeight = z.gesture.slide[0].offsetHeight;\n\t                        offsetX = z.gesture.slide.offset().left;\n\t                        offsetY = z.gesture.slide.offset().top;\n\t                        diffX = offsetX + slideWidth/2 - touchX;\n\t                        diffY = offsetY + slideHeight/2 - touchY;\n\t        \n\t                        imageWidth = z.gesture.image[0].offsetWidth;\n\t                        imageHeight = z.gesture.image[0].offsetHeight;\n\t                        scaledWidth = imageWidth * z.scale;\n\t                        scaledHeight = imageHeight * z.scale;\n\t        \n\t                        translateMinX = Math.min((slideWidth / 2 - scaledWidth / 2), 0);\n\t                        translateMinY = Math.min((slideHeight / 2 - scaledHeight / 2), 0);\n\t                        translateMaxX = -translateMinX;\n\t                        translateMaxY = -translateMinY;\n\t        \n\t                        translateX = diffX * z.scale;\n\t                        translateY = diffY * z.scale;\n\t        \n\t                        if (translateX < translateMinX) {\n\t                            translateX =  translateMinX;\n\t                        }\n\t                        if (translateX > translateMaxX) {\n\t                            translateX = translateMaxX;\n\t                        }\n\t        \n\t                        if (translateY < translateMinY) {\n\t                            translateY =  translateMinY;\n\t                        }\n\t                        if (translateY > translateMaxY) {\n\t                            translateY = translateMaxY;\n\t                        }\n\t                    }\n\t                    else {\n\t                        translateX = 0;\n\t                        translateY = 0;\n\t                    }\n\t                    z.gesture.imageWrap.transition(300).transform('translate3d(' + translateX + 'px, ' + translateY + 'px,0)');\n\t                    z.gesture.image.transition(300).transform('translate3d(0,0,0) scale(' + z.scale + ')');\n\t                }\n\t            },\n\t            // Attach/Detach Events\n\t            attachEvents: function (detach) {\n\t                var action = detach ? 'off' : 'on';\n\t        \n\t                if (s.params.zoom) {\n\t                    var target = s.slides;\n\t                    var passiveListener = s.touchEvents.start === 'touchstart' && s.support.passiveListener && s.params.passiveListeners ? {passive: true, capture: false} : false;\n\t                    // Scale image\n\t                    if (s.support.gestures) {\n\t                        s.slides[action]('gesturestart', s.zoom.onGestureStart, passiveListener);\n\t                        s.slides[action]('gesturechange', s.zoom.onGestureChange, passiveListener);\n\t                        s.slides[action]('gestureend', s.zoom.onGestureEnd, passiveListener);\n\t                    }\n\t                    else if (s.touchEvents.start === 'touchstart') {\n\t                        s.slides[action](s.touchEvents.start, s.zoom.onGestureStart, passiveListener);\n\t                        s.slides[action](s.touchEvents.move, s.zoom.onGestureChange, passiveListener);\n\t                        s.slides[action](s.touchEvents.end, s.zoom.onGestureEnd, passiveListener);\n\t                    }\n\t        \n\t                    // Move image\n\t                    s[action]('touchStart', s.zoom.onTouchStart);\n\t                    s.slides.each(function (index, slide){\n\t                        if ($(slide).find('.' + s.params.zoomContainerClass).length > 0) {\n\t                            $(slide)[action](s.touchEvents.move, s.zoom.onTouchMove);\n\t                        }\n\t                    });\n\t                    s[action]('touchEnd', s.zoom.onTouchEnd);\n\t        \n\t                    // Scale Out\n\t                    s[action]('transitionEnd', s.zoom.onTransitionEnd);\n\t                    if (s.params.zoomToggle) {\n\t                        s.on('doubleTap', s.zoom.toggleZoom);\n\t                    }\n\t                }\n\t            },\n\t            init: function () {\n\t                s.zoom.attachEvents();\n\t            },\n\t            destroy: function () {\n\t                s.zoom.attachEvents(true);\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          Plugins API. Collect all and init all plugins\n\t          ===========================*/\n\t        s._plugins = [];\n\t        for (var plugin in s.plugins) {\n\t            var p = s.plugins[plugin](s, s.params[plugin]);\n\t            if (p) s._plugins.push(p);\n\t        }\n\t        // Method to call all plugins event/method\n\t        s.callPlugins = function (eventName) {\n\t            for (var i = 0; i < s._plugins.length; i++) {\n\t                if (eventName in s._plugins[i]) {\n\t                    s._plugins[i][eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n\t                }\n\t            }\n\t        };\n\t\n\t        /*=========================\n\t          Events/Callbacks/Plugins Emitter\n\t          ===========================*/\n\t        function normalizeEventName (eventName) {\n\t            if (eventName.indexOf('on') !== 0) {\n\t                if (eventName[0] !== eventName[0].toUpperCase()) {\n\t                    eventName = 'on' + eventName[0].toUpperCase() + eventName.substring(1);\n\t                }\n\t                else {\n\t                    eventName = 'on' + eventName;\n\t                }\n\t            }\n\t            return eventName;\n\t        }\n\t        s.emitterEventListeners = {\n\t        \n\t        };\n\t        s.emit = function (eventName) {\n\t            // Trigger callbacks\n\t            if (s.params[eventName]) {\n\t                s.params[eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n\t            }\n\t            var i;\n\t            // Trigger events\n\t            if (s.emitterEventListeners[eventName]) {\n\t                for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {\n\t                    s.emitterEventListeners[eventName][i](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n\t                }\n\t            }\n\t            // Trigger plugins\n\t            if (s.callPlugins) s.callPlugins(eventName, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n\t        };\n\t        s.on = function (eventName, handler) {\n\t            eventName = normalizeEventName(eventName);\n\t            if (!s.emitterEventListeners[eventName]) s.emitterEventListeners[eventName] = [];\n\t            s.emitterEventListeners[eventName].push(handler);\n\t            return s;\n\t        };\n\t        s.off = function (eventName, handler) {\n\t            var i;\n\t            eventName = normalizeEventName(eventName);\n\t            if (typeof handler === 'undefined') {\n\t                // Remove all handlers for such event\n\t                s.emitterEventListeners[eventName] = [];\n\t                return s;\n\t            }\n\t            if (!s.emitterEventListeners[eventName] || s.emitterEventListeners[eventName].length === 0) return;\n\t            for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {\n\t                if(s.emitterEventListeners[eventName][i] === handler) s.emitterEventListeners[eventName].splice(i, 1);\n\t            }\n\t            return s;\n\t        };\n\t        s.once = function (eventName, handler) {\n\t            eventName = normalizeEventName(eventName);\n\t            var _handler = function () {\n\t                handler(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);\n\t                s.off(eventName, _handler);\n\t            };\n\t            s.on(eventName, _handler);\n\t            return s;\n\t        };\n\t\n\t        // Accessibility tools\n\t        s.a11y = {\n\t            makeFocusable: function ($el) {\n\t                $el.attr('tabIndex', '0');\n\t                return $el;\n\t            },\n\t            addRole: function ($el, role) {\n\t                $el.attr('role', role);\n\t                return $el;\n\t            },\n\t        \n\t            addLabel: function ($el, label) {\n\t                $el.attr('aria-label', label);\n\t                return $el;\n\t            },\n\t        \n\t            disable: function ($el) {\n\t                $el.attr('aria-disabled', true);\n\t                return $el;\n\t            },\n\t        \n\t            enable: function ($el) {\n\t                $el.attr('aria-disabled', false);\n\t                return $el;\n\t            },\n\t        \n\t            onEnterKey: function (event) {\n\t                if (event.keyCode !== 13) return;\n\t                if ($(event.target).is(s.params.nextButton)) {\n\t                    s.onClickNext(event);\n\t                    if (s.isEnd) {\n\t                        s.a11y.notify(s.params.lastSlideMessage);\n\t                    }\n\t                    else {\n\t                        s.a11y.notify(s.params.nextSlideMessage);\n\t                    }\n\t                }\n\t                else if ($(event.target).is(s.params.prevButton)) {\n\t                    s.onClickPrev(event);\n\t                    if (s.isBeginning) {\n\t                        s.a11y.notify(s.params.firstSlideMessage);\n\t                    }\n\t                    else {\n\t                        s.a11y.notify(s.params.prevSlideMessage);\n\t                    }\n\t                }\n\t                if ($(event.target).is('.' + s.params.bulletClass)) {\n\t                    $(event.target)[0].click();\n\t                }\n\t            },\n\t        \n\t            liveRegion: $('<span class=\"' + s.params.notificationClass + '\" aria-live=\"assertive\" aria-atomic=\"true\"></span>'),\n\t        \n\t            notify: function (message) {\n\t                var notification = s.a11y.liveRegion;\n\t                if (notification.length === 0) return;\n\t                notification.html('');\n\t                notification.html(message);\n\t            },\n\t            init: function () {\n\t                // Setup accessibility\n\t                if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {\n\t                    s.a11y.makeFocusable(s.nextButton);\n\t                    s.a11y.addRole(s.nextButton, 'button');\n\t                    s.a11y.addLabel(s.nextButton, s.params.nextSlideMessage);\n\t                }\n\t                if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {\n\t                    s.a11y.makeFocusable(s.prevButton);\n\t                    s.a11y.addRole(s.prevButton, 'button');\n\t                    s.a11y.addLabel(s.prevButton, s.params.prevSlideMessage);\n\t                }\n\t        \n\t                $(s.container).append(s.a11y.liveRegion);\n\t            },\n\t            initPagination: function () {\n\t                if (s.params.pagination && s.params.paginationClickable && s.bullets && s.bullets.length) {\n\t                    s.bullets.each(function () {\n\t                        var bullet = $(this);\n\t                        s.a11y.makeFocusable(bullet);\n\t                        s.a11y.addRole(bullet, 'button');\n\t                        s.a11y.addLabel(bullet, s.params.paginationBulletMessage.replace(/{{index}}/, bullet.index() + 1));\n\t                    });\n\t                }\n\t            },\n\t            destroy: function () {\n\t                if (s.a11y.liveRegion && s.a11y.liveRegion.length > 0) s.a11y.liveRegion.remove();\n\t            }\n\t        };\n\t        \n\t\n\t        /*=========================\n\t          Init/Destroy\n\t          ===========================*/\n\t        s.init = function () {\n\t            if (s.params.loop) s.createLoop();\n\t            s.updateContainerSize();\n\t            s.updateSlidesSize();\n\t            s.updatePagination();\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                s.scrollbar.set();\n\t                if (s.params.scrollbarDraggable) {\n\t                    s.scrollbar.enableDraggable();\n\t                }\n\t            }\n\t            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n\t                if (!s.params.loop) s.updateProgress();\n\t                s.effects[s.params.effect].setTranslate();\n\t            }\n\t            if (s.params.loop) {\n\t                s.slideTo(s.params.initialSlide + s.loopedSlides, 0, s.params.runCallbacksOnInit);\n\t            }\n\t            else {\n\t                s.slideTo(s.params.initialSlide, 0, s.params.runCallbacksOnInit);\n\t                if (s.params.initialSlide === 0) {\n\t                    if (s.parallax && s.params.parallax) s.parallax.setTranslate();\n\t                    if (s.lazy && s.params.lazyLoading) {\n\t                        s.lazy.load();\n\t                        s.lazy.initialImageLoaded = true;\n\t                    }\n\t                }\n\t            }\n\t            s.attachEvents();\n\t            if (s.params.observer && s.support.observer) {\n\t                s.initObservers();\n\t            }\n\t            if (s.params.preloadImages && !s.params.lazyLoading) {\n\t                s.preloadImages();\n\t            }\n\t            if (s.params.zoom && s.zoom) {\n\t                s.zoom.init();\n\t            }\n\t            if (s.params.autoplay) {\n\t                s.startAutoplay();\n\t            }\n\t            if (s.params.keyboardControl) {\n\t                if (s.enableKeyboardControl) s.enableKeyboardControl();\n\t            }\n\t            if (s.params.mousewheelControl) {\n\t                if (s.enableMousewheelControl) s.enableMousewheelControl();\n\t            }\n\t            // Deprecated hashnavReplaceState changed to replaceState for use in hashnav and history\n\t            if (s.params.hashnavReplaceState) {\n\t                s.params.replaceState = s.params.hashnavReplaceState;\n\t            }\n\t            if (s.params.history) {\n\t                if (s.history) s.history.init();\n\t            }\n\t            if (s.params.hashnav) {\n\t                if (s.hashnav) s.hashnav.init();\n\t            }\n\t            if (s.params.a11y && s.a11y) s.a11y.init();\n\t            s.emit('onInit', s);\n\t        };\n\t        \n\t        // Cleanup dynamic styles\n\t        s.cleanupStyles = function () {\n\t            // Container\n\t            s.container.removeClass(s.classNames.join(' ')).removeAttr('style');\n\t        \n\t            // Wrapper\n\t            s.wrapper.removeAttr('style');\n\t        \n\t            // Slides\n\t            if (s.slides && s.slides.length) {\n\t                s.slides\n\t                    .removeClass([\n\t                      s.params.slideVisibleClass,\n\t                      s.params.slideActiveClass,\n\t                      s.params.slideNextClass,\n\t                      s.params.slidePrevClass\n\t                    ].join(' '))\n\t                    .removeAttr('style')\n\t                    .removeAttr('data-swiper-column')\n\t                    .removeAttr('data-swiper-row');\n\t            }\n\t        \n\t            // Pagination/Bullets\n\t            if (s.paginationContainer && s.paginationContainer.length) {\n\t                s.paginationContainer.removeClass(s.params.paginationHiddenClass);\n\t            }\n\t            if (s.bullets && s.bullets.length) {\n\t                s.bullets.removeClass(s.params.bulletActiveClass);\n\t            }\n\t        \n\t            // Buttons\n\t            if (s.params.prevButton) $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);\n\t            if (s.params.nextButton) $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);\n\t        \n\t            // Scrollbar\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                if (s.scrollbar.track && s.scrollbar.track.length) s.scrollbar.track.removeAttr('style');\n\t                if (s.scrollbar.drag && s.scrollbar.drag.length) s.scrollbar.drag.removeAttr('style');\n\t            }\n\t        };\n\t        \n\t        // Destroy\n\t        s.destroy = function (deleteInstance, cleanupStyles) {\n\t            // Detach evebts\n\t            s.detachEvents();\n\t            // Stop autoplay\n\t            s.stopAutoplay();\n\t            // Disable draggable\n\t            if (s.params.scrollbar && s.scrollbar) {\n\t                if (s.params.scrollbarDraggable) {\n\t                    s.scrollbar.disableDraggable();\n\t                }\n\t            }\n\t            // Destroy loop\n\t            if (s.params.loop) {\n\t                s.destroyLoop();\n\t            }\n\t            // Cleanup styles\n\t            if (cleanupStyles) {\n\t                s.cleanupStyles();\n\t            }\n\t            // Disconnect observer\n\t            s.disconnectObservers();\n\t        \n\t            // Destroy zoom\n\t            if (s.params.zoom && s.zoom) {\n\t                s.zoom.destroy();\n\t            }\n\t            // Disable keyboard/mousewheel\n\t            if (s.params.keyboardControl) {\n\t                if (s.disableKeyboardControl) s.disableKeyboardControl();\n\t            }\n\t            if (s.params.mousewheelControl) {\n\t                if (s.disableMousewheelControl) s.disableMousewheelControl();\n\t            }\n\t            // Disable a11y\n\t            if (s.params.a11y && s.a11y) s.a11y.destroy();\n\t            // Delete history popstate\n\t            if (s.params.history && !s.params.replaceState) {\n\t                window.removeEventListener('popstate', s.history.setHistoryPopState);\n\t            }\n\t            if (s.params.hashnav && s.hashnav)  {\n\t                s.hashnav.destroy();\n\t            }\n\t            // Destroy callback\n\t            s.emit('onDestroy');\n\t            // Delete instance\n\t            if (deleteInstance !== false) s = null;\n\t        };\n\t        \n\t        s.init();\n\t        \n\t\n\t    \n\t        // Return swiper instance\n\t        return s;\n\t    };\n\t    \n\t\n\t    /*==================================================\n\t        Prototype\n\t    ====================================================*/\n\t    Swiper.prototype = {\n\t        isSafari: (function () {\n\t            var ua = navigator.userAgent.toLowerCase();\n\t            return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n\t        })(),\n\t        isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent),\n\t        isArray: function (arr) {\n\t            return Object.prototype.toString.apply(arr) === '[object Array]';\n\t        },\n\t        /*==================================================\n\t        Browser\n\t        ====================================================*/\n\t        browser: {\n\t            ie: window.navigator.pointerEnabled || window.navigator.msPointerEnabled,\n\t            ieTouch: (window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1) || (window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1),\n\t            lteIE9: (function() {\n\t                // create temporary DIV\n\t                var div = document.createElement('div');\n\t                // add content to tmp DIV which is wrapped into the IE HTML conditional statement\n\t                div.innerHTML = '<!--[if lte IE 9]><i></i><![endif]-->';\n\t                // return true / false value based on what will browser render\n\t                return div.getElementsByTagName('i').length === 1;\n\t            })()\n\t        },\n\t        /*==================================================\n\t        Devices\n\t        ====================================================*/\n\t        device: (function () {\n\t            var ua = navigator.userAgent;\n\t            var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n\t            var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n\t            var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n\t            var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n\t            return {\n\t                ios: ipad || iphone || ipod,\n\t                android: android\n\t            };\n\t        })(),\n\t        /*==================================================\n\t        Feature Detection\n\t        ====================================================*/\n\t        support: {\n\t            touch : (window.Modernizr && Modernizr.touch === true) || (function () {\n\t                return !!(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch);\n\t            })(),\n\t    \n\t            transforms3d : (window.Modernizr && Modernizr.csstransforms3d === true) || (function () {\n\t                var div = document.createElement('div').style;\n\t                return ('webkitPerspective' in div || 'MozPerspective' in div || 'OPerspective' in div || 'MsPerspective' in div || 'perspective' in div);\n\t            })(),\n\t    \n\t            flexbox: (function () {\n\t                var div = document.createElement('div').style;\n\t                var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n\t                for (var i = 0; i < styles.length; i++) {\n\t                    if (styles[i] in div) return true;\n\t                }\n\t            })(),\n\t    \n\t            observer: (function () {\n\t                return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n\t            })(),\n\t    \n\t            passiveListener: (function () {\n\t                var supportsPassive = false;\n\t                try {\n\t                    var opts = Object.defineProperty({}, 'passive', {\n\t                        get: function() {\n\t                            supportsPassive = true;\n\t                        }\n\t                    });\n\t                    window.addEventListener('testPassiveListener', null, opts);\n\t                } catch (e) {}\n\t                return supportsPassive;\n\t            })(),\n\t    \n\t            gestures: (function () {\n\t                return 'ongesturestart' in window;\n\t            })()\n\t        },\n\t        /*==================================================\n\t        Plugins\n\t        ====================================================*/\n\t        plugins: {}\n\t    };\n\t    \n\t\n\t    /*===========================\n\t    Dom7 Library\n\t    ===========================*/\n\t    var Dom7 = (function () {\n\t        var Dom7 = function (arr) {\n\t            var _this = this, i = 0;\n\t            // Create array-like object\n\t            for (i = 0; i < arr.length; i++) {\n\t                _this[i] = arr[i];\n\t            }\n\t            _this.length = arr.length;\n\t            // Return collection with methods\n\t            return this;\n\t        };\n\t        var $ = function (selector, context) {\n\t            var arr = [], i = 0;\n\t            if (selector && !context) {\n\t                if (selector instanceof Dom7) {\n\t                    return selector;\n\t                }\n\t            }\n\t            if (selector) {\n\t                // String\n\t                if (typeof selector === 'string') {\n\t                    var els, tempParent, html = selector.trim();\n\t                    if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n\t                        var toCreate = 'div';\n\t                        if (html.indexOf('<li') === 0) toCreate = 'ul';\n\t                        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n\t                        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n\t                        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n\t                        if (html.indexOf('<option') === 0) toCreate = 'select';\n\t                        tempParent = document.createElement(toCreate);\n\t                        tempParent.innerHTML = selector;\n\t                        for (i = 0; i < tempParent.childNodes.length; i++) {\n\t                            arr.push(tempParent.childNodes[i]);\n\t                        }\n\t                    }\n\t                    else {\n\t                        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n\t                            // Pure ID selector\n\t                            els = [document.getElementById(selector.split('#')[1])];\n\t                        }\n\t                        else {\n\t                            // Other selectors\n\t                            els = (context || document).querySelectorAll(selector);\n\t                        }\n\t                        for (i = 0; i < els.length; i++) {\n\t                            if (els[i]) arr.push(els[i]);\n\t                        }\n\t                    }\n\t                }\n\t                // Node/element\n\t                else if (selector.nodeType || selector === window || selector === document) {\n\t                    arr.push(selector);\n\t                }\n\t                //Array of elements or instance of Dom\n\t                else if (selector.length > 0 && selector[0].nodeType) {\n\t                    for (i = 0; i < selector.length; i++) {\n\t                        arr.push(selector[i]);\n\t                    }\n\t                }\n\t            }\n\t            return new Dom7(arr);\n\t        };\n\t        Dom7.prototype = {\n\t            // Classes and attriutes\n\t            addClass: function (className) {\n\t                if (typeof className === 'undefined') {\n\t                    return this;\n\t                }\n\t                var classes = className.split(' ');\n\t                for (var i = 0; i < classes.length; i++) {\n\t                    for (var j = 0; j < this.length; j++) {\n\t                        this[j].classList.add(classes[i]);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            removeClass: function (className) {\n\t                var classes = className.split(' ');\n\t                for (var i = 0; i < classes.length; i++) {\n\t                    for (var j = 0; j < this.length; j++) {\n\t                        this[j].classList.remove(classes[i]);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            hasClass: function (className) {\n\t                if (!this[0]) return false;\n\t                else return this[0].classList.contains(className);\n\t            },\n\t            toggleClass: function (className) {\n\t                var classes = className.split(' ');\n\t                for (var i = 0; i < classes.length; i++) {\n\t                    for (var j = 0; j < this.length; j++) {\n\t                        this[j].classList.toggle(classes[i]);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            attr: function (attrs, value) {\n\t                if (arguments.length === 1 && typeof attrs === 'string') {\n\t                    // Get attr\n\t                    if (this[0]) return this[0].getAttribute(attrs);\n\t                    else return undefined;\n\t                }\n\t                else {\n\t                    // Set attrs\n\t                    for (var i = 0; i < this.length; i++) {\n\t                        if (arguments.length === 2) {\n\t                            // String\n\t                            this[i].setAttribute(attrs, value);\n\t                        }\n\t                        else {\n\t                            // Object\n\t                            for (var attrName in attrs) {\n\t                                this[i][attrName] = attrs[attrName];\n\t                                this[i].setAttribute(attrName, attrs[attrName]);\n\t                            }\n\t                        }\n\t                    }\n\t                    return this;\n\t                }\n\t            },\n\t            removeAttr: function (attr) {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    this[i].removeAttribute(attr);\n\t                }\n\t                return this;\n\t            },\n\t            data: function (key, value) {\n\t                if (typeof value === 'undefined') {\n\t                    // Get value\n\t                    if (this[0]) {\n\t                        var dataKey = this[0].getAttribute('data-' + key);\n\t                        if (dataKey) return dataKey;\n\t                        else if (this[0].dom7ElementDataStorage && (key in this[0].dom7ElementDataStorage)) return this[0].dom7ElementDataStorage[key];\n\t                        else return undefined;\n\t                    }\n\t                    else return undefined;\n\t                }\n\t                else {\n\t                    // Set value\n\t                    for (var i = 0; i < this.length; i++) {\n\t                        var el = this[i];\n\t                        if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n\t                        el.dom7ElementDataStorage[key] = value;\n\t                    }\n\t                    return this;\n\t                }\n\t            },\n\t            // Transforms\n\t            transform : function (transform) {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var elStyle = this[i].style;\n\t                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;\n\t                }\n\t                return this;\n\t            },\n\t            transition: function (duration) {\n\t                if (typeof duration !== 'string') {\n\t                    duration = duration + 'ms';\n\t                }\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var elStyle = this[i].style;\n\t                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;\n\t                }\n\t                return this;\n\t            },\n\t            //Events\n\t            on: function (eventName, targetSelector, listener, capture) {\n\t                function handleLiveEvent(e) {\n\t                    var target = e.target;\n\t                    if ($(target).is(targetSelector)) listener.call(target, e);\n\t                    else {\n\t                        var parents = $(target).parents();\n\t                        for (var k = 0; k < parents.length; k++) {\n\t                            if ($(parents[k]).is(targetSelector)) listener.call(parents[k], e);\n\t                        }\n\t                    }\n\t                }\n\t                var events = eventName.split(' ');\n\t                var i, j;\n\t                for (i = 0; i < this.length; i++) {\n\t                    if (typeof targetSelector === 'function' || targetSelector === false) {\n\t                        // Usual events\n\t                        if (typeof targetSelector === 'function') {\n\t                            listener = arguments[1];\n\t                            capture = arguments[2] || false;\n\t                        }\n\t                        for (j = 0; j < events.length; j++) {\n\t                            this[i].addEventListener(events[j], listener, capture);\n\t                        }\n\t                    }\n\t                    else {\n\t                        //Live events\n\t                        for (j = 0; j < events.length; j++) {\n\t                            if (!this[i].dom7LiveListeners) this[i].dom7LiveListeners = [];\n\t                            this[i].dom7LiveListeners.push({listener: listener, liveListener: handleLiveEvent});\n\t                            this[i].addEventListener(events[j], handleLiveEvent, capture);\n\t                        }\n\t                    }\n\t                }\n\t    \n\t                return this;\n\t            },\n\t            off: function (eventName, targetSelector, listener, capture) {\n\t                var events = eventName.split(' ');\n\t                for (var i = 0; i < events.length; i++) {\n\t                    for (var j = 0; j < this.length; j++) {\n\t                        if (typeof targetSelector === 'function' || targetSelector === false) {\n\t                            // Usual events\n\t                            if (typeof targetSelector === 'function') {\n\t                                listener = arguments[1];\n\t                                capture = arguments[2] || false;\n\t                            }\n\t                            this[j].removeEventListener(events[i], listener, capture);\n\t                        }\n\t                        else {\n\t                            // Live event\n\t                            if (this[j].dom7LiveListeners) {\n\t                                for (var k = 0; k < this[j].dom7LiveListeners.length; k++) {\n\t                                    if (this[j].dom7LiveListeners[k].listener === listener) {\n\t                                        this[j].removeEventListener(events[i], this[j].dom7LiveListeners[k].liveListener, capture);\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            once: function (eventName, targetSelector, listener, capture) {\n\t                var dom = this;\n\t                if (typeof targetSelector === 'function') {\n\t                    targetSelector = false;\n\t                    listener = arguments[1];\n\t                    capture = arguments[2];\n\t                }\n\t                function proxy(e) {\n\t                    listener(e);\n\t                    dom.off(eventName, targetSelector, proxy, capture);\n\t                }\n\t                dom.on(eventName, targetSelector, proxy, capture);\n\t            },\n\t            trigger: function (eventName, eventData) {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var evt;\n\t                    try {\n\t                        evt = new window.CustomEvent(eventName, {detail: eventData, bubbles: true, cancelable: true});\n\t                    }\n\t                    catch (e) {\n\t                        evt = document.createEvent('Event');\n\t                        evt.initEvent(eventName, true, true);\n\t                        evt.detail = eventData;\n\t                    }\n\t                    this[i].dispatchEvent(evt);\n\t                }\n\t                return this;\n\t            },\n\t            transitionEnd: function (callback) {\n\t                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],\n\t                    i, j, dom = this;\n\t                function fireCallBack(e) {\n\t                    /*jshint validthis:true */\n\t                    if (e.target !== this) return;\n\t                    callback.call(this, e);\n\t                    for (i = 0; i < events.length; i++) {\n\t                        dom.off(events[i], fireCallBack);\n\t                    }\n\t                }\n\t                if (callback) {\n\t                    for (i = 0; i < events.length; i++) {\n\t                        dom.on(events[i], fireCallBack);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            // Sizing/Styles\n\t            width: function () {\n\t                if (this[0] === window) {\n\t                    return window.innerWidth;\n\t                }\n\t                else {\n\t                    if (this.length > 0) {\n\t                        return parseFloat(this.css('width'));\n\t                    }\n\t                    else {\n\t                        return null;\n\t                    }\n\t                }\n\t            },\n\t            outerWidth: function (includeMargins) {\n\t                if (this.length > 0) {\n\t                    if (includeMargins)\n\t                        return this[0].offsetWidth + parseFloat(this.css('margin-right')) + parseFloat(this.css('margin-left'));\n\t                    else\n\t                        return this[0].offsetWidth;\n\t                }\n\t                else return null;\n\t            },\n\t            height: function () {\n\t                if (this[0] === window) {\n\t                    return window.innerHeight;\n\t                }\n\t                else {\n\t                    if (this.length > 0) {\n\t                        return parseFloat(this.css('height'));\n\t                    }\n\t                    else {\n\t                        return null;\n\t                    }\n\t                }\n\t            },\n\t            outerHeight: function (includeMargins) {\n\t                if (this.length > 0) {\n\t                    if (includeMargins)\n\t                        return this[0].offsetHeight + parseFloat(this.css('margin-top')) + parseFloat(this.css('margin-bottom'));\n\t                    else\n\t                        return this[0].offsetHeight;\n\t                }\n\t                else return null;\n\t            },\n\t            offset: function () {\n\t                if (this.length > 0) {\n\t                    var el = this[0];\n\t                    var box = el.getBoundingClientRect();\n\t                    var body = document.body;\n\t                    var clientTop  = el.clientTop  || body.clientTop  || 0;\n\t                    var clientLeft = el.clientLeft || body.clientLeft || 0;\n\t                    var scrollTop  = window.pageYOffset || el.scrollTop;\n\t                    var scrollLeft = window.pageXOffset || el.scrollLeft;\n\t                    return {\n\t                        top: box.top  + scrollTop  - clientTop,\n\t                        left: box.left + scrollLeft - clientLeft\n\t                    };\n\t                }\n\t                else {\n\t                    return null;\n\t                }\n\t            },\n\t            css: function (props, value) {\n\t                var i;\n\t                if (arguments.length === 1) {\n\t                    if (typeof props === 'string') {\n\t                        if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n\t                    }\n\t                    else {\n\t                        for (i = 0; i < this.length; i++) {\n\t                            for (var prop in props) {\n\t                                this[i].style[prop] = props[prop];\n\t                            }\n\t                        }\n\t                        return this;\n\t                    }\n\t                }\n\t                if (arguments.length === 2 && typeof props === 'string') {\n\t                    for (i = 0; i < this.length; i++) {\n\t                        this[i].style[props] = value;\n\t                    }\n\t                    return this;\n\t                }\n\t                return this;\n\t            },\n\t    \n\t            //Dom manipulation\n\t            each: function (callback) {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    callback.call(this[i], i, this[i]);\n\t                }\n\t                return this;\n\t            },\n\t            html: function (html) {\n\t                if (typeof html === 'undefined') {\n\t                    return this[0] ? this[0].innerHTML : undefined;\n\t                }\n\t                else {\n\t                    for (var i = 0; i < this.length; i++) {\n\t                        this[i].innerHTML = html;\n\t                    }\n\t                    return this;\n\t                }\n\t            },\n\t            text: function (text) {\n\t                if (typeof text === 'undefined') {\n\t                    if (this[0]) {\n\t                        return this[0].textContent.trim();\n\t                    }\n\t                    else return null;\n\t                }\n\t                else {\n\t                    for (var i = 0; i < this.length; i++) {\n\t                        this[i].textContent = text;\n\t                    }\n\t                    return this;\n\t                }\n\t            },\n\t            is: function (selector) {\n\t                if (!this[0]) return false;\n\t                var compareWith, i;\n\t                if (typeof selector === 'string') {\n\t                    var el = this[0];\n\t                    if (el === document) return selector === document;\n\t                    if (el === window) return selector === window;\n\t    \n\t                    if (el.matches) return el.matches(selector);\n\t                    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n\t                    else if (el.mozMatchesSelector) return el.mozMatchesSelector(selector);\n\t                    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\t                    else {\n\t                        compareWith = $(selector);\n\t                        for (i = 0; i < compareWith.length; i++) {\n\t                            if (compareWith[i] === this[0]) return true;\n\t                        }\n\t                        return false;\n\t                    }\n\t                }\n\t                else if (selector === document) return this[0] === document;\n\t                else if (selector === window) return this[0] === window;\n\t                else {\n\t                    if (selector.nodeType || selector instanceof Dom7) {\n\t                        compareWith = selector.nodeType ? [selector] : selector;\n\t                        for (i = 0; i < compareWith.length; i++) {\n\t                            if (compareWith[i] === this[0]) return true;\n\t                        }\n\t                        return false;\n\t                    }\n\t                    return false;\n\t                }\n\t    \n\t            },\n\t            index: function () {\n\t                if (this[0]) {\n\t                    var child = this[0];\n\t                    var i = 0;\n\t                    while ((child = child.previousSibling) !== null) {\n\t                        if (child.nodeType === 1) i++;\n\t                    }\n\t                    return i;\n\t                }\n\t                else return undefined;\n\t            },\n\t            eq: function (index) {\n\t                if (typeof index === 'undefined') return this;\n\t                var length = this.length;\n\t                var returnIndex;\n\t                if (index > length - 1) {\n\t                    return new Dom7([]);\n\t                }\n\t                if (index < 0) {\n\t                    returnIndex = length + index;\n\t                    if (returnIndex < 0) return new Dom7([]);\n\t                    else return new Dom7([this[returnIndex]]);\n\t                }\n\t                return new Dom7([this[index]]);\n\t            },\n\t            append: function (newChild) {\n\t                var i, j;\n\t                for (i = 0; i < this.length; i++) {\n\t                    if (typeof newChild === 'string') {\n\t                        var tempDiv = document.createElement('div');\n\t                        tempDiv.innerHTML = newChild;\n\t                        while (tempDiv.firstChild) {\n\t                            this[i].appendChild(tempDiv.firstChild);\n\t                        }\n\t                    }\n\t                    else if (newChild instanceof Dom7) {\n\t                        for (j = 0; j < newChild.length; j++) {\n\t                            this[i].appendChild(newChild[j]);\n\t                        }\n\t                    }\n\t                    else {\n\t                        this[i].appendChild(newChild);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            prepend: function (newChild) {\n\t                var i, j;\n\t                for (i = 0; i < this.length; i++) {\n\t                    if (typeof newChild === 'string') {\n\t                        var tempDiv = document.createElement('div');\n\t                        tempDiv.innerHTML = newChild;\n\t                        for (j = tempDiv.childNodes.length - 1; j >= 0; j--) {\n\t                            this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n\t                        }\n\t                        // this[i].insertAdjacentHTML('afterbegin', newChild);\n\t                    }\n\t                    else if (newChild instanceof Dom7) {\n\t                        for (j = 0; j < newChild.length; j++) {\n\t                            this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n\t                        }\n\t                    }\n\t                    else {\n\t                        this[i].insertBefore(newChild, this[i].childNodes[0]);\n\t                    }\n\t                }\n\t                return this;\n\t            },\n\t            insertBefore: function (selector) {\n\t                var before = $(selector);\n\t                for (var i = 0; i < this.length; i++) {\n\t                    if (before.length === 1) {\n\t                        before[0].parentNode.insertBefore(this[i], before[0]);\n\t                    }\n\t                    else if (before.length > 1) {\n\t                        for (var j = 0; j < before.length; j++) {\n\t                            before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n\t                        }\n\t                    }\n\t                }\n\t            },\n\t            insertAfter: function (selector) {\n\t                var after = $(selector);\n\t                for (var i = 0; i < this.length; i++) {\n\t                    if (after.length === 1) {\n\t                        after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n\t                    }\n\t                    else if (after.length > 1) {\n\t                        for (var j = 0; j < after.length; j++) {\n\t                            after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n\t                        }\n\t                    }\n\t                }\n\t            },\n\t            next: function (selector) {\n\t                if (this.length > 0) {\n\t                    if (selector) {\n\t                        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) return new Dom7([this[0].nextElementSibling]);\n\t                        else return new Dom7([]);\n\t                    }\n\t                    else {\n\t                        if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n\t                        else return new Dom7([]);\n\t                    }\n\t                }\n\t                else return new Dom7([]);\n\t            },\n\t            nextAll: function (selector) {\n\t                var nextEls = [];\n\t                var el = this[0];\n\t                if (!el) return new Dom7([]);\n\t                while (el.nextElementSibling) {\n\t                    var next = el.nextElementSibling;\n\t                    if (selector) {\n\t                        if($(next).is(selector)) nextEls.push(next);\n\t                    }\n\t                    else nextEls.push(next);\n\t                    el = next;\n\t                }\n\t                return new Dom7(nextEls);\n\t            },\n\t            prev: function (selector) {\n\t                if (this.length > 0) {\n\t                    if (selector) {\n\t                        if (this[0].previousElementSibling && $(this[0].previousElementSibling).is(selector)) return new Dom7([this[0].previousElementSibling]);\n\t                        else return new Dom7([]);\n\t                    }\n\t                    else {\n\t                        if (this[0].previousElementSibling) return new Dom7([this[0].previousElementSibling]);\n\t                        else return new Dom7([]);\n\t                    }\n\t                }\n\t                else return new Dom7([]);\n\t            },\n\t            prevAll: function (selector) {\n\t                var prevEls = [];\n\t                var el = this[0];\n\t                if (!el) return new Dom7([]);\n\t                while (el.previousElementSibling) {\n\t                    var prev = el.previousElementSibling;\n\t                    if (selector) {\n\t                        if($(prev).is(selector)) prevEls.push(prev);\n\t                    }\n\t                    else prevEls.push(prev);\n\t                    el = prev;\n\t                }\n\t                return new Dom7(prevEls);\n\t            },\n\t            parent: function (selector) {\n\t                var parents = [];\n\t                for (var i = 0; i < this.length; i++) {\n\t                    if (selector) {\n\t                        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n\t                    }\n\t                    else {\n\t                        parents.push(this[i].parentNode);\n\t                    }\n\t                }\n\t                return $($.unique(parents));\n\t            },\n\t            parents: function (selector) {\n\t                var parents = [];\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var parent = this[i].parentNode;\n\t                    while (parent) {\n\t                        if (selector) {\n\t                            if ($(parent).is(selector)) parents.push(parent);\n\t                        }\n\t                        else {\n\t                            parents.push(parent);\n\t                        }\n\t                        parent = parent.parentNode;\n\t                    }\n\t                }\n\t                return $($.unique(parents));\n\t            },\n\t            find : function (selector) {\n\t                var foundElements = [];\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var found = this[i].querySelectorAll(selector);\n\t                    for (var j = 0; j < found.length; j++) {\n\t                        foundElements.push(found[j]);\n\t                    }\n\t                }\n\t                return new Dom7(foundElements);\n\t            },\n\t            children: function (selector) {\n\t                var children = [];\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var childNodes = this[i].childNodes;\n\t    \n\t                    for (var j = 0; j < childNodes.length; j++) {\n\t                        if (!selector) {\n\t                            if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n\t                        }\n\t                        else {\n\t                            if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) children.push(childNodes[j]);\n\t                        }\n\t                    }\n\t                }\n\t                return new Dom7($.unique(children));\n\t            },\n\t            remove: function () {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n\t                }\n\t                return this;\n\t            },\n\t            add: function () {\n\t                var dom = this;\n\t                var i, j;\n\t                for (i = 0; i < arguments.length; i++) {\n\t                    var toAdd = $(arguments[i]);\n\t                    for (j = 0; j < toAdd.length; j++) {\n\t                        dom[dom.length] = toAdd[j];\n\t                        dom.length++;\n\t                    }\n\t                }\n\t                return dom;\n\t            }\n\t        };\n\t        $.fn = Dom7.prototype;\n\t        $.unique = function (arr) {\n\t            var unique = [];\n\t            for (var i = 0; i < arr.length; i++) {\n\t                if (unique.indexOf(arr[i]) === -1) unique.push(arr[i]);\n\t            }\n\t            return unique;\n\t        };\n\t    \n\t        return $;\n\t    })();\n\t    \n\t\n\t    /*===========================\n\t     Get Dom libraries\n\t     ===========================*/\n\t    var swiperDomPlugins = ['jQuery', 'Zepto', 'Dom7'];\n\t    for (var i = 0; i < swiperDomPlugins.length; i++) {\n\t    \tif (window[swiperDomPlugins[i]]) {\n\t    \t\taddLibraryPlugin(window[swiperDomPlugins[i]]);\n\t    \t}\n\t    }\n\t    // Required DOM Plugins\n\t    var domLib;\n\t    if (typeof Dom7 === 'undefined') {\n\t    \tdomLib = window.Dom7 || window.Zepto || window.jQuery;\n\t    }\n\t    else {\n\t    \tdomLib = Dom7;\n\t    }\n\t\n\t    /*===========================\n\t    Add .swiper plugin from Dom libraries\n\t    ===========================*/\n\t    function addLibraryPlugin(lib) {\n\t        lib.fn.swiper = function (params) {\n\t            var firstInstance;\n\t            lib(this).each(function () {\n\t                var s = new Swiper(this, params);\n\t                if (!firstInstance) firstInstance = s;\n\t            });\n\t            return firstInstance;\n\t        };\n\t    }\n\t    \n\t    if (domLib) {\n\t        if (!('transitionEnd' in domLib.fn)) {\n\t            domLib.fn.transitionEnd = function (callback) {\n\t                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],\n\t                    i, j, dom = this;\n\t                function fireCallBack(e) {\n\t                    /*jshint validthis:true */\n\t                    if (e.target !== this) return;\n\t                    callback.call(this, e);\n\t                    for (i = 0; i < events.length; i++) {\n\t                        dom.off(events[i], fireCallBack);\n\t                    }\n\t                }\n\t                if (callback) {\n\t                    for (i = 0; i < events.length; i++) {\n\t                        dom.on(events[i], fireCallBack);\n\t                    }\n\t                }\n\t                return this;\n\t            };\n\t        }\n\t        if (!('transform' in domLib.fn)) {\n\t            domLib.fn.transform = function (transform) {\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var elStyle = this[i].style;\n\t                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;\n\t                }\n\t                return this;\n\t            };\n\t        }\n\t        if (!('transition' in domLib.fn)) {\n\t            domLib.fn.transition = function (duration) {\n\t                if (typeof duration !== 'string') {\n\t                    duration = duration + 'ms';\n\t                }\n\t                for (var i = 0; i < this.length; i++) {\n\t                    var elStyle = this[i].style;\n\t                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;\n\t                }\n\t                return this;\n\t            };\n\t        }\n\t        if (!('outerWidth' in domLib.fn)) {\n\t            domLib.fn.outerWidth = function (includeMargins) {\n\t                if (this.length > 0) {\n\t                    if (includeMargins)\n\t                        return this[0].offsetWidth + parseFloat(this.css('margin-right')) + parseFloat(this.css('margin-left'));\n\t                    else\n\t                        return this[0].offsetWidth;\n\t                }\n\t                else return null;\n\t            };\n\t        }\n\t    }\n\t\n\t    window.Swiper = Swiper;\n\t})();\n\t/*===========================\n\tSwiper AMD Export\n\t===========================*/\n\tif (true)\n\t{\n\t    module.exports = window.Swiper;\n\t}\n\telse if (typeof define === 'function' && define.amd) {\n\t    define([], function () {\n\t        'use strict';\n\t        return window.Swiper;\n\t    });\n\t}\n\t//# sourceMappingURL=maps/swiper.js.map\n\n\n/***/ },\n\n/***/ 5:\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** copesco/static/js/vendor.09f23eb921bb994b4a04.js\n **/","/**\n * Swiper 3.4.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * \n * http://www.idangero.us/swiper/\n * \n * Copyright 2016, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n * \n * Licensed under MIT\n * \n * Released on: October 16, 2016\n */\n(function () {\n    'use strict';\n    var $;\n    /*===========================\n    Swiper\n    ===========================*/\n    var Swiper = function (container, params) {\n        if (!(this instanceof Swiper)) return new Swiper(container, params);\n\n        var defaults = {\n            direction: 'horizontal',\n            touchEventsTarget: 'container',\n            initialSlide: 0,\n            speed: 300,\n            // autoplay\n            autoplay: false,\n            autoplayDisableOnInteraction: true,\n            autoplayStopOnLast: false,\n            // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n            iOSEdgeSwipeDetection: false,\n            iOSEdgeSwipeThreshold: 20,\n            // Free mode\n            freeMode: false,\n            freeModeMomentum: true,\n            freeModeMomentumRatio: 1,\n            freeModeMomentumBounce: true,\n            freeModeMomentumBounceRatio: 1,\n            freeModeMomentumVelocityRatio: 1,\n            freeModeSticky: false,\n            freeModeMinimumVelocity: 0.02,\n            // Autoheight\n            autoHeight: false,\n            // Set wrapper width\n            setWrapperSize: false,\n            // Virtual Translate\n            virtualTranslate: false,\n            // Effects\n            effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n            coverflow: {\n                rotate: 50,\n                stretch: 0,\n                depth: 100,\n                modifier: 1,\n                slideShadows : true\n            },\n            flip: {\n                slideShadows : true,\n                limitRotation: true\n            },\n            cube: {\n                slideShadows: true,\n                shadow: true,\n                shadowOffset: 20,\n                shadowScale: 0.94\n            },\n            fade: {\n                crossFade: false\n            },\n            // Parallax\n            parallax: false,\n            // Zoom\n            zoom: false,\n            zoomMax: 3,\n            zoomMin: 1,\n            zoomToggle: true,\n            // Scrollbar\n            scrollbar: null,\n            scrollbarHide: true,\n            scrollbarDraggable: false,\n            scrollbarSnapOnRelease: false,\n            // Keyboard Mousewheel\n            keyboardControl: false,\n            mousewheelControl: false,\n            mousewheelReleaseOnEdges: false,\n            mousewheelInvert: false,\n            mousewheelForceToAxis: false,\n            mousewheelSensitivity: 1,\n            mousewheelEventsTarged: 'container',\n            // Hash Navigation\n            hashnav: false,\n            hashnavWatchState: false,\n            // History\n            history: false,\n            // Commong Nav State\n            replaceState: false,\n            // Breakpoints\n            breakpoints: undefined,\n            // Slides grid\n            spaceBetween: 0,\n            slidesPerView: 1,\n            slidesPerColumn: 1,\n            slidesPerColumnFill: 'column',\n            slidesPerGroup: 1,\n            centeredSlides: false,\n            slidesOffsetBefore: 0, // in px\n            slidesOffsetAfter: 0, // in px\n            // Round length\n            roundLengths: false,\n            // Touches\n            touchRatio: 1,\n            touchAngle: 45,\n            simulateTouch: true,\n            shortSwipes: true,\n            longSwipes: true,\n            longSwipesRatio: 0.5,\n            longSwipesMs: 300,\n            followFinger: true,\n            onlyExternal: false,\n            threshold: 0,\n            touchMoveStopPropagation: true,\n            touchReleaseOnEdges: false,\n            // Unique Navigation Elements\n            uniqueNavElements: true,\n            // Pagination\n            pagination: null,\n            paginationElement: 'span',\n            paginationClickable: false,\n            paginationHide: false,\n            paginationBulletRender: null,\n            paginationProgressRender: null,\n            paginationFractionRender: null,\n            paginationCustomRender: null,\n            paginationType: 'bullets', // 'bullets' or 'progress' or 'fraction' or 'custom'\n            // Resistance\n            resistance: true,\n            resistanceRatio: 0.85,\n            // Next/prev buttons\n            nextButton: null,\n            prevButton: null,\n            // Progress\n            watchSlidesProgress: false,\n            watchSlidesVisibility: false,\n            // Cursor\n            grabCursor: false,\n            // Clicks\n            preventClicks: true,\n            preventClicksPropagation: true,\n            slideToClickedSlide: false,\n            // Lazy Loading\n            lazyLoading: false,\n            lazyLoadingInPrevNext: false,\n            lazyLoadingInPrevNextAmount: 1,\n            lazyLoadingOnTransitionStart: false,\n            // Images\n            preloadImages: true,\n            updateOnImagesReady: true,\n            // loop\n            loop: false,\n            loopAdditionalSlides: 0,\n            loopedSlides: null,\n            // Control\n            control: undefined,\n            controlInverse: false,\n            controlBy: 'slide', //or 'container'\n            normalizeSlideIndex: true,\n            // Swiping/no swiping\n            allowSwipeToPrev: true,\n            allowSwipeToNext: true,\n            swipeHandler: null, //'.swipe-handler',\n            noSwiping: true,\n            noSwipingClass: 'swiper-no-swiping',\n            // Passive Listeners\n            passiveListeners: true,\n            // NS\n            containerModifierClass: 'swiper-container-', // NEW\n            slideClass: 'swiper-slide',\n            slideActiveClass: 'swiper-slide-active',\n            slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n            slideVisibleClass: 'swiper-slide-visible',\n            slideDuplicateClass: 'swiper-slide-duplicate',\n            slideNextClass: 'swiper-slide-next',\n            slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n            slidePrevClass: 'swiper-slide-prev',\n            slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n            wrapperClass: 'swiper-wrapper',\n            bulletClass: 'swiper-pagination-bullet',\n            bulletActiveClass: 'swiper-pagination-bullet-active',\n            buttonDisabledClass: 'swiper-button-disabled',\n            paginationCurrentClass: 'swiper-pagination-current',\n            paginationTotalClass: 'swiper-pagination-total',\n            paginationHiddenClass: 'swiper-pagination-hidden',\n            paginationProgressbarClass: 'swiper-pagination-progressbar',\n            paginationClickableClass: 'swiper-pagination-clickable', // NEW\n            paginationModifierClass: 'swiper-pagination-', // NEW\n            lazyLoadingClass: 'swiper-lazy',\n            lazyStatusLoadingClass: 'swiper-lazy-loading',\n            lazyStatusLoadedClass: 'swiper-lazy-loaded',\n            lazyPreloaderClass: 'swiper-lazy-preloader',\n            notificationClass: 'swiper-notification',\n            preloaderClass: 'preloader',\n            zoomContainerClass: 'swiper-zoom-container',\n        \n            // Observer\n            observer: false,\n            observeParents: false,\n            // Accessibility\n            a11y: false,\n            prevSlideMessage: 'Previous slide',\n            nextSlideMessage: 'Next slide',\n            firstSlideMessage: 'This is the first slide',\n            lastSlideMessage: 'This is the last slide',\n            paginationBulletMessage: 'Go to slide {{index}}',\n            // Callbacks\n            runCallbacksOnInit: true\n            /*\n            Callbacks:\n            onInit: function (swiper)\n            onDestroy: function (swiper)\n            onClick: function (swiper, e)\n            onTap: function (swiper, e)\n            onDoubleTap: function (swiper, e)\n            onSliderMove: function (swiper, e)\n            onSlideChangeStart: function (swiper)\n            onSlideChangeEnd: function (swiper)\n            onTransitionStart: function (swiper)\n            onTransitionEnd: function (swiper)\n            onImagesReady: function (swiper)\n            onProgress: function (swiper, progress)\n            onTouchStart: function (swiper, e)\n            onTouchMove: function (swiper, e)\n            onTouchMoveOpposite: function (swiper, e)\n            onTouchEnd: function (swiper, e)\n            onReachBeginning: function (swiper)\n            onReachEnd: function (swiper)\n            onSetTransition: function (swiper, duration)\n            onSetTranslate: function (swiper, translate)\n            onAutoplayStart: function (swiper)\n            onAutoplayStop: function (swiper),\n            onLazyImageLoad: function (swiper, slide, image)\n            onLazyImageReady: function (swiper, slide, image)\n            */\n        \n        };\n        var initialVirtualTranslate = params && params.virtualTranslate;\n        \n        params = params || {};\n        var originalParams = {};\n        for (var param in params) {\n            if (typeof params[param] === 'object' && params[param] !== null && !(params[param].nodeType || params[param] === window || params[param] === document || (typeof Dom7 !== 'undefined' && params[param] instanceof Dom7) || (typeof jQuery !== 'undefined' && params[param] instanceof jQuery))) {\n                originalParams[param] = {};\n                for (var deepParam in params[param]) {\n                    originalParams[param][deepParam] = params[param][deepParam];\n                }\n            }\n            else {\n                originalParams[param] = params[param];\n            }\n        }\n        for (var def in defaults) {\n            if (typeof params[def] === 'undefined') {\n                params[def] = defaults[def];\n            }\n            else if (typeof params[def] === 'object') {\n                for (var deepDef in defaults[def]) {\n                    if (typeof params[def][deepDef] === 'undefined') {\n                        params[def][deepDef] = defaults[def][deepDef];\n                    }\n                }\n            }\n        }\n        \n        // Swiper\n        var s = this;\n        \n        // Params\n        s.params = params;\n        s.originalParams = originalParams;\n        \n        // Classname\n        s.classNames = [];\n        /*=========================\n          Dom Library and plugins\n          ===========================*/\n        if (typeof $ !== 'undefined' && typeof Dom7 !== 'undefined'){\n            $ = Dom7;\n        }\n        if (typeof $ === 'undefined') {\n            if (typeof Dom7 === 'undefined') {\n                $ = window.Dom7 || window.Zepto || window.jQuery;\n            }\n            else {\n                $ = Dom7;\n            }\n            if (!$) return;\n        }\n        // Export it to Swiper instance\n        s.$ = $;\n        \n        /*=========================\n          Breakpoints\n          ===========================*/\n        s.currentBreakpoint = undefined;\n        s.getActiveBreakpoint = function () {\n            //Get breakpoint for window width\n            if (!s.params.breakpoints) return false;\n            var breakpoint = false;\n            var points = [], point;\n            for ( point in s.params.breakpoints ) {\n                if (s.params.breakpoints.hasOwnProperty(point)) {\n                    points.push(point);\n                }\n            }\n            points.sort(function (a, b) {\n                return parseInt(a, 10) > parseInt(b, 10);\n            });\n            for (var i = 0; i < points.length; i++) {\n                point = points[i];\n                if (point >= window.innerWidth && !breakpoint) {\n                    breakpoint = point;\n                }\n            }\n            return breakpoint || 'max';\n        };\n        s.setBreakpoint = function () {\n            //Set breakpoint for window width and update parameters\n            var breakpoint = s.getActiveBreakpoint();\n            if (breakpoint && s.currentBreakpoint !== breakpoint) {\n                var breakPointsParams = breakpoint in s.params.breakpoints ? s.params.breakpoints[breakpoint] : s.originalParams;\n                var needsReLoop = s.params.loop && (breakPointsParams.slidesPerView !== s.params.slidesPerView);\n                for ( var param in breakPointsParams ) {\n                    s.params[param] = breakPointsParams[param];\n                }\n                s.currentBreakpoint = breakpoint;\n                if(needsReLoop && s.destroyLoop) {\n                    s.reLoop(true);\n                }\n            }\n        };\n        // Set breakpoint on load\n        if (s.params.breakpoints) {\n            s.setBreakpoint();\n        }\n        \n        /*=========================\n          Preparation - Define Container, Wrapper and Pagination\n          ===========================*/\n        s.container = $(container);\n        if (s.container.length === 0) return;\n        if (s.container.length > 1) {\n            var swipers = [];\n            s.container.each(function () {\n                var container = this;\n                swipers.push(new Swiper(this, params));\n            });\n            return swipers;\n        }\n        \n        // Save instance in container HTML Element and in data\n        s.container[0].swiper = s;\n        s.container.data('swiper', s);\n        \n        s.classNames.push(s.params.containerModifierClass + s.params.direction);\n        \n        if (s.params.freeMode) {\n            s.classNames.push(s.params.containerModifierClass + 'free-mode');\n        }\n        if (!s.support.flexbox) {\n            s.classNames.push(s.params.containerModifierClass + 'no-flexbox');\n            s.params.slidesPerColumn = 1;\n        }\n        if (s.params.autoHeight) {\n            s.classNames.push(s.params.containerModifierClass + 'autoheight');\n        }\n        // Enable slides progress when required\n        if (s.params.parallax || s.params.watchSlidesVisibility) {\n            s.params.watchSlidesProgress = true;\n        }\n        // Max resistance when touchReleaseOnEdges\n        if (s.params.touchReleaseOnEdges) {\n            s.params.resistanceRatio = 0;\n        }\n        // Coverflow / 3D\n        if (['cube', 'coverflow', 'flip'].indexOf(s.params.effect) >= 0) {\n            if (s.support.transforms3d) {\n                s.params.watchSlidesProgress = true;\n                s.classNames.push(s.params.containerModifierClass + '3d');\n            }\n            else {\n                s.params.effect = 'slide';\n            }\n        }\n        if (s.params.effect !== 'slide') {\n            s.classNames.push(s.params.containerModifierClass + s.params.effect);\n        }\n        if (s.params.effect === 'cube') {\n            s.params.resistanceRatio = 0;\n            s.params.slidesPerView = 1;\n            s.params.slidesPerColumn = 1;\n            s.params.slidesPerGroup = 1;\n            s.params.centeredSlides = false;\n            s.params.spaceBetween = 0;\n            s.params.virtualTranslate = true;\n            s.params.setWrapperSize = false;\n        }\n        if (s.params.effect === 'fade' || s.params.effect === 'flip') {\n            s.params.slidesPerView = 1;\n            s.params.slidesPerColumn = 1;\n            s.params.slidesPerGroup = 1;\n            s.params.watchSlidesProgress = true;\n            s.params.spaceBetween = 0;\n            s.params.setWrapperSize = false;\n            if (typeof initialVirtualTranslate === 'undefined') {\n                s.params.virtualTranslate = true;\n            }\n        }\n        \n        // Grab Cursor\n        if (s.params.grabCursor && s.support.touch) {\n            s.params.grabCursor = false;\n        }\n        \n        // Wrapper\n        s.wrapper = s.container.children('.' + s.params.wrapperClass);\n        \n        // Pagination\n        if (s.params.pagination) {\n            s.paginationContainer = $(s.params.pagination);\n            if (s.params.uniqueNavElements && typeof s.params.pagination === 'string' && s.paginationContainer.length > 1 && s.container.find(s.params.pagination).length === 1) {\n                s.paginationContainer = s.container.find(s.params.pagination);\n            }\n        \n            if (s.params.paginationType === 'bullets' && s.params.paginationClickable) {\n                s.paginationContainer.addClass(s.params.paginationModifierClass + 'clickable');\n            }\n            else {\n                s.params.paginationClickable = false;\n            }\n            s.paginationContainer.addClass(s.params.paginationModifierClass + s.params.paginationType);\n        }\n        // Next/Prev Buttons\n        if (s.params.nextButton || s.params.prevButton) {\n            if (s.params.nextButton) {\n                s.nextButton = $(s.params.nextButton);\n                if (s.params.uniqueNavElements && typeof s.params.nextButton === 'string' && s.nextButton.length > 1 && s.container.find(s.params.nextButton).length === 1) {\n                    s.nextButton = s.container.find(s.params.nextButton);\n                }\n            }\n            if (s.params.prevButton) {\n                s.prevButton = $(s.params.prevButton);\n                if (s.params.uniqueNavElements && typeof s.params.prevButton === 'string' && s.prevButton.length > 1 && s.container.find(s.params.prevButton).length === 1) {\n                    s.prevButton = s.container.find(s.params.prevButton);\n                }\n            }\n        }\n        \n        // Is Horizontal\n        s.isHorizontal = function () {\n            return s.params.direction === 'horizontal';\n        };\n        // s.isH = isH;\n        \n        // RTL\n        s.rtl = s.isHorizontal() && (s.container[0].dir.toLowerCase() === 'rtl' || s.container.css('direction') === 'rtl');\n        if (s.rtl) {\n            s.classNames.push(s.params.containerModifierClass + 'rtl');\n        }\n        \n        // Wrong RTL support\n        if (s.rtl) {\n            s.wrongRTL = s.wrapper.css('display') === '-webkit-box';\n        }\n        \n        // Columns\n        if (s.params.slidesPerColumn > 1) {\n            s.classNames.push(s.params.containerModifierClass + 'multirow');\n        }\n        \n        // Check for Android\n        if (s.device.android) {\n            s.classNames.push(s.params.containerModifierClass + 'android');\n        }\n        \n        // Add classes\n        s.container.addClass(s.classNames.join(' '));\n        \n        // Translate\n        s.translate = 0;\n        \n        // Progress\n        s.progress = 0;\n        \n        // Velocity\n        s.velocity = 0;\n        \n        /*=========================\n          Locks, unlocks\n          ===========================*/\n        s.lockSwipeToNext = function () {\n            s.params.allowSwipeToNext = false;\n            if (s.params.allowSwipeToPrev === false && s.params.grabCursor) {\n                s.unsetGrabCursor();\n            }\n        };\n        s.lockSwipeToPrev = function () {\n            s.params.allowSwipeToPrev = false;\n            if (s.params.allowSwipeToNext === false && s.params.grabCursor) {\n                s.unsetGrabCursor();\n            }\n        };\n        s.lockSwipes = function () {\n            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = false;\n            if (s.params.grabCursor) s.unsetGrabCursor();\n        };\n        s.unlockSwipeToNext = function () {\n            s.params.allowSwipeToNext = true;\n            if (s.params.allowSwipeToPrev === true && s.params.grabCursor) {\n                s.setGrabCursor();\n            }\n        };\n        s.unlockSwipeToPrev = function () {\n            s.params.allowSwipeToPrev = true;\n            if (s.params.allowSwipeToNext === true && s.params.grabCursor) {\n                s.setGrabCursor();\n            }\n        };\n        s.unlockSwipes = function () {\n            s.params.allowSwipeToNext = s.params.allowSwipeToPrev = true;\n            if (s.params.grabCursor) s.setGrabCursor();\n        };\n        \n        /*=========================\n          Round helper\n          ===========================*/\n        function round(a) {\n            return Math.floor(a);\n        }\n        /*=========================\n          Set grab cursor\n          ===========================*/\n        s.setGrabCursor = function(moving) {\n            s.container[0].style.cursor = 'move';\n            s.container[0].style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n            s.container[0].style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n            s.container[0].style.cursor = moving ? 'grabbing': 'grab';\n        };\n        s.unsetGrabCursor = function () {\n            s.container[0].style.cursor = '';\n        };\n        if (s.params.grabCursor) {\n            s.setGrabCursor();\n        }\n        /*=========================\n          Update on Images Ready\n          ===========================*/\n        s.imagesToLoad = [];\n        s.imagesLoaded = 0;\n        \n        s.loadImage = function (imgElement, src, srcset, sizes, checkForComplete, callback) {\n            var image;\n            function onReady () {\n                if (callback) callback();\n            }\n            if (!imgElement.complete || !checkForComplete) {\n                if (src) {\n                    image = new window.Image();\n                    image.onload = onReady;\n                    image.onerror = onReady;\n                    if (sizes) {\n                        image.sizes = sizes;\n                    }\n                    if (srcset) {\n                        image.srcset = srcset;\n                    }\n                    if (src) {\n                        image.src = src;\n                    }\n                } else {\n                    onReady();\n                }\n        \n            } else {//image already loaded...\n                onReady();\n            }\n        };\n        s.preloadImages = function () {\n            s.imagesToLoad = s.container.find('img');\n            function _onReady() {\n                if (typeof s === 'undefined' || s === null) return;\n                if (s.imagesLoaded !== undefined) s.imagesLoaded++;\n                if (s.imagesLoaded === s.imagesToLoad.length) {\n                    if (s.params.updateOnImagesReady) s.update();\n                    s.emit('onImagesReady', s);\n                }\n            }\n            for (var i = 0; i < s.imagesToLoad.length; i++) {\n                s.loadImage(s.imagesToLoad[i], (s.imagesToLoad[i].currentSrc || s.imagesToLoad[i].getAttribute('src')), (s.imagesToLoad[i].srcset || s.imagesToLoad[i].getAttribute('srcset')), s.imagesToLoad[i].sizes || s.imagesToLoad[i].getAttribute('sizes'), true, _onReady);\n            }\n        };\n        \n        /*=========================\n          Autoplay\n          ===========================*/\n        s.autoplayTimeoutId = undefined;\n        s.autoplaying = false;\n        s.autoplayPaused = false;\n        function autoplay() {\n            var autoplayDelay = s.params.autoplay;\n            var activeSlide = s.slides.eq(s.activeIndex);\n            if (activeSlide.attr('data-swiper-autoplay')) {\n                autoplayDelay = activeSlide.attr('data-swiper-autoplay') || s.params.autoplay;\n            }\n            s.autoplayTimeoutId = setTimeout(function () {\n                if (s.params.loop) {\n                    s.fixLoop();\n                    s._slideNext();\n                    s.emit('onAutoplay', s);\n                }\n                else {\n                    if (!s.isEnd) {\n                        s._slideNext();\n                        s.emit('onAutoplay', s);\n                    }\n                    else {\n                        if (!params.autoplayStopOnLast) {\n                            s._slideTo(0);\n                            s.emit('onAutoplay', s);\n                        }\n                        else {\n                            s.stopAutoplay();\n                        }\n                    }\n                }\n            }, autoplayDelay);\n        }\n        s.startAutoplay = function () {\n            if (typeof s.autoplayTimeoutId !== 'undefined') return false;\n            if (!s.params.autoplay) return false;\n            if (s.autoplaying) return false;\n            s.autoplaying = true;\n            s.emit('onAutoplayStart', s);\n            autoplay();\n        };\n        s.stopAutoplay = function (internal) {\n            if (!s.autoplayTimeoutId) return;\n            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);\n            s.autoplaying = false;\n            s.autoplayTimeoutId = undefined;\n            s.emit('onAutoplayStop', s);\n        };\n        s.pauseAutoplay = function (speed) {\n            if (s.autoplayPaused) return;\n            if (s.autoplayTimeoutId) clearTimeout(s.autoplayTimeoutId);\n            s.autoplayPaused = true;\n            if (speed === 0) {\n                s.autoplayPaused = false;\n                autoplay();\n            }\n            else {\n                s.wrapper.transitionEnd(function () {\n                    if (!s) return;\n                    s.autoplayPaused = false;\n                    if (!s.autoplaying) {\n                        s.stopAutoplay();\n                    }\n                    else {\n                        autoplay();\n                    }\n                });\n            }\n        };\n        /*=========================\n          Min/Max Translate\n          ===========================*/\n        s.minTranslate = function () {\n            return (-s.snapGrid[0]);\n        };\n        s.maxTranslate = function () {\n            return (-s.snapGrid[s.snapGrid.length - 1]);\n        };\n        /*=========================\n          Slider/slides sizes\n          ===========================*/\n        s.updateAutoHeight = function () {\n            var activeSlides = [];\n            var newHeight = 0;\n        \n            // Find slides currently in view\n            if(s.params.slidesPerView !== 'auto' && s.params.slidesPerView > 1) {\n                for (i = 0; i < Math.ceil(s.params.slidesPerView); i++) {\n                    var index = s.activeIndex + i;\n                    if(index > s.slides.length) break;\n                    activeSlides.push(s.slides.eq(index)[0]);\n                }\n            } else {\n                activeSlides.push(s.slides.eq(s.activeIndex)[0]);\n            }\n        \n            // Find new height from heighest slide in view\n            for (i = 0; i < activeSlides.length; i++) {\n                if (typeof activeSlides[i] !== 'undefined') {\n                    var height = activeSlides[i].offsetHeight;\n                    newHeight = height > newHeight ? height : newHeight;\n                }\n            }\n        \n            // Update Height\n            if (newHeight) s.wrapper.css('height', newHeight + 'px');\n        };\n        s.updateContainerSize = function () {\n            var width, height;\n            if (typeof s.params.width !== 'undefined') {\n                width = s.params.width;\n            }\n            else {\n                width = s.container[0].clientWidth;\n            }\n            if (typeof s.params.height !== 'undefined') {\n                height = s.params.height;\n            }\n            else {\n                height = s.container[0].clientHeight;\n            }\n            if (width === 0 && s.isHorizontal() || height === 0 && !s.isHorizontal()) {\n                return;\n            }\n        \n            //Subtract paddings\n            width = width - parseInt(s.container.css('padding-left'), 10) - parseInt(s.container.css('padding-right'), 10);\n            height = height - parseInt(s.container.css('padding-top'), 10) - parseInt(s.container.css('padding-bottom'), 10);\n        \n            // Store values\n            s.width = width;\n            s.height = height;\n            s.size = s.isHorizontal() ? s.width : s.height;\n        };\n        \n        s.updateSlidesSize = function () {\n            s.slides = s.wrapper.children('.' + s.params.slideClass);\n            s.snapGrid = [];\n            s.slidesGrid = [];\n            s.slidesSizesGrid = [];\n        \n            var spaceBetween = s.params.spaceBetween,\n                slidePosition = -s.params.slidesOffsetBefore,\n                i,\n                prevSlideSize = 0,\n                index = 0;\n            if (typeof s.size === 'undefined') return;\n            if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n                spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * s.size;\n            }\n        \n            s.virtualSize = -spaceBetween;\n            // reset margins\n            if (s.rtl) s.slides.css({marginLeft: '', marginTop: ''});\n            else s.slides.css({marginRight: '', marginBottom: ''});\n        \n            var slidesNumberEvenToRows;\n            if (s.params.slidesPerColumn > 1) {\n                if (Math.floor(s.slides.length / s.params.slidesPerColumn) === s.slides.length / s.params.slidesPerColumn) {\n                    slidesNumberEvenToRows = s.slides.length;\n                }\n                else {\n                    slidesNumberEvenToRows = Math.ceil(s.slides.length / s.params.slidesPerColumn) * s.params.slidesPerColumn;\n                }\n                if (s.params.slidesPerView !== 'auto' && s.params.slidesPerColumnFill === 'row') {\n                    slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, s.params.slidesPerView * s.params.slidesPerColumn);\n                }\n            }\n        \n            // Calc slides\n            var slideSize;\n            var slidesPerColumn = s.params.slidesPerColumn;\n            var slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n            var numFullColumns = slidesPerRow - (s.params.slidesPerColumn * slidesPerRow - s.slides.length);\n            for (i = 0; i < s.slides.length; i++) {\n                slideSize = 0;\n                var slide = s.slides.eq(i);\n                if (s.params.slidesPerColumn > 1) {\n                    // Set slides order\n                    var newSlideOrderIndex;\n                    var column, row;\n                    if (s.params.slidesPerColumnFill === 'column') {\n                        column = Math.floor(i / slidesPerColumn);\n                        row = i - column * slidesPerColumn;\n                        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn-1)) {\n                            if (++row >= slidesPerColumn) {\n                                row = 0;\n                                column++;\n                            }\n                        }\n                        newSlideOrderIndex = column + row * slidesNumberEvenToRows / slidesPerColumn;\n                        slide\n                            .css({\n                                '-webkit-box-ordinal-group': newSlideOrderIndex,\n                                '-moz-box-ordinal-group': newSlideOrderIndex,\n                                '-ms-flex-order': newSlideOrderIndex,\n                                '-webkit-order': newSlideOrderIndex,\n                                'order': newSlideOrderIndex\n                            });\n                    }\n                    else {\n                        row = Math.floor(i / slidesPerRow);\n                        column = i - row * slidesPerRow;\n                    }\n                    slide\n                        .css(\n                            'margin-' + (s.isHorizontal() ? 'top' : 'left'),\n                            (row !== 0 && s.params.spaceBetween) && (s.params.spaceBetween + 'px')\n                        )\n                        .attr('data-swiper-column', column)\n                        .attr('data-swiper-row', row);\n        \n                }\n                if (slide.css('display') === 'none') continue;\n                if (s.params.slidesPerView === 'auto') {\n                    slideSize = s.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n                    if (s.params.roundLengths) slideSize = round(slideSize);\n                }\n                else {\n                    slideSize = (s.size - (s.params.slidesPerView - 1) * spaceBetween) / s.params.slidesPerView;\n                    if (s.params.roundLengths) slideSize = round(slideSize);\n        \n                    if (s.isHorizontal()) {\n                        s.slides[i].style.width = slideSize + 'px';\n                    }\n                    else {\n                        s.slides[i].style.height = slideSize + 'px';\n                    }\n                }\n                s.slides[i].swiperSlideSize = slideSize;\n                s.slidesSizesGrid.push(slideSize);\n        \n        \n                if (s.params.centeredSlides) {\n                    slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n                    if (i === 0) slidePosition = slidePosition - s.size / 2 - spaceBetween;\n                    if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);\n                    s.slidesGrid.push(slidePosition);\n                }\n                else {\n                    if ((index) % s.params.slidesPerGroup === 0) s.snapGrid.push(slidePosition);\n                    s.slidesGrid.push(slidePosition);\n                    slidePosition = slidePosition + slideSize + spaceBetween;\n                }\n        \n                s.virtualSize += slideSize + spaceBetween;\n        \n                prevSlideSize = slideSize;\n        \n                index ++;\n            }\n            s.virtualSize = Math.max(s.virtualSize, s.size) + s.params.slidesOffsetAfter;\n            var newSlidesGrid;\n        \n            if (\n                s.rtl && s.wrongRTL && (s.params.effect === 'slide' || s.params.effect === 'coverflow')) {\n                s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n            }\n            if (!s.support.flexbox || s.params.setWrapperSize) {\n                if (s.isHorizontal()) s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n                else s.wrapper.css({height: s.virtualSize + s.params.spaceBetween + 'px'});\n            }\n        \n            if (s.params.slidesPerColumn > 1) {\n                s.virtualSize = (slideSize + s.params.spaceBetween) * slidesNumberEvenToRows;\n                s.virtualSize = Math.ceil(s.virtualSize / s.params.slidesPerColumn) - s.params.spaceBetween;\n                if (s.isHorizontal()) s.wrapper.css({width: s.virtualSize + s.params.spaceBetween + 'px'});\n                else s.wrapper.css({height: s.virtualSize + s.params.spaceBetween + 'px'});\n                if (s.params.centeredSlides) {\n                    newSlidesGrid = [];\n                    for (i = 0; i < s.snapGrid.length; i++) {\n                        if (s.snapGrid[i] < s.virtualSize + s.snapGrid[0]) newSlidesGrid.push(s.snapGrid[i]);\n                    }\n                    s.snapGrid = newSlidesGrid;\n                }\n            }\n        \n            // Remove last grid elements depending on width\n            if (!s.params.centeredSlides) {\n                newSlidesGrid = [];\n                for (i = 0; i < s.snapGrid.length; i++) {\n                    if (s.snapGrid[i] <= s.virtualSize - s.size) {\n                        newSlidesGrid.push(s.snapGrid[i]);\n                    }\n                }\n                s.snapGrid = newSlidesGrid;\n                if (Math.floor(s.virtualSize - s.size) - Math.floor(s.snapGrid[s.snapGrid.length - 1]) > 1) {\n                    s.snapGrid.push(s.virtualSize - s.size);\n                }\n            }\n            if (s.snapGrid.length === 0) s.snapGrid = [0];\n        \n            if (s.params.spaceBetween !== 0) {\n                if (s.isHorizontal()) {\n                    if (s.rtl) s.slides.css({marginLeft: spaceBetween + 'px'});\n                    else s.slides.css({marginRight: spaceBetween + 'px'});\n                }\n                else s.slides.css({marginBottom: spaceBetween + 'px'});\n            }\n            if (s.params.watchSlidesProgress) {\n                s.updateSlidesOffset();\n            }\n        };\n        s.updateSlidesOffset = function () {\n            for (var i = 0; i < s.slides.length; i++) {\n                s.slides[i].swiperSlideOffset = s.isHorizontal() ? s.slides[i].offsetLeft : s.slides[i].offsetTop;\n            }\n        };\n        \n        /*=========================\n          Slider/slides progress\n          ===========================*/\n        s.updateSlidesProgress = function (translate) {\n            if (typeof translate === 'undefined') {\n                translate = s.translate || 0;\n            }\n            if (s.slides.length === 0) return;\n            if (typeof s.slides[0].swiperSlideOffset === 'undefined') s.updateSlidesOffset();\n        \n            var offsetCenter = -translate;\n            if (s.rtl) offsetCenter = translate;\n        \n            // Visible Slides\n            s.slides.removeClass(s.params.slideVisibleClass);\n            for (var i = 0; i < s.slides.length; i++) {\n                var slide = s.slides[i];\n                var slideProgress = (offsetCenter + (s.params.centeredSlides ? s.minTranslate() : 0) - slide.swiperSlideOffset) / (slide.swiperSlideSize + s.params.spaceBetween);\n                if (s.params.watchSlidesVisibility) {\n                    var slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n                    var slideAfter = slideBefore + s.slidesSizesGrid[i];\n                    var isVisible =\n                        (slideBefore >= 0 && slideBefore < s.size) ||\n                        (slideAfter > 0 && slideAfter <= s.size) ||\n                        (slideBefore <= 0 && slideAfter >= s.size);\n                    if (isVisible) {\n                        s.slides.eq(i).addClass(s.params.slideVisibleClass);\n                    }\n                }\n                slide.progress = s.rtl ? -slideProgress : slideProgress;\n            }\n        };\n        s.updateProgress = function (translate) {\n            if (typeof translate === 'undefined') {\n                translate = s.translate || 0;\n            }\n            var translatesDiff = s.maxTranslate() - s.minTranslate();\n            var wasBeginning = s.isBeginning;\n            var wasEnd = s.isEnd;\n            if (translatesDiff === 0) {\n                s.progress = 0;\n                s.isBeginning = s.isEnd = true;\n            }\n            else {\n                s.progress = (translate - s.minTranslate()) / (translatesDiff);\n                s.isBeginning = s.progress <= 0;\n                s.isEnd = s.progress >= 1;\n            }\n            if (s.isBeginning && !wasBeginning) s.emit('onReachBeginning', s);\n            if (s.isEnd && !wasEnd) s.emit('onReachEnd', s);\n        \n            if (s.params.watchSlidesProgress) s.updateSlidesProgress(translate);\n            s.emit('onProgress', s, s.progress);\n        };\n        s.updateActiveIndex = function () {\n            var translate = s.rtl ? s.translate : -s.translate;\n            var newActiveIndex, i, snapIndex;\n            for (i = 0; i < s.slidesGrid.length; i ++) {\n                if (typeof s.slidesGrid[i + 1] !== 'undefined') {\n                    if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1] - (s.slidesGrid[i + 1] - s.slidesGrid[i]) / 2) {\n                        newActiveIndex = i;\n                    }\n                    else if (translate >= s.slidesGrid[i] && translate < s.slidesGrid[i + 1]) {\n                        newActiveIndex = i + 1;\n                    }\n                }\n                else {\n                    if (translate >= s.slidesGrid[i]) {\n                        newActiveIndex = i;\n                    }\n                }\n            }\n            // Normalize slideIndex\n            if(s.params.normalizeSlideIndex){\n                if (newActiveIndex < 0 || typeof newActiveIndex === 'undefined') newActiveIndex = 0;\n            }\n            // for (i = 0; i < s.slidesGrid.length; i++) {\n                // if (- translate >= s.slidesGrid[i]) {\n                    // newActiveIndex = i;\n                // }\n            // }\n            snapIndex = Math.floor(newActiveIndex / s.params.slidesPerGroup);\n            if (snapIndex >= s.snapGrid.length) snapIndex = s.snapGrid.length - 1;\n        \n            if (newActiveIndex === s.activeIndex) {\n                return;\n            }\n            s.snapIndex = snapIndex;\n            s.previousIndex = s.activeIndex;\n            s.activeIndex = newActiveIndex;\n            s.updateClasses();\n            s.updateRealIndex();\n        };\n        s.updateRealIndex = function(){\n            s.realIndex = s.slides.eq(s.activeIndex).attr('data-swiper-slide-index') || s.activeIndex;\n        };\n        \n        /*=========================\n          Classes\n          ===========================*/\n        s.updateClasses = function () {\n            s.slides.removeClass(s.params.slideActiveClass + ' ' + s.params.slideNextClass + ' ' + s.params.slidePrevClass + ' ' + s.params.slideDuplicateActiveClass + ' ' + s.params.slideDuplicateNextClass + ' ' + s.params.slideDuplicatePrevClass);\n            var activeSlide = s.slides.eq(s.activeIndex);\n            // Active classes\n            activeSlide.addClass(s.params.slideActiveClass);\n            if (params.loop) {\n                // Duplicate to all looped slides\n                if (activeSlide.hasClass(s.params.slideDuplicateClass)) {\n                    s.wrapper.children('.' + s.params.slideClass + ':not(.' + s.params.slideDuplicateClass + ')[data-swiper-slide-index=\"' + s.realIndex + '\"]').addClass(s.params.slideDuplicateActiveClass);\n                }\n                else {\n                    s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + s.realIndex + '\"]').addClass(s.params.slideDuplicateActiveClass);\n                }\n            }\n            // Next Slide\n            var nextSlide = activeSlide.next('.' + s.params.slideClass).addClass(s.params.slideNextClass);\n            if (s.params.loop && nextSlide.length === 0) {\n                nextSlide = s.slides.eq(0);\n                nextSlide.addClass(s.params.slideNextClass);\n            }\n            // Prev Slide\n            var prevSlide = activeSlide.prev('.' + s.params.slideClass).addClass(s.params.slidePrevClass);\n            if (s.params.loop && prevSlide.length === 0) {\n                prevSlide = s.slides.eq(-1);\n                prevSlide.addClass(s.params.slidePrevClass);\n            }\n            if (params.loop) {\n                // Duplicate to all looped slides\n                if (nextSlide.hasClass(s.params.slideDuplicateClass)) {\n                    s.wrapper.children('.' + s.params.slideClass + ':not(.' + s.params.slideDuplicateClass + ')[data-swiper-slide-index=\"' + nextSlide.attr('data-swiper-slide-index') + '\"]').addClass(s.params.slideDuplicateNextClass);\n                }\n                else {\n                    s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + nextSlide.attr('data-swiper-slide-index') + '\"]').addClass(s.params.slideDuplicateNextClass);\n                }\n                if (prevSlide.hasClass(s.params.slideDuplicateClass)) {\n                    s.wrapper.children('.' + s.params.slideClass + ':not(.' + s.params.slideDuplicateClass + ')[data-swiper-slide-index=\"' + prevSlide.attr('data-swiper-slide-index') + '\"]').addClass(s.params.slideDuplicatePrevClass);\n                }\n                else {\n                    s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + prevSlide.attr('data-swiper-slide-index') + '\"]').addClass(s.params.slideDuplicatePrevClass);\n                }\n            }\n        \n            // Pagination\n            if (s.paginationContainer && s.paginationContainer.length > 0) {\n                // Current/Total\n                var current,\n                    total = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;\n                if (s.params.loop) {\n                    current = Math.ceil((s.activeIndex - s.loopedSlides)/s.params.slidesPerGroup);\n                    if (current > s.slides.length - 1 - s.loopedSlides * 2) {\n                        current = current - (s.slides.length - s.loopedSlides * 2);\n                    }\n                    if (current > total - 1) current = current - total;\n                    if (current < 0 && s.params.paginationType !== 'bullets') current = total + current;\n                }\n                else {\n                    if (typeof s.snapIndex !== 'undefined') {\n                        current = s.snapIndex;\n                    }\n                    else {\n                        current = s.activeIndex || 0;\n                    }\n                }\n                // Types\n                if (s.params.paginationType === 'bullets' && s.bullets && s.bullets.length > 0) {\n                    s.bullets.removeClass(s.params.bulletActiveClass);\n                    if (s.paginationContainer.length > 1) {\n                        s.bullets.each(function () {\n                            if ($(this).index() === current) $(this).addClass(s.params.bulletActiveClass);\n                        });\n                    }\n                    else {\n                        s.bullets.eq(current).addClass(s.params.bulletActiveClass);\n                    }\n                }\n                if (s.params.paginationType === 'fraction') {\n                    s.paginationContainer.find('.' + s.params.paginationCurrentClass).text(current + 1);\n                    s.paginationContainer.find('.' + s.params.paginationTotalClass).text(total);\n                }\n                if (s.params.paginationType === 'progress') {\n                    var scale = (current + 1) / total,\n                        scaleX = scale,\n                        scaleY = 1;\n                    if (!s.isHorizontal()) {\n                        scaleY = scale;\n                        scaleX = 1;\n                    }\n                    s.paginationContainer.find('.' + s.params.paginationProgressbarClass).transform('translate3d(0,0,0) scaleX(' + scaleX + ') scaleY(' + scaleY + ')').transition(s.params.speed);\n                }\n                if (s.params.paginationType === 'custom' && s.params.paginationCustomRender) {\n                    s.paginationContainer.html(s.params.paginationCustomRender(s, current + 1, total));\n                    s.emit('onPaginationRendered', s, s.paginationContainer[0]);\n                }\n            }\n        \n            // Next/active buttons\n            if (!s.params.loop) {\n                if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {\n                    if (s.isBeginning) {\n                        s.prevButton.addClass(s.params.buttonDisabledClass);\n                        if (s.params.a11y && s.a11y) s.a11y.disable(s.prevButton);\n                    }\n                    else {\n                        s.prevButton.removeClass(s.params.buttonDisabledClass);\n                        if (s.params.a11y && s.a11y) s.a11y.enable(s.prevButton);\n                    }\n                }\n                if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {\n                    if (s.isEnd) {\n                        s.nextButton.addClass(s.params.buttonDisabledClass);\n                        if (s.params.a11y && s.a11y) s.a11y.disable(s.nextButton);\n                    }\n                    else {\n                        s.nextButton.removeClass(s.params.buttonDisabledClass);\n                        if (s.params.a11y && s.a11y) s.a11y.enable(s.nextButton);\n                    }\n                }\n            }\n        };\n        \n        /*=========================\n          Pagination\n          ===========================*/\n        s.updatePagination = function () {\n            if (!s.params.pagination) return;\n            if (s.paginationContainer && s.paginationContainer.length > 0) {\n                var paginationHTML = '';\n                if (s.params.paginationType === 'bullets') {\n                    var numberOfBullets = s.params.loop ? Math.ceil((s.slides.length - s.loopedSlides * 2) / s.params.slidesPerGroup) : s.snapGrid.length;\n                    for (var i = 0; i < numberOfBullets; i++) {\n                        if (s.params.paginationBulletRender) {\n                            paginationHTML += s.params.paginationBulletRender(s, i, s.params.bulletClass);\n                        }\n                        else {\n                            paginationHTML += '<' + s.params.paginationElement+' class=\"' + s.params.bulletClass + '\"></' + s.params.paginationElement + '>';\n                        }\n                    }\n                    s.paginationContainer.html(paginationHTML);\n                    s.bullets = s.paginationContainer.find('.' + s.params.bulletClass);\n                    if (s.params.paginationClickable && s.params.a11y && s.a11y) {\n                        s.a11y.initPagination();\n                    }\n                }\n                if (s.params.paginationType === 'fraction') {\n                    if (s.params.paginationFractionRender) {\n                        paginationHTML = s.params.paginationFractionRender(s, s.params.paginationCurrentClass, s.params.paginationTotalClass);\n                    }\n                    else {\n                        paginationHTML =\n                            '<span class=\"' + s.params.paginationCurrentClass + '\"></span>' +\n                            ' / ' +\n                            '<span class=\"' + s.params.paginationTotalClass+'\"></span>';\n                    }\n                    s.paginationContainer.html(paginationHTML);\n                }\n                if (s.params.paginationType === 'progress') {\n                    if (s.params.paginationProgressRender) {\n                        paginationHTML = s.params.paginationProgressRender(s, s.params.paginationProgressbarClass);\n                    }\n                    else {\n                        paginationHTML = '<span class=\"' + s.params.paginationProgressbarClass + '\"></span>';\n                    }\n                    s.paginationContainer.html(paginationHTML);\n                }\n                if (s.params.paginationType !== 'custom') {\n                    s.emit('onPaginationRendered', s, s.paginationContainer[0]);\n                }\n            }\n        };\n        /*=========================\n          Common update method\n          ===========================*/\n        s.update = function (updateTranslate) {\n            s.updateContainerSize();\n            s.updateSlidesSize();\n            s.updateProgress();\n            s.updatePagination();\n            s.updateClasses();\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.set();\n            }\n            function forceSetTranslate() {\n                var translate = s.rtl ? -s.translate : s.translate;\n                newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());\n                s.setWrapperTranslate(newTranslate);\n                s.updateActiveIndex();\n                s.updateClasses();\n            }\n            if (updateTranslate) {\n                var translated, newTranslate;\n                if (s.controller && s.controller.spline) {\n                    s.controller.spline = undefined;\n                }\n                if (s.params.freeMode) {\n                    forceSetTranslate();\n                    if (s.params.autoHeight) {\n                        s.updateAutoHeight();\n                    }\n                }\n                else {\n                    if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {\n                        translated = s.slideTo(s.slides.length - 1, 0, false, true);\n                    }\n                    else {\n                        translated = s.slideTo(s.activeIndex, 0, false, true);\n                    }\n                    if (!translated) {\n                        forceSetTranslate();\n                    }\n                }\n            }\n            else if (s.params.autoHeight) {\n                s.updateAutoHeight();\n            }\n        };\n        \n        /*=========================\n          Resize Handler\n          ===========================*/\n        s.onResize = function (forceUpdatePagination) {\n            //Breakpoints\n            if (s.params.breakpoints) {\n                s.setBreakpoint();\n            }\n        \n            // Disable locks on resize\n            var allowSwipeToPrev = s.params.allowSwipeToPrev;\n            var allowSwipeToNext = s.params.allowSwipeToNext;\n            s.params.allowSwipeToPrev = s.params.allowSwipeToNext = true;\n        \n            s.updateContainerSize();\n            s.updateSlidesSize();\n            if (s.params.slidesPerView === 'auto' || s.params.freeMode || forceUpdatePagination) s.updatePagination();\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.set();\n            }\n            if (s.controller && s.controller.spline) {\n                s.controller.spline = undefined;\n            }\n            var slideChangedBySlideTo = false;\n            if (s.params.freeMode) {\n                var newTranslate = Math.min(Math.max(s.translate, s.maxTranslate()), s.minTranslate());\n                s.setWrapperTranslate(newTranslate);\n                s.updateActiveIndex();\n                s.updateClasses();\n        \n                if (s.params.autoHeight) {\n                    s.updateAutoHeight();\n                }\n            }\n            else {\n                s.updateClasses();\n                if ((s.params.slidesPerView === 'auto' || s.params.slidesPerView > 1) && s.isEnd && !s.params.centeredSlides) {\n                    slideChangedBySlideTo = s.slideTo(s.slides.length - 1, 0, false, true);\n                }\n                else {\n                    slideChangedBySlideTo = s.slideTo(s.activeIndex, 0, false, true);\n                }\n            }\n            if (s.params.lazyLoading && !slideChangedBySlideTo && s.lazy) {\n                s.lazy.load();\n            }\n            // Return locks after resize\n            s.params.allowSwipeToPrev = allowSwipeToPrev;\n            s.params.allowSwipeToNext = allowSwipeToNext;\n        };\n        \n        /*=========================\n          Events\n          ===========================*/\n        \n        //Define Touch Events\n        s.touchEventsDesktop = {start: 'mousedown', move: 'mousemove', end: 'mouseup'};\n        if (window.navigator.pointerEnabled) s.touchEventsDesktop = {start: 'pointerdown', move: 'pointermove', end: 'pointerup'};\n        else if (window.navigator.msPointerEnabled) s.touchEventsDesktop = {start: 'MSPointerDown', move: 'MSPointerMove', end: 'MSPointerUp'};\n        s.touchEvents = {\n            start : s.support.touch || !s.params.simulateTouch  ? 'touchstart' : s.touchEventsDesktop.start,\n            move : s.support.touch || !s.params.simulateTouch ? 'touchmove' : s.touchEventsDesktop.move,\n            end : s.support.touch || !s.params.simulateTouch ? 'touchend' : s.touchEventsDesktop.end\n        };\n        \n        \n        // WP8 Touch Events Fix\n        if (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) {\n            (s.params.touchEventsTarget === 'container' ? s.container : s.wrapper).addClass('swiper-wp8-' + s.params.direction);\n        }\n        \n        // Attach/detach events\n        s.initEvents = function (detach) {\n            var actionDom = detach ? 'off' : 'on';\n            var action = detach ? 'removeEventListener' : 'addEventListener';\n            var touchEventsTarget = s.params.touchEventsTarget === 'container' ? s.container[0] : s.wrapper[0];\n            var target = s.support.touch ? touchEventsTarget : document;\n        \n            var moveCapture = s.params.nested ? true : false;\n        \n            //Touch Events\n            if (s.browser.ie) {\n                touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, false);\n                target[action](s.touchEvents.move, s.onTouchMove, moveCapture);\n                target[action](s.touchEvents.end, s.onTouchEnd, false);\n            }\n            else {\n                if (s.support.touch) {\n                    var passiveListener = s.touchEvents.start === 'touchstart' && s.support.passiveListener && s.params.passiveListeners ? {passive: true, capture: false} : false;\n                    touchEventsTarget[action](s.touchEvents.start, s.onTouchStart, passiveListener);\n                    touchEventsTarget[action](s.touchEvents.move, s.onTouchMove, moveCapture);\n                    touchEventsTarget[action](s.touchEvents.end, s.onTouchEnd, passiveListener);\n                }\n                if ((params.simulateTouch && !s.device.ios && !s.device.android) || (params.simulateTouch && !s.support.touch && s.device.ios)) {\n                    touchEventsTarget[action]('mousedown', s.onTouchStart, false);\n                    document[action]('mousemove', s.onTouchMove, moveCapture);\n                    document[action]('mouseup', s.onTouchEnd, false);\n                }\n            }\n            window[action]('resize', s.onResize);\n        \n            // Next, Prev, Index\n            if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {\n                s.nextButton[actionDom]('click', s.onClickNext);\n                if (s.params.a11y && s.a11y) s.nextButton[actionDom]('keydown', s.a11y.onEnterKey);\n            }\n            if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {\n                s.prevButton[actionDom]('click', s.onClickPrev);\n                if (s.params.a11y && s.a11y) s.prevButton[actionDom]('keydown', s.a11y.onEnterKey);\n            }\n            if (s.params.pagination && s.params.paginationClickable) {\n                s.paginationContainer[actionDom]('click', '.' + s.params.bulletClass, s.onClickIndex);\n                if (s.params.a11y && s.a11y) s.paginationContainer[actionDom]('keydown', '.' + s.params.bulletClass, s.a11y.onEnterKey);\n            }\n        \n            // Prevent Links Clicks\n            if (s.params.preventClicks || s.params.preventClicksPropagation) touchEventsTarget[action]('click', s.preventClicks, true);\n        };\n        s.attachEvents = function () {\n            s.initEvents();\n        };\n        s.detachEvents = function () {\n            s.initEvents(true);\n        };\n        \n        /*=========================\n          Handle Clicks\n          ===========================*/\n        // Prevent Clicks\n        s.allowClick = true;\n        s.preventClicks = function (e) {\n            if (!s.allowClick) {\n                if (s.params.preventClicks) e.preventDefault();\n                if (s.params.preventClicksPropagation && s.animating) {\n                    e.stopPropagation();\n                    e.stopImmediatePropagation();\n                }\n            }\n        };\n        // Clicks\n        s.onClickNext = function (e) {\n            e.preventDefault();\n            if (s.isEnd && !s.params.loop) return;\n            s.slideNext();\n        };\n        s.onClickPrev = function (e) {\n            e.preventDefault();\n            if (s.isBeginning && !s.params.loop) return;\n            s.slidePrev();\n        };\n        s.onClickIndex = function (e) {\n            e.preventDefault();\n            var index = $(this).index() * s.params.slidesPerGroup;\n            if (s.params.loop) index = index + s.loopedSlides;\n            s.slideTo(index);\n        };\n        \n        /*=========================\n          Handle Touches\n          ===========================*/\n        function findElementInEvent(e, selector) {\n            var el = $(e.target);\n            if (!el.is(selector)) {\n                if (typeof selector === 'string') {\n                    el = el.parents(selector);\n                }\n                else if (selector.nodeType) {\n                    var found;\n                    el.parents().each(function (index, _el) {\n                        if (_el === selector) found = selector;\n                    });\n                    if (!found) return undefined;\n                    else return selector;\n                }\n            }\n            if (el.length === 0) {\n                return undefined;\n            }\n            return el[0];\n        }\n        s.updateClickedSlide = function (e) {\n            var slide = findElementInEvent(e, '.' + s.params.slideClass);\n            var slideFound = false;\n            if (slide) {\n                for (var i = 0; i < s.slides.length; i++) {\n                    if (s.slides[i] === slide) slideFound = true;\n                }\n            }\n        \n            if (slide && slideFound) {\n                s.clickedSlide = slide;\n                s.clickedIndex = $(slide).index();\n            }\n            else {\n                s.clickedSlide = undefined;\n                s.clickedIndex = undefined;\n                return;\n            }\n            if (s.params.slideToClickedSlide && s.clickedIndex !== undefined && s.clickedIndex !== s.activeIndex) {\n                var slideToIndex = s.clickedIndex,\n                    realIndex,\n                    duplicatedSlides;\n                if (s.params.loop) {\n                    if (s.animating) return;\n                    realIndex = $(s.clickedSlide).attr('data-swiper-slide-index');\n                    if (s.params.centeredSlides) {\n                        if ((slideToIndex < s.loopedSlides - s.params.slidesPerView/2) || (slideToIndex > s.slides.length - s.loopedSlides + s.params.slidesPerView/2)) {\n                            s.fixLoop();\n                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index=\"' + realIndex + '\"]:not(.' + s.params.slideDuplicateClass + ')').eq(0).index();\n                            setTimeout(function () {\n                                s.slideTo(slideToIndex);\n                            }, 0);\n                        }\n                        else {\n                            s.slideTo(slideToIndex);\n                        }\n                    }\n                    else {\n                        if (slideToIndex > s.slides.length - s.params.slidesPerView) {\n                            s.fixLoop();\n                            slideToIndex = s.wrapper.children('.' + s.params.slideClass + '[data-swiper-slide-index=\"' + realIndex + '\"]:not(.' + s.params.slideDuplicateClass + ')').eq(0).index();\n                            setTimeout(function () {\n                                s.slideTo(slideToIndex);\n                            }, 0);\n                        }\n                        else {\n                            s.slideTo(slideToIndex);\n                        }\n                    }\n                }\n                else {\n                    s.slideTo(slideToIndex);\n                }\n            }\n        };\n        \n        var isTouched,\n            isMoved,\n            allowTouchCallbacks,\n            touchStartTime,\n            isScrolling,\n            currentTranslate,\n            startTranslate,\n            allowThresholdMove,\n            // Form elements to match\n            formElements = 'input, select, textarea, button, video',\n            // Last click time\n            lastClickTime = Date.now(), clickTimeout,\n            //Velocities\n            velocities = [],\n            allowMomentumBounce;\n        \n        // Animating Flag\n        s.animating = false;\n        \n        // Touches information\n        s.touches = {\n            startX: 0,\n            startY: 0,\n            currentX: 0,\n            currentY: 0,\n            diff: 0\n        };\n        \n        // Touch handlers\n        var isTouchEvent, startMoving;\n        s.onTouchStart = function (e) {\n            if (e.originalEvent) e = e.originalEvent;\n            isTouchEvent = e.type === 'touchstart';\n            if (!isTouchEvent && 'which' in e && e.which === 3) return;\n            if (s.params.noSwiping && findElementInEvent(e, '.' + s.params.noSwipingClass)) {\n                s.allowClick = true;\n                return;\n            }\n            if (s.params.swipeHandler) {\n                if (!findElementInEvent(e, s.params.swipeHandler)) return;\n            }\n        \n            var startX = s.touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n            var startY = s.touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n        \n            // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n            if(s.device.ios && s.params.iOSEdgeSwipeDetection && startX <= s.params.iOSEdgeSwipeThreshold) {\n                return;\n            }\n        \n            isTouched = true;\n            isMoved = false;\n            allowTouchCallbacks = true;\n            isScrolling = undefined;\n            startMoving = undefined;\n            s.touches.startX = startX;\n            s.touches.startY = startY;\n            touchStartTime = Date.now();\n            s.allowClick = true;\n            s.updateContainerSize();\n            s.swipeDirection = undefined;\n            if (s.params.threshold > 0) allowThresholdMove = false;\n            if (e.type !== 'touchstart') {\n                var preventDefault = true;\n                if ($(e.target).is(formElements)) preventDefault = false;\n                if (document.activeElement && $(document.activeElement).is(formElements)) {\n                    document.activeElement.blur();\n                }\n                if (preventDefault) {\n                    e.preventDefault();\n                }\n            }\n            s.emit('onTouchStart', s, e);\n        };\n        \n        s.onTouchMove = function (e) {\n            if (e.originalEvent) e = e.originalEvent;\n            if (isTouchEvent && e.type === 'mousemove') return;\n            if (e.preventedByNestedSwiper) {\n                s.touches.startX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n                s.touches.startY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n                return;\n            }\n            if (s.params.onlyExternal) {\n                // isMoved = true;\n                s.allowClick = false;\n                if (isTouched) {\n                    s.touches.startX = s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n                    s.touches.startY = s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n                    touchStartTime = Date.now();\n                }\n                return;\n            }\n            if (isTouchEvent && s.params.touchReleaseOnEdges && !s.params.loop) {\n                if (!s.isHorizontal()) {\n                    // Vertical\n                    if (\n                        (s.touches.currentY < s.touches.startY && s.translate <= s.maxTranslate()) ||\n                        (s.touches.currentY > s.touches.startY && s.translate >= s.minTranslate())\n                        ) {\n                        return;\n                    }\n                }\n                else {\n                    if (\n                        (s.touches.currentX < s.touches.startX && s.translate <= s.maxTranslate()) ||\n                        (s.touches.currentX > s.touches.startX && s.translate >= s.minTranslate())\n                        ) {\n                        return;\n                    }\n                }\n            }\n            if (isTouchEvent && document.activeElement) {\n                if (e.target === document.activeElement && $(e.target).is(formElements)) {\n                    isMoved = true;\n                    s.allowClick = false;\n                    return;\n                }\n            }\n            if (allowTouchCallbacks) {\n                s.emit('onTouchMove', s, e);\n            }\n            if (e.targetTouches && e.targetTouches.length > 1) return;\n        \n            s.touches.currentX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n            s.touches.currentY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n        \n            if (typeof isScrolling === 'undefined') {\n                var touchAngle;\n                if (s.isHorizontal() && s.touches.currentY === s.touches.startY || !s.isHorizontal() && s.touches.currentX !== s.touches.startX) {\n                    isScrolling = false;\n                }\n                else {\n                    touchAngle = Math.atan2(Math.abs(s.touches.currentY - s.touches.startY), Math.abs(s.touches.currentX - s.touches.startX)) * 180 / Math.PI;\n                    isScrolling = s.isHorizontal() ? touchAngle > s.params.touchAngle : (90 - touchAngle > s.params.touchAngle);\n                }\n            }\n            if (isScrolling) {\n                s.emit('onTouchMoveOpposite', s, e);\n            }\n            if (typeof startMoving === 'undefined' && s.browser.ieTouch) {\n                if (s.touches.currentX !== s.touches.startX || s.touches.currentY !== s.touches.startY) {\n                    startMoving = true;\n                }\n            }\n            if (!isTouched) return;\n            if (isScrolling)  {\n                isTouched = false;\n                return;\n            }\n            if (!startMoving && s.browser.ieTouch) {\n                return;\n            }\n            s.allowClick = false;\n            s.emit('onSliderMove', s, e);\n            e.preventDefault();\n            if (s.params.touchMoveStopPropagation && !s.params.nested) {\n                e.stopPropagation();\n            }\n        \n            if (!isMoved) {\n                if (params.loop) {\n                    s.fixLoop();\n                }\n                startTranslate = s.getWrapperTranslate();\n                s.setWrapperTransition(0);\n                if (s.animating) {\n                    s.wrapper.trigger('webkitTransitionEnd transitionend oTransitionEnd MSTransitionEnd msTransitionEnd');\n                }\n                if (s.params.autoplay && s.autoplaying) {\n                    if (s.params.autoplayDisableOnInteraction) {\n                        s.stopAutoplay();\n                    }\n                    else {\n                        s.pauseAutoplay();\n                    }\n                }\n                allowMomentumBounce = false;\n                //Grab Cursor\n                if (s.params.grabCursor && (s.params.allowSwipeToNext === true || s.params.allowSwipeToPrev === true)) {\n                    s.setGrabCursor(true);\n                }\n            }\n            isMoved = true;\n        \n            var diff = s.touches.diff = s.isHorizontal() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;\n        \n            diff = diff * s.params.touchRatio;\n            if (s.rtl) diff = -diff;\n        \n            s.swipeDirection = diff > 0 ? 'prev' : 'next';\n            currentTranslate = diff + startTranslate;\n        \n            var disableParentSwiper = true;\n            if ((diff > 0 && currentTranslate > s.minTranslate())) {\n                disableParentSwiper = false;\n                if (s.params.resistance) currentTranslate = s.minTranslate() - 1 + Math.pow(-s.minTranslate() + startTranslate + diff, s.params.resistanceRatio);\n            }\n            else if (diff < 0 && currentTranslate < s.maxTranslate()) {\n                disableParentSwiper = false;\n                if (s.params.resistance) currentTranslate = s.maxTranslate() + 1 - Math.pow(s.maxTranslate() - startTranslate - diff, s.params.resistanceRatio);\n            }\n        \n            if (disableParentSwiper) {\n                e.preventedByNestedSwiper = true;\n            }\n        \n            // Directions locks\n            if (!s.params.allowSwipeToNext && s.swipeDirection === 'next' && currentTranslate < startTranslate) {\n                currentTranslate = startTranslate;\n            }\n            if (!s.params.allowSwipeToPrev && s.swipeDirection === 'prev' && currentTranslate > startTranslate) {\n                currentTranslate = startTranslate;\n            }\n        \n        \n            // Threshold\n            if (s.params.threshold > 0) {\n                if (Math.abs(diff) > s.params.threshold || allowThresholdMove) {\n                    if (!allowThresholdMove) {\n                        allowThresholdMove = true;\n                        s.touches.startX = s.touches.currentX;\n                        s.touches.startY = s.touches.currentY;\n                        currentTranslate = startTranslate;\n                        s.touches.diff = s.isHorizontal() ? s.touches.currentX - s.touches.startX : s.touches.currentY - s.touches.startY;\n                        return;\n                    }\n                }\n                else {\n                    currentTranslate = startTranslate;\n                    return;\n                }\n            }\n        \n            if (!s.params.followFinger) return;\n        \n            // Update active index in free mode\n            if (s.params.freeMode || s.params.watchSlidesProgress) {\n                s.updateActiveIndex();\n            }\n            if (s.params.freeMode) {\n                //Velocity\n                if (velocities.length === 0) {\n                    velocities.push({\n                        position: s.touches[s.isHorizontal() ? 'startX' : 'startY'],\n                        time: touchStartTime\n                    });\n                }\n                velocities.push({\n                    position: s.touches[s.isHorizontal() ? 'currentX' : 'currentY'],\n                    time: (new window.Date()).getTime()\n                });\n            }\n            // Update progress\n            s.updateProgress(currentTranslate);\n            // Update translate\n            s.setWrapperTranslate(currentTranslate);\n        };\n        s.onTouchEnd = function (e) {\n            if (e.originalEvent) e = e.originalEvent;\n            if (allowTouchCallbacks) {\n                s.emit('onTouchEnd', s, e);\n            }\n            allowTouchCallbacks = false;\n            if (!isTouched) return;\n            //Return Grab Cursor\n            if (s.params.grabCursor && isMoved && isTouched  && (s.params.allowSwipeToNext === true || s.params.allowSwipeToPrev === true)) {\n                s.setGrabCursor(false);\n            }\n        \n            // Time diff\n            var touchEndTime = Date.now();\n            var timeDiff = touchEndTime - touchStartTime;\n        \n            // Tap, doubleTap, Click\n            if (s.allowClick) {\n                s.updateClickedSlide(e);\n                s.emit('onTap', s, e);\n                if (timeDiff < 300 && (touchEndTime - lastClickTime) > 300) {\n                    if (clickTimeout) clearTimeout(clickTimeout);\n                    clickTimeout = setTimeout(function () {\n                        if (!s) return;\n                        if (s.params.paginationHide && s.paginationContainer.length > 0 && !$(e.target).hasClass(s.params.bulletClass)) {\n                            s.paginationContainer.toggleClass(s.params.paginationHiddenClass);\n                        }\n                        s.emit('onClick', s, e);\n                    }, 300);\n        \n                }\n                if (timeDiff < 300 && (touchEndTime - lastClickTime) < 300) {\n                    if (clickTimeout) clearTimeout(clickTimeout);\n                    s.emit('onDoubleTap', s, e);\n                }\n            }\n        \n            lastClickTime = Date.now();\n            setTimeout(function () {\n                if (s) s.allowClick = true;\n            }, 0);\n        \n            if (!isTouched || !isMoved || !s.swipeDirection || s.touches.diff === 0 || currentTranslate === startTranslate) {\n                isTouched = isMoved = false;\n                return;\n            }\n            isTouched = isMoved = false;\n        \n            var currentPos;\n            if (s.params.followFinger) {\n                currentPos = s.rtl ? s.translate : -s.translate;\n            }\n            else {\n                currentPos = -currentTranslate;\n            }\n            if (s.params.freeMode) {\n                if (currentPos < -s.minTranslate()) {\n                    s.slideTo(s.activeIndex);\n                    return;\n                }\n                else if (currentPos > -s.maxTranslate()) {\n                    if (s.slides.length < s.snapGrid.length) {\n                        s.slideTo(s.snapGrid.length - 1);\n                    }\n                    else {\n                        s.slideTo(s.slides.length - 1);\n                    }\n                    return;\n                }\n        \n                if (s.params.freeModeMomentum) {\n                    if (velocities.length > 1) {\n                        var lastMoveEvent = velocities.pop(), velocityEvent = velocities.pop();\n        \n                        var distance = lastMoveEvent.position - velocityEvent.position;\n                        var time = lastMoveEvent.time - velocityEvent.time;\n                        s.velocity = distance / time;\n                        s.velocity = s.velocity / 2;\n                        if (Math.abs(s.velocity) < s.params.freeModeMinimumVelocity) {\n                            s.velocity = 0;\n                        }\n                        // this implies that the user stopped moving a finger then released.\n                        // There would be no events with distance zero, so the last event is stale.\n                        if (time > 150 || (new window.Date().getTime() - lastMoveEvent.time) > 300) {\n                            s.velocity = 0;\n                        }\n                    } else {\n                        s.velocity = 0;\n                    }\n                    s.velocity = s.velocity * s.params.freeModeMomentumVelocityRatio;\n        \n                    velocities.length = 0;\n                    var momentumDuration = 1000 * s.params.freeModeMomentumRatio;\n                    var momentumDistance = s.velocity * momentumDuration;\n        \n                    var newPosition = s.translate + momentumDistance;\n                    if (s.rtl) newPosition = - newPosition;\n                    var doBounce = false;\n                    var afterBouncePosition;\n                    var bounceAmount = Math.abs(s.velocity) * 20 * s.params.freeModeMomentumBounceRatio;\n                    if (newPosition < s.maxTranslate()) {\n                        if (s.params.freeModeMomentumBounce) {\n                            if (newPosition + s.maxTranslate() < -bounceAmount) {\n                                newPosition = s.maxTranslate() - bounceAmount;\n                            }\n                            afterBouncePosition = s.maxTranslate();\n                            doBounce = true;\n                            allowMomentumBounce = true;\n                        }\n                        else {\n                            newPosition = s.maxTranslate();\n                        }\n                    }\n                    else if (newPosition > s.minTranslate()) {\n                        if (s.params.freeModeMomentumBounce) {\n                            if (newPosition - s.minTranslate() > bounceAmount) {\n                                newPosition = s.minTranslate() + bounceAmount;\n                            }\n                            afterBouncePosition = s.minTranslate();\n                            doBounce = true;\n                            allowMomentumBounce = true;\n                        }\n                        else {\n                            newPosition = s.minTranslate();\n                        }\n                    }\n                    else if (s.params.freeModeSticky) {\n                        var j = 0,\n                            nextSlide;\n                        for (j = 0; j < s.snapGrid.length; j += 1) {\n                            if (s.snapGrid[j] > -newPosition) {\n                                nextSlide = j;\n                                break;\n                            }\n        \n                        }\n                        if (Math.abs(s.snapGrid[nextSlide] - newPosition) < Math.abs(s.snapGrid[nextSlide - 1] - newPosition) || s.swipeDirection === 'next') {\n                            newPosition = s.snapGrid[nextSlide];\n                        } else {\n                            newPosition = s.snapGrid[nextSlide - 1];\n                        }\n                        if (!s.rtl) newPosition = - newPosition;\n                    }\n                    //Fix duration\n                    if (s.velocity !== 0) {\n                        if (s.rtl) {\n                            momentumDuration = Math.abs((-newPosition - s.translate) / s.velocity);\n                        }\n                        else {\n                            momentumDuration = Math.abs((newPosition - s.translate) / s.velocity);\n                        }\n                    }\n                    else if (s.params.freeModeSticky) {\n                        s.slideReset();\n                        return;\n                    }\n        \n                    if (s.params.freeModeMomentumBounce && doBounce) {\n                        s.updateProgress(afterBouncePosition);\n                        s.setWrapperTransition(momentumDuration);\n                        s.setWrapperTranslate(newPosition);\n                        s.onTransitionStart();\n                        s.animating = true;\n                        s.wrapper.transitionEnd(function () {\n                            if (!s || !allowMomentumBounce) return;\n                            s.emit('onMomentumBounce', s);\n        \n                            s.setWrapperTransition(s.params.speed);\n                            s.setWrapperTranslate(afterBouncePosition);\n                            s.wrapper.transitionEnd(function () {\n                                if (!s) return;\n                                s.onTransitionEnd();\n                            });\n                        });\n                    } else if (s.velocity) {\n                        s.updateProgress(newPosition);\n                        s.setWrapperTransition(momentumDuration);\n                        s.setWrapperTranslate(newPosition);\n                        s.onTransitionStart();\n                        if (!s.animating) {\n                            s.animating = true;\n                            s.wrapper.transitionEnd(function () {\n                                if (!s) return;\n                                s.onTransitionEnd();\n                            });\n                        }\n        \n                    } else {\n                        s.updateProgress(newPosition);\n                    }\n        \n                    s.updateActiveIndex();\n                }\n                if (!s.params.freeModeMomentum || timeDiff >= s.params.longSwipesMs) {\n                    s.updateProgress();\n                    s.updateActiveIndex();\n                }\n                return;\n            }\n        \n            // Find current slide\n            var i, stopIndex = 0, groupSize = s.slidesSizesGrid[0];\n            for (i = 0; i < s.slidesGrid.length; i += s.params.slidesPerGroup) {\n                if (typeof s.slidesGrid[i + s.params.slidesPerGroup] !== 'undefined') {\n                    if (currentPos >= s.slidesGrid[i] && currentPos < s.slidesGrid[i + s.params.slidesPerGroup]) {\n                        stopIndex = i;\n                        groupSize = s.slidesGrid[i + s.params.slidesPerGroup] - s.slidesGrid[i];\n                    }\n                }\n                else {\n                    if (currentPos >= s.slidesGrid[i]) {\n                        stopIndex = i;\n                        groupSize = s.slidesGrid[s.slidesGrid.length - 1] - s.slidesGrid[s.slidesGrid.length - 2];\n                    }\n                }\n            }\n        \n            // Find current slide size\n            var ratio = (currentPos - s.slidesGrid[stopIndex]) / groupSize;\n        \n            if (timeDiff > s.params.longSwipesMs) {\n                // Long touches\n                if (!s.params.longSwipes) {\n                    s.slideTo(s.activeIndex);\n                    return;\n                }\n                if (s.swipeDirection === 'next') {\n                    if (ratio >= s.params.longSwipesRatio) s.slideTo(stopIndex + s.params.slidesPerGroup);\n                    else s.slideTo(stopIndex);\n        \n                }\n                if (s.swipeDirection === 'prev') {\n                    if (ratio > (1 - s.params.longSwipesRatio)) s.slideTo(stopIndex + s.params.slidesPerGroup);\n                    else s.slideTo(stopIndex);\n                }\n            }\n            else {\n                // Short swipes\n                if (!s.params.shortSwipes) {\n                    s.slideTo(s.activeIndex);\n                    return;\n                }\n                if (s.swipeDirection === 'next') {\n                    s.slideTo(stopIndex + s.params.slidesPerGroup);\n        \n                }\n                if (s.swipeDirection === 'prev') {\n                    s.slideTo(stopIndex);\n                }\n            }\n        };\n        /*=========================\n          Transitions\n          ===========================*/\n        s._slideTo = function (slideIndex, speed) {\n            return s.slideTo(slideIndex, speed, true, true);\n        };\n        s.slideTo = function (slideIndex, speed, runCallbacks, internal) {\n            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n            if (typeof slideIndex === 'undefined') slideIndex = 0;\n            if (slideIndex < 0) slideIndex = 0;\n            s.snapIndex = Math.floor(slideIndex / s.params.slidesPerGroup);\n            if (s.snapIndex >= s.snapGrid.length) s.snapIndex = s.snapGrid.length - 1;\n        \n            var translate = - s.snapGrid[s.snapIndex];\n            // Stop autoplay\n            if (s.params.autoplay && s.autoplaying) {\n                if (internal || !s.params.autoplayDisableOnInteraction) {\n                    s.pauseAutoplay(speed);\n                }\n                else {\n                    s.stopAutoplay();\n                }\n            }\n            // Update progress\n            s.updateProgress(translate);\n        \n            // Normalize slideIndex\n            if(s.params.normalizeSlideIndex){\n                for (var i = 0; i < s.slidesGrid.length; i++) {\n                    if (- Math.floor(translate * 100) >= Math.floor(s.slidesGrid[i] * 100)) {\n                        slideIndex = i;\n                    }\n                }\n            }\n        \n            // Directions locks\n            if (!s.params.allowSwipeToNext && translate < s.translate && translate < s.minTranslate()) {\n                return false;\n            }\n            if (!s.params.allowSwipeToPrev && translate > s.translate && translate > s.maxTranslate()) {\n                if ((s.activeIndex || 0) !== slideIndex ) return false;\n            }\n        \n            // Update Index\n            if (typeof speed === 'undefined') speed = s.params.speed;\n            s.previousIndex = s.activeIndex || 0;\n            s.activeIndex = slideIndex;\n            s.updateRealIndex();\n            if ((s.rtl && -translate === s.translate) || (!s.rtl && translate === s.translate)) {\n                // Update Height\n                if (s.params.autoHeight) {\n                    s.updateAutoHeight();\n                }\n                s.updateClasses();\n                if (s.params.effect !== 'slide') {\n                    s.setWrapperTranslate(translate);\n                }\n                return false;\n            }\n            s.updateClasses();\n            s.onTransitionStart(runCallbacks);\n        \n            if (speed === 0 || s.browser.lteIE9) {\n                s.setWrapperTranslate(translate);\n                s.setWrapperTransition(0);\n                s.onTransitionEnd(runCallbacks);\n            }\n            else {\n                s.setWrapperTranslate(translate);\n                s.setWrapperTransition(speed);\n                if (!s.animating) {\n                    s.animating = true;\n                    s.wrapper.transitionEnd(function () {\n                        if (!s) return;\n                        s.onTransitionEnd(runCallbacks);\n                    });\n                }\n        \n            }\n        \n            return true;\n        };\n        \n        s.onTransitionStart = function (runCallbacks) {\n            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n            if (s.params.autoHeight) {\n                s.updateAutoHeight();\n            }\n            if (s.lazy) s.lazy.onTransitionStart();\n            if (runCallbacks) {\n                s.emit('onTransitionStart', s);\n                if (s.activeIndex !== s.previousIndex) {\n                    s.emit('onSlideChangeStart', s);\n                    if (s.activeIndex > s.previousIndex) {\n                        s.emit('onSlideNextStart', s);\n                    }\n                    else {\n                        s.emit('onSlidePrevStart', s);\n                    }\n                }\n        \n            }\n        };\n        s.onTransitionEnd = function (runCallbacks) {\n            s.animating = false;\n            s.setWrapperTransition(0);\n            if (typeof runCallbacks === 'undefined') runCallbacks = true;\n            if (s.lazy) s.lazy.onTransitionEnd();\n            if (runCallbacks) {\n                s.emit('onTransitionEnd', s);\n                if (s.activeIndex !== s.previousIndex) {\n                    s.emit('onSlideChangeEnd', s);\n                    if (s.activeIndex > s.previousIndex) {\n                        s.emit('onSlideNextEnd', s);\n                    }\n                    else {\n                        s.emit('onSlidePrevEnd', s);\n                    }\n                }\n            }\n            if (s.params.history && s.history) {\n                s.history.setHistory(s.params.history, s.activeIndex);\n            }\n            if (s.params.hashnav && s.hashnav) {\n                s.hashnav.setHash();\n            }\n        \n        };\n        s.slideNext = function (runCallbacks, speed, internal) {\n            if (s.params.loop) {\n                if (s.animating) return false;\n                s.fixLoop();\n                var clientLeft = s.container[0].clientLeft;\n                return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);\n            }\n            else return s.slideTo(s.activeIndex + s.params.slidesPerGroup, speed, runCallbacks, internal);\n        };\n        s._slideNext = function (speed) {\n            return s.slideNext(true, speed, true);\n        };\n        s.slidePrev = function (runCallbacks, speed, internal) {\n            if (s.params.loop) {\n                if (s.animating) return false;\n                s.fixLoop();\n                var clientLeft = s.container[0].clientLeft;\n                return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);\n            }\n            else return s.slideTo(s.activeIndex - 1, speed, runCallbacks, internal);\n        };\n        s._slidePrev = function (speed) {\n            return s.slidePrev(true, speed, true);\n        };\n        s.slideReset = function (runCallbacks, speed, internal) {\n            return s.slideTo(s.activeIndex, speed, runCallbacks);\n        };\n        \n        s.disableTouchControl = function () {\n            s.params.onlyExternal = true;\n            return true;\n        };\n        s.enableTouchControl = function () {\n            s.params.onlyExternal = false;\n            return true;\n        };\n        \n        /*=========================\n          Translate/transition helpers\n          ===========================*/\n        s.setWrapperTransition = function (duration, byController) {\n            s.wrapper.transition(duration);\n            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n                s.effects[s.params.effect].setTransition(duration);\n            }\n            if (s.params.parallax && s.parallax) {\n                s.parallax.setTransition(duration);\n            }\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.setTransition(duration);\n            }\n            if (s.params.control && s.controller) {\n                s.controller.setTransition(duration, byController);\n            }\n            s.emit('onSetTransition', s, duration);\n        };\n        s.setWrapperTranslate = function (translate, updateActiveIndex, byController) {\n            var x = 0, y = 0, z = 0;\n            if (s.isHorizontal()) {\n                x = s.rtl ? -translate : translate;\n            }\n            else {\n                y = translate;\n            }\n        \n            if (s.params.roundLengths) {\n                x = round(x);\n                y = round(y);\n            }\n        \n            if (!s.params.virtualTranslate) {\n                if (s.support.transforms3d) s.wrapper.transform('translate3d(' + x + 'px, ' + y + 'px, ' + z + 'px)');\n                else s.wrapper.transform('translate(' + x + 'px, ' + y + 'px)');\n            }\n        \n            s.translate = s.isHorizontal() ? x : y;\n        \n            // Check if we need to update progress\n            var progress;\n            var translatesDiff = s.maxTranslate() - s.minTranslate();\n            if (translatesDiff === 0) {\n                progress = 0;\n            }\n            else {\n                progress = (translate - s.minTranslate()) / (translatesDiff);\n            }\n            if (progress !== s.progress) {\n                s.updateProgress(translate);\n            }\n        \n            if (updateActiveIndex) s.updateActiveIndex();\n            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n                s.effects[s.params.effect].setTranslate(s.translate);\n            }\n            if (s.params.parallax && s.parallax) {\n                s.parallax.setTranslate(s.translate);\n            }\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.setTranslate(s.translate);\n            }\n            if (s.params.control && s.controller) {\n                s.controller.setTranslate(s.translate, byController);\n            }\n            s.emit('onSetTranslate', s, s.translate);\n        };\n        \n        s.getTranslate = function (el, axis) {\n            var matrix, curTransform, curStyle, transformMatrix;\n        \n            // automatic axis detection\n            if (typeof axis === 'undefined') {\n                axis = 'x';\n            }\n        \n            if (s.params.virtualTranslate) {\n                return s.rtl ? -s.translate : s.translate;\n            }\n        \n            curStyle = window.getComputedStyle(el, null);\n            if (window.WebKitCSSMatrix) {\n                curTransform = curStyle.transform || curStyle.webkitTransform;\n                if (curTransform.split(',').length > 6) {\n                    curTransform = curTransform.split(', ').map(function(a){\n                        return a.replace(',','.');\n                    }).join(', ');\n                }\n                // Some old versions of Webkit choke when 'none' is passed; pass\n                // empty string instead in this case\n                transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n            }\n            else {\n                transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform  || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n                matrix = transformMatrix.toString().split(',');\n            }\n        \n            if (axis === 'x') {\n                //Latest Chrome and webkits Fix\n                if (window.WebKitCSSMatrix)\n                    curTransform = transformMatrix.m41;\n                //Crazy IE10 Matrix\n                else if (matrix.length === 16)\n                    curTransform = parseFloat(matrix[12]);\n                //Normal Browsers\n                else\n                    curTransform = parseFloat(matrix[4]);\n            }\n            if (axis === 'y') {\n                //Latest Chrome and webkits Fix\n                if (window.WebKitCSSMatrix)\n                    curTransform = transformMatrix.m42;\n                //Crazy IE10 Matrix\n                else if (matrix.length === 16)\n                    curTransform = parseFloat(matrix[13]);\n                //Normal Browsers\n                else\n                    curTransform = parseFloat(matrix[5]);\n            }\n            if (s.rtl && curTransform) curTransform = -curTransform;\n            return curTransform || 0;\n        };\n        s.getWrapperTranslate = function (axis) {\n            if (typeof axis === 'undefined') {\n                axis = s.isHorizontal() ? 'x' : 'y';\n            }\n            return s.getTranslate(s.wrapper[0], axis);\n        };\n        \n        /*=========================\n          Observer\n          ===========================*/\n        s.observers = [];\n        function initObserver(target, options) {\n            options = options || {};\n            // create an observer instance\n            var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n            var observer = new ObserverFunc(function (mutations) {\n                mutations.forEach(function (mutation) {\n                    s.onResize(true);\n                    s.emit('onObserverUpdate', s, mutation);\n                });\n            });\n        \n            observer.observe(target, {\n                attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n                childList: typeof options.childList === 'undefined' ? true : options.childList,\n                characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n            });\n        \n            s.observers.push(observer);\n        }\n        s.initObservers = function () {\n            if (s.params.observeParents) {\n                var containerParents = s.container.parents();\n                for (var i = 0; i < containerParents.length; i++) {\n                    initObserver(containerParents[i]);\n                }\n            }\n        \n            // Observe container\n            initObserver(s.container[0], {childList: false});\n        \n            // Observe wrapper\n            initObserver(s.wrapper[0], {attributes: false});\n        };\n        s.disconnectObservers = function () {\n            for (var i = 0; i < s.observers.length; i++) {\n                s.observers[i].disconnect();\n            }\n            s.observers = [];\n        };\n        /*=========================\n          Loop\n          ===========================*/\n        // Create looped slides\n        s.createLoop = function () {\n            // Remove duplicated slides\n            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();\n        \n            var slides = s.wrapper.children('.' + s.params.slideClass);\n        \n            if(s.params.slidesPerView === 'auto' && !s.params.loopedSlides) s.params.loopedSlides = slides.length;\n        \n            s.loopedSlides = parseInt(s.params.loopedSlides || s.params.slidesPerView, 10);\n            s.loopedSlides = s.loopedSlides + s.params.loopAdditionalSlides;\n            if (s.loopedSlides > slides.length) {\n                s.loopedSlides = slides.length;\n            }\n        \n            var prependSlides = [], appendSlides = [], i;\n            slides.each(function (index, el) {\n                var slide = $(this);\n                if (index < s.loopedSlides) appendSlides.push(el);\n                if (index < slides.length && index >= slides.length - s.loopedSlides) prependSlides.push(el);\n                slide.attr('data-swiper-slide-index', index);\n            });\n            for (i = 0; i < appendSlides.length; i++) {\n                s.wrapper.append($(appendSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));\n            }\n            for (i = prependSlides.length - 1; i >= 0; i--) {\n                s.wrapper.prepend($(prependSlides[i].cloneNode(true)).addClass(s.params.slideDuplicateClass));\n            }\n        };\n        s.destroyLoop = function () {\n            s.wrapper.children('.' + s.params.slideClass + '.' + s.params.slideDuplicateClass).remove();\n            s.slides.removeAttr('data-swiper-slide-index');\n        };\n        s.reLoop = function (updatePosition) {\n            var oldIndex = s.activeIndex - s.loopedSlides;\n            s.destroyLoop();\n            s.createLoop();\n            s.updateSlidesSize();\n            if (updatePosition) {\n                s.slideTo(oldIndex + s.loopedSlides, 0, false);\n            }\n        \n        };\n        s.fixLoop = function () {\n            var newIndex;\n            //Fix For Negative Oversliding\n            if (s.activeIndex < s.loopedSlides) {\n                newIndex = s.slides.length - s.loopedSlides * 3 + s.activeIndex;\n                newIndex = newIndex + s.loopedSlides;\n                s.slideTo(newIndex, 0, false, true);\n            }\n            //Fix For Positive Oversliding\n            else if ((s.params.slidesPerView === 'auto' && s.activeIndex >= s.loopedSlides * 2) || (s.activeIndex > s.slides.length - s.params.slidesPerView * 2)) {\n                newIndex = -s.slides.length + s.activeIndex + s.loopedSlides;\n                newIndex = newIndex + s.loopedSlides;\n                s.slideTo(newIndex, 0, false, true);\n            }\n        };\n        /*=========================\n          Append/Prepend/Remove Slides\n          ===========================*/\n        s.appendSlide = function (slides) {\n            if (s.params.loop) {\n                s.destroyLoop();\n            }\n            if (typeof slides === 'object' && slides.length) {\n                for (var i = 0; i < slides.length; i++) {\n                    if (slides[i]) s.wrapper.append(slides[i]);\n                }\n            }\n            else {\n                s.wrapper.append(slides);\n            }\n            if (s.params.loop) {\n                s.createLoop();\n            }\n            if (!(s.params.observer && s.support.observer)) {\n                s.update(true);\n            }\n        };\n        s.prependSlide = function (slides) {\n            if (s.params.loop) {\n                s.destroyLoop();\n            }\n            var newActiveIndex = s.activeIndex + 1;\n            if (typeof slides === 'object' && slides.length) {\n                for (var i = 0; i < slides.length; i++) {\n                    if (slides[i]) s.wrapper.prepend(slides[i]);\n                }\n                newActiveIndex = s.activeIndex + slides.length;\n            }\n            else {\n                s.wrapper.prepend(slides);\n            }\n            if (s.params.loop) {\n                s.createLoop();\n            }\n            if (!(s.params.observer && s.support.observer)) {\n                s.update(true);\n            }\n            s.slideTo(newActiveIndex, 0, false);\n        };\n        s.removeSlide = function (slidesIndexes) {\n            if (s.params.loop) {\n                s.destroyLoop();\n                s.slides = s.wrapper.children('.' + s.params.slideClass);\n            }\n            var newActiveIndex = s.activeIndex,\n                indexToRemove;\n            if (typeof slidesIndexes === 'object' && slidesIndexes.length) {\n                for (var i = 0; i < slidesIndexes.length; i++) {\n                    indexToRemove = slidesIndexes[i];\n                    if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();\n                    if (indexToRemove < newActiveIndex) newActiveIndex--;\n                }\n                newActiveIndex = Math.max(newActiveIndex, 0);\n            }\n            else {\n                indexToRemove = slidesIndexes;\n                if (s.slides[indexToRemove]) s.slides.eq(indexToRemove).remove();\n                if (indexToRemove < newActiveIndex) newActiveIndex--;\n                newActiveIndex = Math.max(newActiveIndex, 0);\n            }\n        \n            if (s.params.loop) {\n                s.createLoop();\n            }\n        \n            if (!(s.params.observer && s.support.observer)) {\n                s.update(true);\n            }\n            if (s.params.loop) {\n                s.slideTo(newActiveIndex + s.loopedSlides, 0, false);\n            }\n            else {\n                s.slideTo(newActiveIndex, 0, false);\n            }\n        \n        };\n        s.removeAllSlides = function () {\n            var slidesIndexes = [];\n            for (var i = 0; i < s.slides.length; i++) {\n                slidesIndexes.push(i);\n            }\n            s.removeSlide(slidesIndexes);\n        };\n        \n\n        /*=========================\n          Effects\n          ===========================*/\n        s.effects = {\n            fade: {\n                setTranslate: function () {\n                    for (var i = 0; i < s.slides.length; i++) {\n                        var slide = s.slides.eq(i);\n                        var offset = slide[0].swiperSlideOffset;\n                        var tx = -offset;\n                        if (!s.params.virtualTranslate) tx = tx - s.translate;\n                        var ty = 0;\n                        if (!s.isHorizontal()) {\n                            ty = tx;\n                            tx = 0;\n                        }\n                        var slideOpacity = s.params.fade.crossFade ?\n                                Math.max(1 - Math.abs(slide[0].progress), 0) :\n                                1 + Math.min(Math.max(slide[0].progress, -1), 0);\n                        slide\n                            .css({\n                                opacity: slideOpacity\n                            })\n                            .transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px)');\n        \n                    }\n        \n                },\n                setTransition: function (duration) {\n                    s.slides.transition(duration);\n                    if (s.params.virtualTranslate && duration !== 0) {\n                        var eventTriggered = false;\n                        s.slides.transitionEnd(function () {\n                            if (eventTriggered) return;\n                            if (!s) return;\n                            eventTriggered = true;\n                            s.animating = false;\n                            var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];\n                            for (var i = 0; i < triggerEvents.length; i++) {\n                                s.wrapper.trigger(triggerEvents[i]);\n                            }\n                        });\n                    }\n                }\n            },\n            flip: {\n                setTranslate: function () {\n                    for (var i = 0; i < s.slides.length; i++) {\n                        var slide = s.slides.eq(i);\n                        var progress = slide[0].progress;\n                        if (s.params.flip.limitRotation) {\n                            progress = Math.max(Math.min(slide[0].progress, 1), -1);\n                        }\n                        var offset = slide[0].swiperSlideOffset;\n                        var rotate = -180 * progress,\n                            rotateY = rotate,\n                            rotateX = 0,\n                            tx = -offset,\n                            ty = 0;\n                        if (!s.isHorizontal()) {\n                            ty = tx;\n                            tx = 0;\n                            rotateX = -rotateY;\n                            rotateY = 0;\n                        }\n                        else if (s.rtl) {\n                            rotateY = -rotateY;\n                        }\n        \n                        slide[0].style.zIndex = -Math.abs(Math.round(progress)) + s.slides.length;\n        \n                        if (s.params.flip.slideShadows) {\n                            //Set shadows\n                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n                            if (shadowBefore.length === 0) {\n                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '\"></div>');\n                                slide.append(shadowBefore);\n                            }\n                            if (shadowAfter.length === 0) {\n                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '\"></div>');\n                                slide.append(shadowAfter);\n                            }\n                            if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n                            if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n                        }\n        \n                        slide\n                            .transform('translate3d(' + tx + 'px, ' + ty + 'px, 0px) rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)');\n                    }\n                },\n                setTransition: function (duration) {\n                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n                    if (s.params.virtualTranslate && duration !== 0) {\n                        var eventTriggered = false;\n                        s.slides.eq(s.activeIndex).transitionEnd(function () {\n                            if (eventTriggered) return;\n                            if (!s) return;\n                            if (!$(this).hasClass(s.params.slideActiveClass)) return;\n                            eventTriggered = true;\n                            s.animating = false;\n                            var triggerEvents = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'];\n                            for (var i = 0; i < triggerEvents.length; i++) {\n                                s.wrapper.trigger(triggerEvents[i]);\n                            }\n                        });\n                    }\n                }\n            },\n            cube: {\n                setTranslate: function () {\n                    var wrapperRotate = 0, cubeShadow;\n                    if (s.params.cube.shadow) {\n                        if (s.isHorizontal()) {\n                            cubeShadow = s.wrapper.find('.swiper-cube-shadow');\n                            if (cubeShadow.length === 0) {\n                                cubeShadow = $('<div class=\"swiper-cube-shadow\"></div>');\n                                s.wrapper.append(cubeShadow);\n                            }\n                            cubeShadow.css({height: s.width + 'px'});\n                        }\n                        else {\n                            cubeShadow = s.container.find('.swiper-cube-shadow');\n                            if (cubeShadow.length === 0) {\n                                cubeShadow = $('<div class=\"swiper-cube-shadow\"></div>');\n                                s.container.append(cubeShadow);\n                            }\n                        }\n                    }\n                    for (var i = 0; i < s.slides.length; i++) {\n                        var slide = s.slides.eq(i);\n                        var slideAngle = i * 90;\n                        var round = Math.floor(slideAngle / 360);\n                        if (s.rtl) {\n                            slideAngle = -slideAngle;\n                            round = Math.floor(-slideAngle / 360);\n                        }\n                        var progress = Math.max(Math.min(slide[0].progress, 1), -1);\n                        var tx = 0, ty = 0, tz = 0;\n                        if (i % 4 === 0) {\n                            tx = - round * 4 * s.size;\n                            tz = 0;\n                        }\n                        else if ((i - 1) % 4 === 0) {\n                            tx = 0;\n                            tz = - round * 4 * s.size;\n                        }\n                        else if ((i - 2) % 4 === 0) {\n                            tx = s.size + round * 4 * s.size;\n                            tz = s.size;\n                        }\n                        else if ((i - 3) % 4 === 0) {\n                            tx = - s.size;\n                            tz = 3 * s.size + s.size * 4 * round;\n                        }\n                        if (s.rtl) {\n                            tx = -tx;\n                        }\n        \n                        if (!s.isHorizontal()) {\n                            ty = tx;\n                            tx = 0;\n                        }\n        \n                        var transform = 'rotateX(' + (s.isHorizontal() ? 0 : -slideAngle) + 'deg) rotateY(' + (s.isHorizontal() ? slideAngle : 0) + 'deg) translate3d(' + tx + 'px, ' + ty + 'px, ' + tz + 'px)';\n                        if (progress <= 1 && progress > -1) {\n                            wrapperRotate = i * 90 + progress * 90;\n                            if (s.rtl) wrapperRotate = -i * 90 - progress * 90;\n                        }\n                        slide.transform(transform);\n                        if (s.params.cube.slideShadows) {\n                            //Set shadows\n                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n                            if (shadowBefore.length === 0) {\n                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '\"></div>');\n                                slide.append(shadowBefore);\n                            }\n                            if (shadowAfter.length === 0) {\n                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '\"></div>');\n                                slide.append(shadowAfter);\n                            }\n                            if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n                            if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n                        }\n                    }\n                    s.wrapper.css({\n                        '-webkit-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n                        '-moz-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n                        '-ms-transform-origin': '50% 50% -' + (s.size / 2) + 'px',\n                        'transform-origin': '50% 50% -' + (s.size / 2) + 'px'\n                    });\n        \n                    if (s.params.cube.shadow) {\n                        if (s.isHorizontal()) {\n                            cubeShadow.transform('translate3d(0px, ' + (s.width / 2 + s.params.cube.shadowOffset) + 'px, ' + (-s.width / 2) + 'px) rotateX(90deg) rotateZ(0deg) scale(' + (s.params.cube.shadowScale) + ')');\n                        }\n                        else {\n                            var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n                            var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n                            var scale1 = s.params.cube.shadowScale,\n                                scale2 = s.params.cube.shadowScale / multiplier,\n                                offset = s.params.cube.shadowOffset;\n                            cubeShadow.transform('scale3d(' + scale1 + ', 1, ' + scale2 + ') translate3d(0px, ' + (s.height / 2 + offset) + 'px, ' + (-s.height / 2 / scale2) + 'px) rotateX(-90deg)');\n                        }\n                    }\n                    var zFactor = (s.isSafari || s.isUiWebView) ? (-s.size / 2) : 0;\n                    s.wrapper.transform('translate3d(0px,0,' + zFactor + 'px) rotateX(' + (s.isHorizontal() ? 0 : wrapperRotate) + 'deg) rotateY(' + (s.isHorizontal() ? -wrapperRotate : 0) + 'deg)');\n                },\n                setTransition: function (duration) {\n                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n                    if (s.params.cube.shadow && !s.isHorizontal()) {\n                        s.container.find('.swiper-cube-shadow').transition(duration);\n                    }\n                }\n            },\n            coverflow: {\n                setTranslate: function () {\n                    var transform = s.translate;\n                    var center = s.isHorizontal() ? -transform + s.width / 2 : -transform + s.height / 2;\n                    var rotate = s.isHorizontal() ? s.params.coverflow.rotate: -s.params.coverflow.rotate;\n                    var translate = s.params.coverflow.depth;\n                    //Each slide offset from center\n                    for (var i = 0, length = s.slides.length; i < length; i++) {\n                        var slide = s.slides.eq(i);\n                        var slideSize = s.slidesSizesGrid[i];\n                        var slideOffset = slide[0].swiperSlideOffset;\n                        var offsetMultiplier = (center - slideOffset - slideSize / 2) / slideSize * s.params.coverflow.modifier;\n        \n                        var rotateY = s.isHorizontal() ? rotate * offsetMultiplier : 0;\n                        var rotateX = s.isHorizontal() ? 0 : rotate * offsetMultiplier;\n                        // var rotateZ = 0\n                        var translateZ = -translate * Math.abs(offsetMultiplier);\n        \n                        var translateY = s.isHorizontal() ? 0 : s.params.coverflow.stretch * (offsetMultiplier);\n                        var translateX = s.isHorizontal() ? s.params.coverflow.stretch * (offsetMultiplier) : 0;\n        \n                        //Fix for ultra small values\n                        if (Math.abs(translateX) < 0.001) translateX = 0;\n                        if (Math.abs(translateY) < 0.001) translateY = 0;\n                        if (Math.abs(translateZ) < 0.001) translateZ = 0;\n                        if (Math.abs(rotateY) < 0.001) rotateY = 0;\n                        if (Math.abs(rotateX) < 0.001) rotateX = 0;\n        \n                        var slideTransform = 'translate3d(' + translateX + 'px,' + translateY + 'px,' + translateZ + 'px)  rotateX(' + rotateX + 'deg) rotateY(' + rotateY + 'deg)';\n        \n                        slide.transform(slideTransform);\n                        slide[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n                        if (s.params.coverflow.slideShadows) {\n                            //Set shadows\n                            var shadowBefore = s.isHorizontal() ? slide.find('.swiper-slide-shadow-left') : slide.find('.swiper-slide-shadow-top');\n                            var shadowAfter = s.isHorizontal() ? slide.find('.swiper-slide-shadow-right') : slide.find('.swiper-slide-shadow-bottom');\n                            if (shadowBefore.length === 0) {\n                                shadowBefore = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'left' : 'top') + '\"></div>');\n                                slide.append(shadowBefore);\n                            }\n                            if (shadowAfter.length === 0) {\n                                shadowAfter = $('<div class=\"swiper-slide-shadow-' + (s.isHorizontal() ? 'right' : 'bottom') + '\"></div>');\n                                slide.append(shadowAfter);\n                            }\n                            if (shadowBefore.length) shadowBefore[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n                            if (shadowAfter.length) shadowAfter[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n                        }\n                    }\n        \n                    //Set correct perspective for IE10\n                    if (s.browser.ie) {\n                        var ws = s.wrapper[0].style;\n                        ws.perspectiveOrigin = center + 'px 50%';\n                    }\n                },\n                setTransition: function (duration) {\n                    s.slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n                }\n            }\n        };\n\n        /*=========================\n          Images Lazy Loading\n          ===========================*/\n        s.lazy = {\n            initialImageLoaded: false,\n            loadImageInSlide: function (index, loadInDuplicate) {\n                if (typeof index === 'undefined') return;\n                if (typeof loadInDuplicate === 'undefined') loadInDuplicate = true;\n                if (s.slides.length === 0) return;\n        \n                var slide = s.slides.eq(index);\n                var img = slide.find('.' + s.params.lazyLoadingClass + ':not(.' + s.params.lazyStatusLoadedClass + '):not(.' + s.params.lazyStatusLoadingClass + ')');\n                if (slide.hasClass(s.params.lazyLoadingClass) && !slide.hasClass(s.params.lazyStatusLoadedClass) && !slide.hasClass(s.params.lazyStatusLoadingClass)) {\n                    img = img.add(slide[0]);\n                }\n                if (img.length === 0) return;\n        \n                img.each(function () {\n                    var _img = $(this);\n                    _img.addClass(s.params.lazyStatusLoadingClass);\n                    var background = _img.attr('data-background');\n                    var src = _img.attr('data-src'),\n                        srcset = _img.attr('data-srcset'),\n                        sizes = _img.attr('data-sizes');\n                    s.loadImage(_img[0], (src || background), srcset, sizes, false, function () {\n                        if (background) {\n                            _img.css('background-image', 'url(\"' + background + '\")');\n                            _img.removeAttr('data-background');\n                        }\n                        else {\n                            if (srcset) {\n                                _img.attr('srcset', srcset);\n                                _img.removeAttr('data-srcset');\n                            }\n                            if (sizes) {\n                                _img.attr('sizes', sizes);\n                                _img.removeAttr('data-sizes');\n                            }\n                            if (src) {\n                                _img.attr('src', src);\n                                _img.removeAttr('data-src');\n                            }\n        \n                        }\n        \n                        _img.addClass(s.params.lazyStatusLoadedClass).removeClass(s.params.lazyStatusLoadingClass);\n                        slide.find('.' + s.params.lazyPreloaderClass + ', .' + s.params.preloaderClass).remove();\n                        if (s.params.loop && loadInDuplicate) {\n                            var slideOriginalIndex = slide.attr('data-swiper-slide-index');\n                            if (slide.hasClass(s.params.slideDuplicateClass)) {\n                                var originalSlide = s.wrapper.children('[data-swiper-slide-index=\"' + slideOriginalIndex + '\"]:not(.' + s.params.slideDuplicateClass + ')');\n                                s.lazy.loadImageInSlide(originalSlide.index(), false);\n                            }\n                            else {\n                                var duplicatedSlide = s.wrapper.children('.' + s.params.slideDuplicateClass + '[data-swiper-slide-index=\"' + slideOriginalIndex + '\"]');\n                                s.lazy.loadImageInSlide(duplicatedSlide.index(), false);\n                            }\n                        }\n                        s.emit('onLazyImageReady', s, slide[0], _img[0]);\n                    });\n        \n                    s.emit('onLazyImageLoad', s, slide[0], _img[0]);\n                });\n        \n            },\n            load: function () {\n                var i;\n                var slidesPerView = s.params.slidesPerView;\n                if (slidesPerView === 'auto') {\n                    slidesPerView = 0;\n                }\n                if (!s.lazy.initialImageLoaded) s.lazy.initialImageLoaded = true;\n                if (s.params.watchSlidesVisibility) {\n                    s.wrapper.children('.' + s.params.slideVisibleClass).each(function () {\n                        s.lazy.loadImageInSlide($(this).index());\n                    });\n                }\n                else {\n                    if (slidesPerView > 1) {\n                        for (i = s.activeIndex; i < s.activeIndex + slidesPerView ; i++) {\n                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n                        }\n                    }\n                    else {\n                        s.lazy.loadImageInSlide(s.activeIndex);\n                    }\n                }\n                if (s.params.lazyLoadingInPrevNext) {\n                    if (slidesPerView > 1 || (s.params.lazyLoadingInPrevNextAmount && s.params.lazyLoadingInPrevNextAmount > 1)) {\n                        var amount = s.params.lazyLoadingInPrevNextAmount;\n                        var spv = slidesPerView;\n                        var maxIndex = Math.min(s.activeIndex + spv + Math.max(amount, spv), s.slides.length);\n                        var minIndex = Math.max(s.activeIndex - Math.max(spv, amount), 0);\n                        // Next Slides\n                        for (i = s.activeIndex + slidesPerView; i < maxIndex; i++) {\n                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n                        }\n                        // Prev Slides\n                        for (i = minIndex; i < s.activeIndex ; i++) {\n                            if (s.slides[i]) s.lazy.loadImageInSlide(i);\n                        }\n                    }\n                    else {\n                        var nextSlide = s.wrapper.children('.' + s.params.slideNextClass);\n                        if (nextSlide.length > 0) s.lazy.loadImageInSlide(nextSlide.index());\n        \n                        var prevSlide = s.wrapper.children('.' + s.params.slidePrevClass);\n                        if (prevSlide.length > 0) s.lazy.loadImageInSlide(prevSlide.index());\n                    }\n                }\n            },\n            onTransitionStart: function () {\n                if (s.params.lazyLoading) {\n                    if (s.params.lazyLoadingOnTransitionStart || (!s.params.lazyLoadingOnTransitionStart && !s.lazy.initialImageLoaded)) {\n                        s.lazy.load();\n                    }\n                }\n            },\n            onTransitionEnd: function () {\n                if (s.params.lazyLoading && !s.params.lazyLoadingOnTransitionStart) {\n                    s.lazy.load();\n                }\n            }\n        };\n        \n\n        /*=========================\n          Scrollbar\n          ===========================*/\n        s.scrollbar = {\n            isTouched: false,\n            setDragPosition: function (e) {\n                var sb = s.scrollbar;\n                var x = 0, y = 0;\n                var translate;\n                var pointerPosition = s.isHorizontal() ?\n                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX) :\n                    ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY) ;\n                var position = (pointerPosition) - sb.track.offset()[s.isHorizontal() ? 'left' : 'top'] - sb.dragSize / 2;\n                var positionMin = -s.minTranslate() * sb.moveDivider;\n                var positionMax = -s.maxTranslate() * sb.moveDivider;\n                if (position < positionMin) {\n                    position = positionMin;\n                }\n                else if (position > positionMax) {\n                    position = positionMax;\n                }\n                position = -position / sb.moveDivider;\n                s.updateProgress(position);\n                s.setWrapperTranslate(position, true);\n            },\n            dragStart: function (e) {\n                var sb = s.scrollbar;\n                sb.isTouched = true;\n                e.preventDefault();\n                e.stopPropagation();\n        \n                sb.setDragPosition(e);\n                clearTimeout(sb.dragTimeout);\n        \n                sb.track.transition(0);\n                if (s.params.scrollbarHide) {\n                    sb.track.css('opacity', 1);\n                }\n                s.wrapper.transition(100);\n                sb.drag.transition(100);\n                s.emit('onScrollbarDragStart', s);\n            },\n            dragMove: function (e) {\n                var sb = s.scrollbar;\n                if (!sb.isTouched) return;\n                if (e.preventDefault) e.preventDefault();\n                else e.returnValue = false;\n                sb.setDragPosition(e);\n                s.wrapper.transition(0);\n                sb.track.transition(0);\n                sb.drag.transition(0);\n                s.emit('onScrollbarDragMove', s);\n            },\n            dragEnd: function (e) {\n                var sb = s.scrollbar;\n                if (!sb.isTouched) return;\n                sb.isTouched = false;\n                if (s.params.scrollbarHide) {\n                    clearTimeout(sb.dragTimeout);\n                    sb.dragTimeout = setTimeout(function () {\n                        sb.track.css('opacity', 0);\n                        sb.track.transition(400);\n                    }, 1000);\n        \n                }\n                s.emit('onScrollbarDragEnd', s);\n                if (s.params.scrollbarSnapOnRelease) {\n                    s.slideReset();\n                }\n            },\n            draggableEvents: (function () {\n                if ((s.params.simulateTouch === false && !s.support.touch)) return s.touchEventsDesktop;\n                else return s.touchEvents;\n            })(),\n            enableDraggable: function () {\n                var sb = s.scrollbar;\n                var target = s.support.touch ? sb.track : document;\n                $(sb.track).on(sb.draggableEvents.start, sb.dragStart);\n                $(target).on(sb.draggableEvents.move, sb.dragMove);\n                $(target).on(sb.draggableEvents.end, sb.dragEnd);\n            },\n            disableDraggable: function () {\n                var sb = s.scrollbar;\n                var target = s.support.touch ? sb.track : document;\n                $(sb.track).off(s.draggableEvents.start, sb.dragStart);\n                $(target).off(s.draggableEvents.move, sb.dragMove);\n                $(target).off(s.draggableEvents.end, sb.dragEnd);\n            },\n            set: function () {\n                if (!s.params.scrollbar) return;\n                var sb = s.scrollbar;\n                sb.track = $(s.params.scrollbar);\n                if (s.params.uniqueNavElements && typeof s.params.scrollbar === 'string' && sb.track.length > 1 && s.container.find(s.params.scrollbar).length === 1) {\n                    sb.track = s.container.find(s.params.scrollbar);\n                }\n                sb.drag = sb.track.find('.swiper-scrollbar-drag');\n                if (sb.drag.length === 0) {\n                    sb.drag = $('<div class=\"swiper-scrollbar-drag\"></div>');\n                    sb.track.append(sb.drag);\n                }\n                sb.drag[0].style.width = '';\n                sb.drag[0].style.height = '';\n                sb.trackSize = s.isHorizontal() ? sb.track[0].offsetWidth : sb.track[0].offsetHeight;\n        \n                sb.divider = s.size / s.virtualSize;\n                sb.moveDivider = sb.divider * (sb.trackSize / s.size);\n                sb.dragSize = sb.trackSize * sb.divider;\n        \n                if (s.isHorizontal()) {\n                    sb.drag[0].style.width = sb.dragSize + 'px';\n                }\n                else {\n                    sb.drag[0].style.height = sb.dragSize + 'px';\n                }\n        \n                if (sb.divider >= 1) {\n                    sb.track[0].style.display = 'none';\n                }\n                else {\n                    sb.track[0].style.display = '';\n                }\n                if (s.params.scrollbarHide) {\n                    sb.track[0].style.opacity = 0;\n                }\n            },\n            setTranslate: function () {\n                if (!s.params.scrollbar) return;\n                var diff;\n                var sb = s.scrollbar;\n                var translate = s.translate || 0;\n                var newPos;\n        \n                var newSize = sb.dragSize;\n                newPos = (sb.trackSize - sb.dragSize) * s.progress;\n                if (s.rtl && s.isHorizontal()) {\n                    newPos = -newPos;\n                    if (newPos > 0) {\n                        newSize = sb.dragSize - newPos;\n                        newPos = 0;\n                    }\n                    else if (-newPos + sb.dragSize > sb.trackSize) {\n                        newSize = sb.trackSize + newPos;\n                    }\n                }\n                else {\n                    if (newPos < 0) {\n                        newSize = sb.dragSize + newPos;\n                        newPos = 0;\n                    }\n                    else if (newPos + sb.dragSize > sb.trackSize) {\n                        newSize = sb.trackSize - newPos;\n                    }\n                }\n                if (s.isHorizontal()) {\n                    if (s.support.transforms3d) {\n                        sb.drag.transform('translate3d(' + (newPos) + 'px, 0, 0)');\n                    }\n                    else {\n                        sb.drag.transform('translateX(' + (newPos) + 'px)');\n                    }\n                    sb.drag[0].style.width = newSize + 'px';\n                }\n                else {\n                    if (s.support.transforms3d) {\n                        sb.drag.transform('translate3d(0px, ' + (newPos) + 'px, 0)');\n                    }\n                    else {\n                        sb.drag.transform('translateY(' + (newPos) + 'px)');\n                    }\n                    sb.drag[0].style.height = newSize + 'px';\n                }\n                if (s.params.scrollbarHide) {\n                    clearTimeout(sb.timeout);\n                    sb.track[0].style.opacity = 1;\n                    sb.timeout = setTimeout(function () {\n                        sb.track[0].style.opacity = 0;\n                        sb.track.transition(400);\n                    }, 1000);\n                }\n            },\n            setTransition: function (duration) {\n                if (!s.params.scrollbar) return;\n                s.scrollbar.drag.transition(duration);\n            }\n        };\n\n        /*=========================\n          Controller\n          ===========================*/\n        s.controller = {\n            LinearSpline: function (x, y) {\n                this.x = x;\n                this.y = y;\n                this.lastIndex = x.length - 1;\n                // Given an x value (x2), return the expected y2 value:\n                // (x1,y1) is the known point before given value,\n                // (x3,y3) is the known point after given value.\n                var i1, i3;\n                var l = this.x.length;\n        \n                this.interpolate = function (x2) {\n                    if (!x2) return 0;\n        \n                    // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n                    i3 = binarySearch(this.x, x2);\n                    i1 = i3 - 1;\n        \n                    // We have our indexes i1 & i3, so we can calculate already:\n                    // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n                    return ((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1]) + this.y[i1];\n                };\n        \n                var binarySearch = (function() {\n                    var maxIndex, minIndex, guess;\n                    return function(array, val) {\n                        minIndex = -1;\n                        maxIndex = array.length;\n                        while (maxIndex - minIndex > 1)\n                            if (array[guess = maxIndex + minIndex >> 1] <= val) {\n                                minIndex = guess;\n                            } else {\n                                maxIndex = guess;\n                            }\n                        return maxIndex;\n                    };\n                })();\n            },\n            //xxx: for now i will just save one spline function to to\n            getInterpolateFunction: function(c){\n                if(!s.controller.spline) s.controller.spline = s.params.loop ?\n                    new s.controller.LinearSpline(s.slidesGrid, c.slidesGrid) :\n                    new s.controller.LinearSpline(s.snapGrid, c.snapGrid);\n            },\n            setTranslate: function (translate, byController) {\n               var controlled = s.params.control;\n               var multiplier, controlledTranslate;\n               function setControlledTranslate(c) {\n                    // this will create an Interpolate function based on the snapGrids\n                    // x is the Grid of the scrolled scroller and y will be the controlled scroller\n                    // it makes sense to create this only once and recall it for the interpolation\n                    // the function does a lot of value caching for performance\n                    translate = c.rtl && c.params.direction === 'horizontal' ? -s.translate : s.translate;\n                    if (s.params.controlBy === 'slide') {\n                        s.controller.getInterpolateFunction(c);\n                        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n                        // but it did not work out\n                        controlledTranslate = -s.controller.spline.interpolate(-translate);\n                    }\n        \n                    if(!controlledTranslate || s.params.controlBy === 'container'){\n                        multiplier = (c.maxTranslate() - c.minTranslate()) / (s.maxTranslate() - s.minTranslate());\n                        controlledTranslate = (translate - s.minTranslate()) * multiplier + c.minTranslate();\n                    }\n        \n                    if (s.params.controlInverse) {\n                        controlledTranslate = c.maxTranslate() - controlledTranslate;\n                    }\n                    c.updateProgress(controlledTranslate);\n                    c.setWrapperTranslate(controlledTranslate, false, s);\n                    c.updateActiveIndex();\n               }\n               if (s.isArray(controlled)) {\n                   for (var i = 0; i < controlled.length; i++) {\n                       if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n                           setControlledTranslate(controlled[i]);\n                       }\n                   }\n               }\n               else if (controlled instanceof Swiper && byController !== controlled) {\n        \n                   setControlledTranslate(controlled);\n               }\n            },\n            setTransition: function (duration, byController) {\n                var controlled = s.params.control;\n                var i;\n                function setControlledTransition(c) {\n                    c.setWrapperTransition(duration, s);\n                    if (duration !== 0) {\n                        c.onTransitionStart();\n                        c.wrapper.transitionEnd(function(){\n                            if (!controlled) return;\n                            if (c.params.loop && s.params.controlBy === 'slide') {\n                                c.fixLoop();\n                            }\n                            c.onTransitionEnd();\n        \n                        });\n                    }\n                }\n                if (s.isArray(controlled)) {\n                    for (i = 0; i < controlled.length; i++) {\n                        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n                            setControlledTransition(controlled[i]);\n                        }\n                    }\n                }\n                else if (controlled instanceof Swiper && byController !== controlled) {\n                    setControlledTransition(controlled);\n                }\n            }\n        };\n\n        /*=========================\n          Hash Navigation\n          ===========================*/\n        s.hashnav = {\n            onHashCange: function (e, a) {\n                var newHash = document.location.hash.replace('#', '');\n                var activeSlideHash = s.slides.eq(s.activeIndex).attr('data-hash');\n                if (newHash !== activeSlideHash) {\n                    s.slideTo(s.wrapper.children('.' + s.params.slideClass + '[data-hash=\"' + (newHash) + '\"]').index());\n                }\n            },\n            attachEvents: function (detach) {\n                var action = detach ? 'off' : 'on';\n                $(window)[action]('hashchange', s.hashnav.onHashCange);\n            },\n            setHash: function () {\n                if (!s.hashnav.initialized || !s.params.hashnav) return;\n                if (s.params.replaceState && window.history && window.history.replaceState) {\n                    window.history.replaceState(null, null, ('#' + s.slides.eq(s.activeIndex).attr('data-hash') || ''));\n                } else {\n                    var slide = s.slides.eq(s.activeIndex);\n                    var hash = slide.attr('data-hash') || slide.attr('data-history');\n                    document.location.hash = hash || '';\n                }\n            },\n            init: function () {\n                if (!s.params.hashnav || s.params.history) return;\n                s.hashnav.initialized = true;\n                var hash = document.location.hash.replace('#', '');\n                if (!hash) return;\n                var speed = 0;\n                for (var i = 0, length = s.slides.length; i < length; i++) {\n                    var slide = s.slides.eq(i);\n                    var slideHash = slide.attr('data-hash') || slide.attr('data-history');\n                    if (slideHash === hash && !slide.hasClass(s.params.slideDuplicateClass)) {\n                        var index = slide.index();\n                        s.slideTo(index, speed, s.params.runCallbacksOnInit, true);\n                    }\n                }\n                if (s.params.hashnavWatchState) s.hashnav.attachEvents();\n            },\n            destroy: function () {\n                if (s.params.hashnavWatchState) s.hashnav.attachEvents(true);\n            }\n        };\n\n        /*=========================\n          History Api with fallback to Hashnav\n          ===========================*/\n        s.history = {\n            init: function () {\n                if (!s.params.history) return;\n                if (!window.history || !window.history.pushState) {\n                    s.params.history = false;\n                    s.params.hashnav = true;\n                    return;\n                }\n                s.history.initialized = true;\n                this.paths = this.getPathValues();\n                if (!this.paths.key && !this.paths.value) return;\n                this.scrollToSlide(0, this.paths.value, s.params.runCallbacksOnInit);\n                if (!s.params.replaceState) {\n                    window.addEventListener('popstate', this.setHistoryPopState);\n                }\n            },\n            setHistoryPopState: function() {\n                s.history.paths = s.history.getPathValues();\n                s.history.scrollToSlide(s.params.speed, s.history.paths.value, false);\n            },\n            getPathValues: function() {\n                var pathArray = window.location.pathname.slice(1).split('/');\n                var total = pathArray.length;\n                var key = pathArray[total - 2];\n                var value = pathArray[total - 1];\n                return { key: key, value: value };\n            },\n            setHistory: function (key, index) {\n                if (!s.history.initialized || !s.params.history) return;\n                var slide = s.slides.eq(index);\n                var value = this.slugify(slide.attr('data-history'));\n                if (!window.location.pathname.includes(key)) {\n                    value = key + '/' + value;\n                }\n                if (s.params.replaceState) {\n                    window.history.replaceState(null, null, value);\n                } else {\n                    window.history.pushState(null, null, value);\n                }\n            },\n            slugify: function(text) {\n                return text.toString().toLowerCase()\n                    .replace(/\\s+/g, '-')\n                    .replace(/[^\\w\\-]+/g, '')\n                    .replace(/\\-\\-+/g, '-')\n                    .replace(/^-+/, '')\n                    .replace(/-+$/, '');\n            },\n            scrollToSlide: function(speed, value, runCallbacks) {\n                if (value) {\n                    for (var i = 0, length = s.slides.length; i < length; i++) {\n                        var slide = s.slides.eq(i);\n                        var slideHistory = this.slugify(slide.attr('data-history'));\n                        if (slideHistory === value && !slide.hasClass(s.params.slideDuplicateClass)) {\n                            var index = slide.index();\n                            s.slideTo(index, speed, runCallbacks);\n                        }\n                    }\n                } else {\n                    s.slideTo(0, speed, runCallbacks);\n                }\n            }\n        };\n\n        /*=========================\n          Keyboard Control\n          ===========================*/\n        function handleKeyboard(e) {\n            if (e.originalEvent) e = e.originalEvent; //jquery fix\n            var kc = e.keyCode || e.charCode;\n            // Directions locks\n            if (!s.params.allowSwipeToNext && (s.isHorizontal() && kc === 39 || !s.isHorizontal() && kc === 40)) {\n                return false;\n            }\n            if (!s.params.allowSwipeToPrev && (s.isHorizontal() && kc === 37 || !s.isHorizontal() && kc === 38)) {\n                return false;\n            }\n            if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n                return;\n            }\n            if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n                return;\n            }\n            if (kc === 37 || kc === 39 || kc === 38 || kc === 40) {\n                var inView = false;\n                //Check that swiper should be inside of visible area of window\n                if (s.container.parents('.' + s.params.slideClass).length > 0 && s.container.parents('.' + s.params.slideActiveClass).length === 0) {\n                    return;\n                }\n                var windowScroll = {\n                    left: window.pageXOffset,\n                    top: window.pageYOffset\n                };\n                var windowWidth = window.innerWidth;\n                var windowHeight = window.innerHeight;\n                var swiperOffset = s.container.offset();\n                if (s.rtl) swiperOffset.left = swiperOffset.left - s.container[0].scrollLeft;\n                var swiperCoord = [\n                    [swiperOffset.left, swiperOffset.top],\n                    [swiperOffset.left + s.width, swiperOffset.top],\n                    [swiperOffset.left, swiperOffset.top + s.height],\n                    [swiperOffset.left + s.width, swiperOffset.top + s.height]\n                ];\n                for (var i = 0; i < swiperCoord.length; i++) {\n                    var point = swiperCoord[i];\n                    if (\n                        point[0] >= windowScroll.left && point[0] <= windowScroll.left + windowWidth &&\n                        point[1] >= windowScroll.top && point[1] <= windowScroll.top + windowHeight\n                    ) {\n                        inView = true;\n                    }\n        \n                }\n                if (!inView) return;\n            }\n            if (s.isHorizontal()) {\n                if (kc === 37 || kc === 39) {\n                    if (e.preventDefault) e.preventDefault();\n                    else e.returnValue = false;\n                }\n                if ((kc === 39 && !s.rtl) || (kc === 37 && s.rtl)) s.slideNext();\n                if ((kc === 37 && !s.rtl) || (kc === 39 && s.rtl)) s.slidePrev();\n            }\n            else {\n                if (kc === 38 || kc === 40) {\n                    if (e.preventDefault) e.preventDefault();\n                    else e.returnValue = false;\n                }\n                if (kc === 40) s.slideNext();\n                if (kc === 38) s.slidePrev();\n            }\n        }\n        s.disableKeyboardControl = function () {\n            s.params.keyboardControl = false;\n            $(document).off('keydown', handleKeyboard);\n        };\n        s.enableKeyboardControl = function () {\n            s.params.keyboardControl = true;\n            $(document).on('keydown', handleKeyboard);\n        };\n        \n\n        /*=========================\n          Mousewheel Control\n          ===========================*/\n        s.mousewheel = {\n            event: false,\n            lastScrollTime: (new window.Date()).getTime()\n        };\n        if (s.params.mousewheelControl) {\n            /**\n             * The best combination if you prefer spinX + spinY normalization.  It favors\n             * the older DOMMouseScroll for Firefox, as FF does not include wheelDelta with\n             * 'wheel' event, making spin speed determination impossible.\n             */\n            s.mousewheel.event = (navigator.userAgent.indexOf('firefox') > -1) ?\n                'DOMMouseScroll' :\n                isEventSupported() ?\n                    'wheel' : 'mousewheel';\n        }\n        \n        function isEventSupported() {\n            var eventName = 'onwheel';\n            var isSupported = eventName in document;\n        \n            if (!isSupported) {\n                var element = document.createElement('div');\n                element.setAttribute(eventName, 'return;');\n                isSupported = typeof element[eventName] === 'function';\n            }\n        \n            if (!isSupported &&\n                document.implementation &&\n                document.implementation.hasFeature &&\n                    // always returns true in newer browsers as per the standard.\n                    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n                document.implementation.hasFeature('', '') !== true ) {\n                // This is the only way to test support for the `wheel` event in IE9+.\n                isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n            }\n        \n            return isSupported;\n        }\n        \n        function handleMousewheel(e) {\n            if (e.originalEvent) e = e.originalEvent; //jquery fix\n            var delta = 0;\n            var rtlFactor = s.rtl ? -1 : 1;\n        \n            var data = normalizeWheel( e );\n        \n            if (s.params.mousewheelForceToAxis) {\n                if (s.isHorizontal()) {\n                    if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n                    else return;\n                }\n                else {\n                    if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n                    else return;\n                }\n            }\n            else {\n                delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? - data.pixelX * rtlFactor : - data.pixelY;\n            }\n        \n            if (delta === 0) return;\n        \n            if (s.params.mousewheelInvert) delta = -delta;\n        \n            if (!s.params.freeMode) {\n                if ((new window.Date()).getTime() - s.mousewheel.lastScrollTime > 60) {\n                    if (delta < 0) {\n                        if ((!s.isEnd || s.params.loop) && !s.animating) {\n                            s.slideNext();\n                            s.emit('onScroll', s, e);\n                        }\n                        else if (s.params.mousewheelReleaseOnEdges) return true;\n                    }\n                    else {\n                        if ((!s.isBeginning || s.params.loop) && !s.animating) {\n                            s.slidePrev();\n                            s.emit('onScroll', s, e);\n                        }\n                        else if (s.params.mousewheelReleaseOnEdges) return true;\n                    }\n                }\n                s.mousewheel.lastScrollTime = (new window.Date()).getTime();\n        \n            }\n            else {\n                //Freemode or scrollContainer:\n                var position = s.getWrapperTranslate() + delta * s.params.mousewheelSensitivity;\n                var wasBeginning = s.isBeginning,\n                    wasEnd = s.isEnd;\n        \n                if (position >= s.minTranslate()) position = s.minTranslate();\n                if (position <= s.maxTranslate()) position = s.maxTranslate();\n        \n                s.setWrapperTransition(0);\n                s.setWrapperTranslate(position);\n                s.updateProgress();\n                s.updateActiveIndex();\n        \n                if (!wasBeginning && s.isBeginning || !wasEnd && s.isEnd) {\n                    s.updateClasses();\n                }\n        \n                if (s.params.freeModeSticky) {\n                    clearTimeout(s.mousewheel.timeout);\n                    s.mousewheel.timeout = setTimeout(function () {\n                        s.slideReset();\n                    }, 300);\n                }\n                else {\n                    if (s.params.lazyLoading && s.lazy) {\n                        s.lazy.load();\n                    }\n                }\n                // Emit event\n                s.emit('onScroll', s, e);\n        \n                // Stop autoplay\n                if (s.params.autoplay && s.params.autoplayDisableOnInteraction) s.stopAutoplay();\n        \n                // Return page scroll on edge positions\n                if (position === 0 || position === s.maxTranslate()) return;\n            }\n        \n            if (e.preventDefault) e.preventDefault();\n            else e.returnValue = false;\n            return false;\n        }\n        s.disableMousewheelControl = function () {\n            if (!s.mousewheel.event) return false;\n            var target = s.container;\n            if (s.params.mousewheelEventsTarged !== 'container') {\n                target = $(s.params.mousewheelEventsTarged);\n            }\n            target.off(s.mousewheel.event, handleMousewheel);\n            return true;\n        };\n        \n        s.enableMousewheelControl = function () {\n            if (!s.mousewheel.event) return false;\n            var target = s.container;\n            if (s.params.mousewheelEventsTarged !== 'container') {\n                target = $(s.params.mousewheelEventsTarged);\n            }\n            target.on(s.mousewheel.event, handleMousewheel);\n            return true;\n        };\n        \n        /**\n         * Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n         * complicated, thus this doc is long and (hopefully) detailed enough to answer\n         * your questions.\n         *\n         * If you need to react to the mouse wheel in a predictable way, this code is\n         * like your bestest friend. * hugs *\n         *\n         * As of today, there are 4 DOM event types you can listen to:\n         *\n         *   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n         *   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n         *   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n         *   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n         *\n         * So what to do?  The is the best:\n         *\n         *   normalizeWheel.getEventType();\n         *\n         * In your event callback, use this code to get sane interpretation of the\n         * deltas.  This code will return an object with properties:\n         *\n         *   spinX   -- normalized spin speed (use for zoom) - x plane\n         *   spinY   -- \" - y plane\n         *   pixelX  -- normalized distance (to pixels) - x plane\n         *   pixelY  -- \" - y plane\n         *\n         * Wheel values are provided by the browser assuming you are using the wheel to\n         * scroll a web page by a number of lines or pixels (or pages).  Values can vary\n         * significantly on different platforms and browsers, forgetting that you can\n         * scroll at different speeds.  Some devices (like trackpads) emit more events\n         * at smaller increments with fine granularity, and some emit massive jumps with\n         * linear speed or acceleration.\n         *\n         * This code does its best to normalize the deltas for you:\n         *\n         *   - spin is trying to normalize how far the wheel was spun (or trackpad\n         *     dragged).  This is super useful for zoom support where you want to\n         *     throw away the chunky scroll steps on the PC and make those equal to\n         *     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n         *     resolve a single slow step on a wheel to 1.\n         *\n         *   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n         *     get the crazy differences between browsers, but at least it'll be in\n         *     pixels!\n         *\n         *   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n         *     should translate to positive value zooming IN, negative zooming OUT.\n         *     This matches the newer 'wheel' event.\n         *\n         * Why are there spinX, spinY (or pixels)?\n         *\n         *   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n         *     with a mouse.  It results in side-scrolling in the browser by default.\n         *\n         *   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n         *\n         *   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n         *     probably is by browsers in conjunction with fancy 3D controllers .. but\n         *     you know.\n         *\n         * Implementation info:\n         *\n         * Examples of 'wheel' event if you scroll slowly (down) by one step with an\n         * average mouse:\n         *\n         *   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n         *   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n         *   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n         *   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n         *   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n         *\n         * On the trackpad:\n         *\n         *   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n         *   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n         *\n         * On other/older browsers.. it's more complicated as there can be multiple and\n         * also missing delta values.\n         *\n         * The 'wheel' event is more standard:\n         *\n         * http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n         *\n         * The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n         * deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n         * backward compatibility with older events.  Those other values help us\n         * better normalize spin speed.  Example of what the browsers provide:\n         *\n         *                          | event.wheelDelta | event.detail\n         *        ------------------+------------------+--------------\n         *          Safari v5/OS X  |       -120       |       0\n         *          Safari v5/Win7  |       -120       |       0\n         *         Chrome v17/OS X  |       -120       |       0\n         *         Chrome v17/Win7  |       -120       |       0\n         *                IE9/Win7  |       -120       |   undefined\n         *         Firefox v4/OS X  |     undefined    |       1\n         *         Firefox v4/Win7  |     undefined    |       3\n         *\n         */\n        function normalizeWheel( /*object*/ event ) /*object*/ {\n            // Reasonable defaults\n            var PIXEL_STEP = 10;\n            var LINE_HEIGHT = 40;\n            var PAGE_HEIGHT = 800;\n        \n            var sX = 0, sY = 0,       // spinX, spinY\n                pX = 0, pY = 0;       // pixelX, pixelY\n        \n            // Legacy\n            if( 'detail' in event ) {\n                sY = event.detail;\n            }\n            if( 'wheelDelta' in event ) {\n                sY = -event.wheelDelta / 120;\n            }\n            if( 'wheelDeltaY' in event ) {\n                sY = -event.wheelDeltaY / 120;\n            }\n            if( 'wheelDeltaX' in event ) {\n                sX = -event.wheelDeltaX / 120;\n            }\n        \n            // side scrolling on FF with DOMMouseScroll\n            if( 'axis' in event && event.axis === event.HORIZONTAL_AXIS ) {\n                sX = sY;\n                sY = 0;\n            }\n        \n            pX = sX * PIXEL_STEP;\n            pY = sY * PIXEL_STEP;\n        \n            if( 'deltaY' in event ) {\n                pY = event.deltaY;\n            }\n            if( 'deltaX' in event ) {\n                pX = event.deltaX;\n            }\n        \n            if( (pX || pY) && event.deltaMode ) {\n                if( event.deltaMode === 1 ) {          // delta in LINE units\n                    pX *= LINE_HEIGHT;\n                    pY *= LINE_HEIGHT;\n                } else {                             // delta in PAGE units\n                    pX *= PAGE_HEIGHT;\n                    pY *= PAGE_HEIGHT;\n                }\n            }\n        \n            // Fall-back if spin cannot be determined\n            if( pX && !sX ) {\n                sX = (pX < 1) ? -1 : 1;\n            }\n            if( pY && !sY ) {\n                sY = (pY < 1) ? -1 : 1;\n            }\n        \n            return {\n                spinX: sX,\n                spinY: sY,\n                pixelX: pX,\n                pixelY: pY\n            };\n        }\n\n        /*=========================\n          Parallax\n          ===========================*/\n        function setParallaxTransform(el, progress) {\n            el = $(el);\n            var p, pX, pY;\n            var rtlFactor = s.rtl ? -1 : 1;\n        \n            p = el.attr('data-swiper-parallax') || '0';\n            pX = el.attr('data-swiper-parallax-x');\n            pY = el.attr('data-swiper-parallax-y');\n            if (pX || pY) {\n                pX = pX || '0';\n                pY = pY || '0';\n            }\n            else {\n                if (s.isHorizontal()) {\n                    pX = p;\n                    pY = '0';\n                }\n                else {\n                    pY = p;\n                    pX = '0';\n                }\n            }\n        \n            if ((pX).indexOf('%') >= 0) {\n                pX = parseInt(pX, 10) * progress * rtlFactor + '%';\n            }\n            else {\n                pX = pX * progress * rtlFactor + 'px' ;\n            }\n            if ((pY).indexOf('%') >= 0) {\n                pY = parseInt(pY, 10) * progress + '%';\n            }\n            else {\n                pY = pY * progress + 'px' ;\n            }\n        \n            el.transform('translate3d(' + pX + ', ' + pY + ',0px)');\n        }\n        s.parallax = {\n            setTranslate: function () {\n                s.container.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){\n                    setParallaxTransform(this, s.progress);\n        \n                });\n                s.slides.each(function () {\n                    var slide = $(this);\n                    slide.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function () {\n                        var progress = Math.min(Math.max(slide[0].progress, -1), 1);\n                        setParallaxTransform(this, progress);\n                    });\n                });\n            },\n            setTransition: function (duration) {\n                if (typeof duration === 'undefined') duration = s.params.speed;\n                s.container.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]').each(function(){\n                    var el = $(this);\n                    var parallaxDuration = parseInt(el.attr('data-swiper-parallax-duration'), 10) || duration;\n                    if (duration === 0) parallaxDuration = 0;\n                    el.transition(parallaxDuration);\n                });\n            }\n        };\n        \n\n        /*=========================\n          Zoom\n          ===========================*/\n        s.zoom = {\n            // \"Global\" Props\n            scale: 1,\n            currentScale: 1,\n            isScaling: false,\n            gesture: {\n                slide: undefined,\n                slideWidth: undefined,\n                slideHeight: undefined,\n                image: undefined,\n                imageWrap: undefined,\n                zoomMax: s.params.zoomMax\n            },\n            image: {\n                isTouched: undefined,\n                isMoved: undefined,\n                currentX: undefined,\n                currentY: undefined,\n                minX: undefined,\n                minY: undefined,\n                maxX: undefined,\n                maxY: undefined,\n                width: undefined,\n                height: undefined,\n                startX: undefined,\n                startY: undefined,\n                touchesStart: {},\n                touchesCurrent: {}\n            },\n            velocity: {\n                x: undefined,\n                y: undefined,\n                prevPositionX: undefined,\n                prevPositionY: undefined,\n                prevTime: undefined\n            },\n            // Calc Scale From Multi-touches\n            getDistanceBetweenTouches: function (e) {\n                if (e.targetTouches.length < 2) return 1;\n                var x1 = e.targetTouches[0].pageX,\n                    y1 = e.targetTouches[0].pageY,\n                    x2 = e.targetTouches[1].pageX,\n                    y2 = e.targetTouches[1].pageY;\n                var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n                return distance;\n            },\n            // Events\n            onGestureStart: function (e) {\n                var z = s.zoom;\n                if (!s.support.gestures) {\n                    if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\n                        return;\n                    }\n                    z.gesture.scaleStart = z.getDistanceBetweenTouches(e);\n                }\n                if (!z.gesture.slide || !z.gesture.slide.length) {\n                    z.gesture.slide = $(this);\n                    if (z.gesture.slide.length === 0) z.gesture.slide = s.slides.eq(s.activeIndex);\n                    z.gesture.image = z.gesture.slide.find('img, svg, canvas');\n                    z.gesture.imageWrap = z.gesture.image.parent('.' + s.params.zoomContainerClass);\n                    z.gesture.zoomMax = z.gesture.imageWrap.attr('data-swiper-zoom') || s.params.zoomMax ;\n                    if (z.gesture.imageWrap.length === 0) {\n                        z.gesture.image = undefined;\n                        return;\n                    }\n                }\n                z.gesture.image.transition(0);\n                z.isScaling = true;\n            },\n            onGestureChange: function (e) {\n                var z = s.zoom;\n                if (!s.support.gestures) {\n                    if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\n                        return;\n                    }\n                    z.gesture.scaleMove = z.getDistanceBetweenTouches(e);\n                }\n                if (!z.gesture.image || z.gesture.image.length === 0) return;\n                if (s.support.gestures) {\n                    z.scale = e.scale * z.currentScale;\n                }\n                else {\n                    z.scale = (z.gesture.scaleMove / z.gesture.scaleStart) * z.currentScale;\n                }\n                if (z.scale > z.gesture.zoomMax) {\n                    z.scale = z.gesture.zoomMax - 1 + Math.pow((z.scale - z.gesture.zoomMax + 1), 0.5);\n                }\n                if (z.scale < s.params.zoomMin) {\n                    z.scale =  s.params.zoomMin + 1 - Math.pow((s.params.zoomMin - z.scale + 1), 0.5);\n                }\n                z.gesture.image.transform('translate3d(0,0,0) scale(' + z.scale + ')');\n            },\n            onGestureEnd: function (e) {\n                var z = s.zoom;\n                if (!s.support.gestures) {\n                    if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2) {\n                        return;\n                    }\n                }\n                if (!z.gesture.image || z.gesture.image.length === 0) return;\n                z.scale = Math.max(Math.min(z.scale, z.gesture.zoomMax), s.params.zoomMin);\n                z.gesture.image.transition(s.params.speed).transform('translate3d(0,0,0) scale(' + z.scale + ')');\n                z.currentScale = z.scale;\n                z.isScaling = false;\n                if (z.scale === 1) z.gesture.slide = undefined;\n            },\n            onTouchStart: function (s, e) {\n                var z = s.zoom;\n                if (!z.gesture.image || z.gesture.image.length === 0) return;\n                if (z.image.isTouched) return;\n                if (s.device.os === 'android') e.preventDefault();\n                z.image.isTouched = true;\n                z.image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n                z.image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n            },\n            onTouchMove: function (e) {\n                var z = s.zoom;\n                if (!z.gesture.image || z.gesture.image.length === 0) return;\n                s.allowClick = false;\n                if (!z.image.isTouched || !z.gesture.slide) return;\n        \n                if (!z.image.isMoved) {\n                    z.image.width = z.gesture.image[0].offsetWidth;\n                    z.image.height = z.gesture.image[0].offsetHeight;\n                    z.image.startX = s.getTranslate(z.gesture.imageWrap[0], 'x') || 0;\n                    z.image.startY = s.getTranslate(z.gesture.imageWrap[0], 'y') || 0;\n                    z.gesture.slideWidth = z.gesture.slide[0].offsetWidth;\n                    z.gesture.slideHeight = z.gesture.slide[0].offsetHeight;\n                    z.gesture.imageWrap.transition(0);\n                }\n                // Define if we need image drag\n                var scaledWidth = z.image.width * z.scale;\n                var scaledHeight = z.image.height * z.scale;\n        \n                if (scaledWidth < z.gesture.slideWidth && scaledHeight < z.gesture.slideHeight) return;\n        \n                z.image.minX = Math.min((z.gesture.slideWidth / 2 - scaledWidth / 2), 0);\n                z.image.maxX = -z.image.minX;\n                z.image.minY = Math.min((z.gesture.slideHeight / 2 - scaledHeight / 2), 0);\n                z.image.maxY = -z.image.minY;\n        \n                z.image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n                z.image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n        \n                if (!z.image.isMoved && !z.isScaling) {\n                    if (s.isHorizontal() &&\n                        (Math.floor(z.image.minX) === Math.floor(z.image.startX) && z.image.touchesCurrent.x < z.image.touchesStart.x) ||\n                        (Math.floor(z.image.maxX) === Math.floor(z.image.startX) && z.image.touchesCurrent.x > z.image.touchesStart.x)\n                        ) {\n                        z.image.isTouched = false;\n                        return;\n                    }\n                    else if (!s.isHorizontal() &&\n                        (Math.floor(z.image.minY) === Math.floor(z.image.startY) && z.image.touchesCurrent.y < z.image.touchesStart.y) ||\n                        (Math.floor(z.image.maxY) === Math.floor(z.image.startY) && z.image.touchesCurrent.y > z.image.touchesStart.y)\n                        ) {\n                        z.image.isTouched = false;\n                        return;\n                    }\n                }\n                e.preventDefault();\n                e.stopPropagation();\n        \n                z.image.isMoved = true;\n                z.image.currentX = z.image.touchesCurrent.x - z.image.touchesStart.x + z.image.startX;\n                z.image.currentY = z.image.touchesCurrent.y - z.image.touchesStart.y + z.image.startY;\n        \n                if (z.image.currentX < z.image.minX) {\n                    z.image.currentX =  z.image.minX + 1 - Math.pow((z.image.minX - z.image.currentX + 1), 0.8);\n                }\n                if (z.image.currentX > z.image.maxX) {\n                    z.image.currentX = z.image.maxX - 1 + Math.pow((z.image.currentX - z.image.maxX + 1), 0.8);\n                }\n        \n                if (z.image.currentY < z.image.minY) {\n                    z.image.currentY =  z.image.minY + 1 - Math.pow((z.image.minY - z.image.currentY + 1), 0.8);\n                }\n                if (z.image.currentY > z.image.maxY) {\n                    z.image.currentY = z.image.maxY - 1 + Math.pow((z.image.currentY - z.image.maxY + 1), 0.8);\n                }\n        \n                //Velocity\n                if (!z.velocity.prevPositionX) z.velocity.prevPositionX = z.image.touchesCurrent.x;\n                if (!z.velocity.prevPositionY) z.velocity.prevPositionY = z.image.touchesCurrent.y;\n                if (!z.velocity.prevTime) z.velocity.prevTime = Date.now();\n                z.velocity.x = (z.image.touchesCurrent.x - z.velocity.prevPositionX) / (Date.now() - z.velocity.prevTime) / 2;\n                z.velocity.y = (z.image.touchesCurrent.y - z.velocity.prevPositionY) / (Date.now() - z.velocity.prevTime) / 2;\n                if (Math.abs(z.image.touchesCurrent.x - z.velocity.prevPositionX) < 2) z.velocity.x = 0;\n                if (Math.abs(z.image.touchesCurrent.y - z.velocity.prevPositionY) < 2) z.velocity.y = 0;\n                z.velocity.prevPositionX = z.image.touchesCurrent.x;\n                z.velocity.prevPositionY = z.image.touchesCurrent.y;\n                z.velocity.prevTime = Date.now();\n        \n                z.gesture.imageWrap.transform('translate3d(' + z.image.currentX + 'px, ' + z.image.currentY + 'px,0)');\n            },\n            onTouchEnd: function (s, e) {\n                var z = s.zoom;\n                if (!z.gesture.image || z.gesture.image.length === 0) return;\n                if (!z.image.isTouched || !z.image.isMoved) {\n                    z.image.isTouched = false;\n                    z.image.isMoved = false;\n                    return;\n                }\n                z.image.isTouched = false;\n                z.image.isMoved = false;\n                var momentumDurationX = 300;\n                var momentumDurationY = 300;\n                var momentumDistanceX = z.velocity.x * momentumDurationX;\n                var newPositionX = z.image.currentX + momentumDistanceX;\n                var momentumDistanceY = z.velocity.y * momentumDurationY;\n                var newPositionY = z.image.currentY + momentumDistanceY;\n        \n                //Fix duration\n                if (z.velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - z.image.currentX) / z.velocity.x);\n                if (z.velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - z.image.currentY) / z.velocity.y);\n                var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n        \n                z.image.currentX = newPositionX;\n                z.image.currentY = newPositionY;\n        \n                // Define if we need image drag\n                var scaledWidth = z.image.width * z.scale;\n                var scaledHeight = z.image.height * z.scale;\n                z.image.minX = Math.min((z.gesture.slideWidth / 2 - scaledWidth / 2), 0);\n                z.image.maxX = -z.image.minX;\n                z.image.minY = Math.min((z.gesture.slideHeight / 2 - scaledHeight / 2), 0);\n                z.image.maxY = -z.image.minY;\n                z.image.currentX = Math.max(Math.min(z.image.currentX, z.image.maxX), z.image.minX);\n                z.image.currentY = Math.max(Math.min(z.image.currentY, z.image.maxY), z.image.minY);\n        \n                z.gesture.imageWrap.transition(momentumDuration).transform('translate3d(' + z.image.currentX + 'px, ' + z.image.currentY + 'px,0)');\n            },\n            onTransitionEnd: function (s) {\n                var z = s.zoom;\n                if (z.gesture.slide && s.previousIndex !== s.activeIndex) {\n                    z.gesture.image.transform('translate3d(0,0,0) scale(1)');\n                    z.gesture.imageWrap.transform('translate3d(0,0,0)');\n                    z.gesture.slide = z.gesture.image = z.gesture.imageWrap = undefined;\n                    z.scale = z.currentScale = 1;\n                }\n            },\n            // Toggle Zoom\n            toggleZoom: function (s, e) {\n                var z = s.zoom;\n                if (!z.gesture.slide) {\n                    z.gesture.slide = s.clickedSlide ? $(s.clickedSlide) : s.slides.eq(s.activeIndex);\n                    z.gesture.image = z.gesture.slide.find('img, svg, canvas');\n                    z.gesture.imageWrap = z.gesture.image.parent('.' + s.params.zoomContainerClass);\n                }\n                if (!z.gesture.image || z.gesture.image.length === 0) return;\n        \n                var touchX, touchY, offsetX, offsetY, diffX, diffY, translateX, translateY, imageWidth, imageHeight, scaledWidth, scaledHeight, translateMinX, translateMinY, translateMaxX, translateMaxY, slideWidth, slideHeight;\n        \n                if (typeof z.image.touchesStart.x === 'undefined' && e) {\n                    touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n                    touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n                }\n                else {\n                    touchX = z.image.touchesStart.x;\n                    touchY = z.image.touchesStart.y;\n                }\n        \n                if (z.scale && z.scale !== 1) {\n                    // Zoom Out\n                    z.scale = z.currentScale = 1;\n                    z.gesture.imageWrap.transition(300).transform('translate3d(0,0,0)');\n                    z.gesture.image.transition(300).transform('translate3d(0,0,0) scale(1)');\n                    z.gesture.slide = undefined;\n                }\n                else {\n                    // Zoom In\n                    z.scale = z.currentScale = z.gesture.imageWrap.attr('data-swiper-zoom') || s.params.zoomMax;\n                    if (e) {\n                        slideWidth = z.gesture.slide[0].offsetWidth;\n                        slideHeight = z.gesture.slide[0].offsetHeight;\n                        offsetX = z.gesture.slide.offset().left;\n                        offsetY = z.gesture.slide.offset().top;\n                        diffX = offsetX + slideWidth/2 - touchX;\n                        diffY = offsetY + slideHeight/2 - touchY;\n        \n                        imageWidth = z.gesture.image[0].offsetWidth;\n                        imageHeight = z.gesture.image[0].offsetHeight;\n                        scaledWidth = imageWidth * z.scale;\n                        scaledHeight = imageHeight * z.scale;\n        \n                        translateMinX = Math.min((slideWidth / 2 - scaledWidth / 2), 0);\n                        translateMinY = Math.min((slideHeight / 2 - scaledHeight / 2), 0);\n                        translateMaxX = -translateMinX;\n                        translateMaxY = -translateMinY;\n        \n                        translateX = diffX * z.scale;\n                        translateY = diffY * z.scale;\n        \n                        if (translateX < translateMinX) {\n                            translateX =  translateMinX;\n                        }\n                        if (translateX > translateMaxX) {\n                            translateX = translateMaxX;\n                        }\n        \n                        if (translateY < translateMinY) {\n                            translateY =  translateMinY;\n                        }\n                        if (translateY > translateMaxY) {\n                            translateY = translateMaxY;\n                        }\n                    }\n                    else {\n                        translateX = 0;\n                        translateY = 0;\n                    }\n                    z.gesture.imageWrap.transition(300).transform('translate3d(' + translateX + 'px, ' + translateY + 'px,0)');\n                    z.gesture.image.transition(300).transform('translate3d(0,0,0) scale(' + z.scale + ')');\n                }\n            },\n            // Attach/Detach Events\n            attachEvents: function (detach) {\n                var action = detach ? 'off' : 'on';\n        \n                if (s.params.zoom) {\n                    var target = s.slides;\n                    var passiveListener = s.touchEvents.start === 'touchstart' && s.support.passiveListener && s.params.passiveListeners ? {passive: true, capture: false} : false;\n                    // Scale image\n                    if (s.support.gestures) {\n                        s.slides[action]('gesturestart', s.zoom.onGestureStart, passiveListener);\n                        s.slides[action]('gesturechange', s.zoom.onGestureChange, passiveListener);\n                        s.slides[action]('gestureend', s.zoom.onGestureEnd, passiveListener);\n                    }\n                    else if (s.touchEvents.start === 'touchstart') {\n                        s.slides[action](s.touchEvents.start, s.zoom.onGestureStart, passiveListener);\n                        s.slides[action](s.touchEvents.move, s.zoom.onGestureChange, passiveListener);\n                        s.slides[action](s.touchEvents.end, s.zoom.onGestureEnd, passiveListener);\n                    }\n        \n                    // Move image\n                    s[action]('touchStart', s.zoom.onTouchStart);\n                    s.slides.each(function (index, slide){\n                        if ($(slide).find('.' + s.params.zoomContainerClass).length > 0) {\n                            $(slide)[action](s.touchEvents.move, s.zoom.onTouchMove);\n                        }\n                    });\n                    s[action]('touchEnd', s.zoom.onTouchEnd);\n        \n                    // Scale Out\n                    s[action]('transitionEnd', s.zoom.onTransitionEnd);\n                    if (s.params.zoomToggle) {\n                        s.on('doubleTap', s.zoom.toggleZoom);\n                    }\n                }\n            },\n            init: function () {\n                s.zoom.attachEvents();\n            },\n            destroy: function () {\n                s.zoom.attachEvents(true);\n            }\n        };\n\n        /*=========================\n          Plugins API. Collect all and init all plugins\n          ===========================*/\n        s._plugins = [];\n        for (var plugin in s.plugins) {\n            var p = s.plugins[plugin](s, s.params[plugin]);\n            if (p) s._plugins.push(p);\n        }\n        // Method to call all plugins event/method\n        s.callPlugins = function (eventName) {\n            for (var i = 0; i < s._plugins.length; i++) {\n                if (eventName in s._plugins[i]) {\n                    s._plugins[i][eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n                }\n            }\n        };\n\n        /*=========================\n          Events/Callbacks/Plugins Emitter\n          ===========================*/\n        function normalizeEventName (eventName) {\n            if (eventName.indexOf('on') !== 0) {\n                if (eventName[0] !== eventName[0].toUpperCase()) {\n                    eventName = 'on' + eventName[0].toUpperCase() + eventName.substring(1);\n                }\n                else {\n                    eventName = 'on' + eventName;\n                }\n            }\n            return eventName;\n        }\n        s.emitterEventListeners = {\n        \n        };\n        s.emit = function (eventName) {\n            // Trigger callbacks\n            if (s.params[eventName]) {\n                s.params[eventName](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n            }\n            var i;\n            // Trigger events\n            if (s.emitterEventListeners[eventName]) {\n                for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {\n                    s.emitterEventListeners[eventName][i](arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n                }\n            }\n            // Trigger plugins\n            if (s.callPlugins) s.callPlugins(eventName, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);\n        };\n        s.on = function (eventName, handler) {\n            eventName = normalizeEventName(eventName);\n            if (!s.emitterEventListeners[eventName]) s.emitterEventListeners[eventName] = [];\n            s.emitterEventListeners[eventName].push(handler);\n            return s;\n        };\n        s.off = function (eventName, handler) {\n            var i;\n            eventName = normalizeEventName(eventName);\n            if (typeof handler === 'undefined') {\n                // Remove all handlers for such event\n                s.emitterEventListeners[eventName] = [];\n                return s;\n            }\n            if (!s.emitterEventListeners[eventName] || s.emitterEventListeners[eventName].length === 0) return;\n            for (i = 0; i < s.emitterEventListeners[eventName].length; i++) {\n                if(s.emitterEventListeners[eventName][i] === handler) s.emitterEventListeners[eventName].splice(i, 1);\n            }\n            return s;\n        };\n        s.once = function (eventName, handler) {\n            eventName = normalizeEventName(eventName);\n            var _handler = function () {\n                handler(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);\n                s.off(eventName, _handler);\n            };\n            s.on(eventName, _handler);\n            return s;\n        };\n\n        // Accessibility tools\n        s.a11y = {\n            makeFocusable: function ($el) {\n                $el.attr('tabIndex', '0');\n                return $el;\n            },\n            addRole: function ($el, role) {\n                $el.attr('role', role);\n                return $el;\n            },\n        \n            addLabel: function ($el, label) {\n                $el.attr('aria-label', label);\n                return $el;\n            },\n        \n            disable: function ($el) {\n                $el.attr('aria-disabled', true);\n                return $el;\n            },\n        \n            enable: function ($el) {\n                $el.attr('aria-disabled', false);\n                return $el;\n            },\n        \n            onEnterKey: function (event) {\n                if (event.keyCode !== 13) return;\n                if ($(event.target).is(s.params.nextButton)) {\n                    s.onClickNext(event);\n                    if (s.isEnd) {\n                        s.a11y.notify(s.params.lastSlideMessage);\n                    }\n                    else {\n                        s.a11y.notify(s.params.nextSlideMessage);\n                    }\n                }\n                else if ($(event.target).is(s.params.prevButton)) {\n                    s.onClickPrev(event);\n                    if (s.isBeginning) {\n                        s.a11y.notify(s.params.firstSlideMessage);\n                    }\n                    else {\n                        s.a11y.notify(s.params.prevSlideMessage);\n                    }\n                }\n                if ($(event.target).is('.' + s.params.bulletClass)) {\n                    $(event.target)[0].click();\n                }\n            },\n        \n            liveRegion: $('<span class=\"' + s.params.notificationClass + '\" aria-live=\"assertive\" aria-atomic=\"true\"></span>'),\n        \n            notify: function (message) {\n                var notification = s.a11y.liveRegion;\n                if (notification.length === 0) return;\n                notification.html('');\n                notification.html(message);\n            },\n            init: function () {\n                // Setup accessibility\n                if (s.params.nextButton && s.nextButton && s.nextButton.length > 0) {\n                    s.a11y.makeFocusable(s.nextButton);\n                    s.a11y.addRole(s.nextButton, 'button');\n                    s.a11y.addLabel(s.nextButton, s.params.nextSlideMessage);\n                }\n                if (s.params.prevButton && s.prevButton && s.prevButton.length > 0) {\n                    s.a11y.makeFocusable(s.prevButton);\n                    s.a11y.addRole(s.prevButton, 'button');\n                    s.a11y.addLabel(s.prevButton, s.params.prevSlideMessage);\n                }\n        \n                $(s.container).append(s.a11y.liveRegion);\n            },\n            initPagination: function () {\n                if (s.params.pagination && s.params.paginationClickable && s.bullets && s.bullets.length) {\n                    s.bullets.each(function () {\n                        var bullet = $(this);\n                        s.a11y.makeFocusable(bullet);\n                        s.a11y.addRole(bullet, 'button');\n                        s.a11y.addLabel(bullet, s.params.paginationBulletMessage.replace(/{{index}}/, bullet.index() + 1));\n                    });\n                }\n            },\n            destroy: function () {\n                if (s.a11y.liveRegion && s.a11y.liveRegion.length > 0) s.a11y.liveRegion.remove();\n            }\n        };\n        \n\n        /*=========================\n          Init/Destroy\n          ===========================*/\n        s.init = function () {\n            if (s.params.loop) s.createLoop();\n            s.updateContainerSize();\n            s.updateSlidesSize();\n            s.updatePagination();\n            if (s.params.scrollbar && s.scrollbar) {\n                s.scrollbar.set();\n                if (s.params.scrollbarDraggable) {\n                    s.scrollbar.enableDraggable();\n                }\n            }\n            if (s.params.effect !== 'slide' && s.effects[s.params.effect]) {\n                if (!s.params.loop) s.updateProgress();\n                s.effects[s.params.effect].setTranslate();\n            }\n            if (s.params.loop) {\n                s.slideTo(s.params.initialSlide + s.loopedSlides, 0, s.params.runCallbacksOnInit);\n            }\n            else {\n                s.slideTo(s.params.initialSlide, 0, s.params.runCallbacksOnInit);\n                if (s.params.initialSlide === 0) {\n                    if (s.parallax && s.params.parallax) s.parallax.setTranslate();\n                    if (s.lazy && s.params.lazyLoading) {\n                        s.lazy.load();\n                        s.lazy.initialImageLoaded = true;\n                    }\n                }\n            }\n            s.attachEvents();\n            if (s.params.observer && s.support.observer) {\n                s.initObservers();\n            }\n            if (s.params.preloadImages && !s.params.lazyLoading) {\n                s.preloadImages();\n            }\n            if (s.params.zoom && s.zoom) {\n                s.zoom.init();\n            }\n            if (s.params.autoplay) {\n                s.startAutoplay();\n            }\n            if (s.params.keyboardControl) {\n                if (s.enableKeyboardControl) s.enableKeyboardControl();\n            }\n            if (s.params.mousewheelControl) {\n                if (s.enableMousewheelControl) s.enableMousewheelControl();\n            }\n            // Deprecated hashnavReplaceState changed to replaceState for use in hashnav and history\n            if (s.params.hashnavReplaceState) {\n                s.params.replaceState = s.params.hashnavReplaceState;\n            }\n            if (s.params.history) {\n                if (s.history) s.history.init();\n            }\n            if (s.params.hashnav) {\n                if (s.hashnav) s.hashnav.init();\n            }\n            if (s.params.a11y && s.a11y) s.a11y.init();\n            s.emit('onInit', s);\n        };\n        \n        // Cleanup dynamic styles\n        s.cleanupStyles = function () {\n            // Container\n            s.container.removeClass(s.classNames.join(' ')).removeAttr('style');\n        \n            // Wrapper\n            s.wrapper.removeAttr('style');\n        \n            // Slides\n            if (s.slides && s.slides.length) {\n                s.slides\n                    .removeClass([\n                      s.params.slideVisibleClass,\n                      s.params.slideActiveClass,\n                      s.params.slideNextClass,\n                      s.params.slidePrevClass\n                    ].join(' '))\n                    .removeAttr('style')\n                    .removeAttr('data-swiper-column')\n                    .removeAttr('data-swiper-row');\n            }\n        \n            // Pagination/Bullets\n            if (s.paginationContainer && s.paginationContainer.length) {\n                s.paginationContainer.removeClass(s.params.paginationHiddenClass);\n            }\n            if (s.bullets && s.bullets.length) {\n                s.bullets.removeClass(s.params.bulletActiveClass);\n            }\n        \n            // Buttons\n            if (s.params.prevButton) $(s.params.prevButton).removeClass(s.params.buttonDisabledClass);\n            if (s.params.nextButton) $(s.params.nextButton).removeClass(s.params.buttonDisabledClass);\n        \n            // Scrollbar\n            if (s.params.scrollbar && s.scrollbar) {\n                if (s.scrollbar.track && s.scrollbar.track.length) s.scrollbar.track.removeAttr('style');\n                if (s.scrollbar.drag && s.scrollbar.drag.length) s.scrollbar.drag.removeAttr('style');\n            }\n        };\n        \n        // Destroy\n        s.destroy = function (deleteInstance, cleanupStyles) {\n            // Detach evebts\n            s.detachEvents();\n            // Stop autoplay\n            s.stopAutoplay();\n            // Disable draggable\n            if (s.params.scrollbar && s.scrollbar) {\n                if (s.params.scrollbarDraggable) {\n                    s.scrollbar.disableDraggable();\n                }\n            }\n            // Destroy loop\n            if (s.params.loop) {\n                s.destroyLoop();\n            }\n            // Cleanup styles\n            if (cleanupStyles) {\n                s.cleanupStyles();\n            }\n            // Disconnect observer\n            s.disconnectObservers();\n        \n            // Destroy zoom\n            if (s.params.zoom && s.zoom) {\n                s.zoom.destroy();\n            }\n            // Disable keyboard/mousewheel\n            if (s.params.keyboardControl) {\n                if (s.disableKeyboardControl) s.disableKeyboardControl();\n            }\n            if (s.params.mousewheelControl) {\n                if (s.disableMousewheelControl) s.disableMousewheelControl();\n            }\n            // Disable a11y\n            if (s.params.a11y && s.a11y) s.a11y.destroy();\n            // Delete history popstate\n            if (s.params.history && !s.params.replaceState) {\n                window.removeEventListener('popstate', s.history.setHistoryPopState);\n            }\n            if (s.params.hashnav && s.hashnav)  {\n                s.hashnav.destroy();\n            }\n            // Destroy callback\n            s.emit('onDestroy');\n            // Delete instance\n            if (deleteInstance !== false) s = null;\n        };\n        \n        s.init();\n        \n\n    \n        // Return swiper instance\n        return s;\n    };\n    \n\n    /*==================================================\n        Prototype\n    ====================================================*/\n    Swiper.prototype = {\n        isSafari: (function () {\n            var ua = navigator.userAgent.toLowerCase();\n            return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n        })(),\n        isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent),\n        isArray: function (arr) {\n            return Object.prototype.toString.apply(arr) === '[object Array]';\n        },\n        /*==================================================\n        Browser\n        ====================================================*/\n        browser: {\n            ie: window.navigator.pointerEnabled || window.navigator.msPointerEnabled,\n            ieTouch: (window.navigator.msPointerEnabled && window.navigator.msMaxTouchPoints > 1) || (window.navigator.pointerEnabled && window.navigator.maxTouchPoints > 1),\n            lteIE9: (function() {\n                // create temporary DIV\n                var div = document.createElement('div');\n                // add content to tmp DIV which is wrapped into the IE HTML conditional statement\n                div.innerHTML = '<!--[if lte IE 9]><i></i><![endif]-->';\n                // return true / false value based on what will browser render\n                return div.getElementsByTagName('i').length === 1;\n            })()\n        },\n        /*==================================================\n        Devices\n        ====================================================*/\n        device: (function () {\n            var ua = navigator.userAgent;\n            var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n            var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n            var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n            var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n            return {\n                ios: ipad || iphone || ipod,\n                android: android\n            };\n        })(),\n        /*==================================================\n        Feature Detection\n        ====================================================*/\n        support: {\n            touch : (window.Modernizr && Modernizr.touch === true) || (function () {\n                return !!(('ontouchstart' in window) || window.DocumentTouch && document instanceof DocumentTouch);\n            })(),\n    \n            transforms3d : (window.Modernizr && Modernizr.csstransforms3d === true) || (function () {\n                var div = document.createElement('div').style;\n                return ('webkitPerspective' in div || 'MozPerspective' in div || 'OPerspective' in div || 'MsPerspective' in div || 'perspective' in div);\n            })(),\n    \n            flexbox: (function () {\n                var div = document.createElement('div').style;\n                var styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n                for (var i = 0; i < styles.length; i++) {\n                    if (styles[i] in div) return true;\n                }\n            })(),\n    \n            observer: (function () {\n                return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n            })(),\n    \n            passiveListener: (function () {\n                var supportsPassive = false;\n                try {\n                    var opts = Object.defineProperty({}, 'passive', {\n                        get: function() {\n                            supportsPassive = true;\n                        }\n                    });\n                    window.addEventListener('testPassiveListener', null, opts);\n                } catch (e) {}\n                return supportsPassive;\n            })(),\n    \n            gestures: (function () {\n                return 'ongesturestart' in window;\n            })()\n        },\n        /*==================================================\n        Plugins\n        ====================================================*/\n        plugins: {}\n    };\n    \n\n    /*===========================\n    Dom7 Library\n    ===========================*/\n    var Dom7 = (function () {\n        var Dom7 = function (arr) {\n            var _this = this, i = 0;\n            // Create array-like object\n            for (i = 0; i < arr.length; i++) {\n                _this[i] = arr[i];\n            }\n            _this.length = arr.length;\n            // Return collection with methods\n            return this;\n        };\n        var $ = function (selector, context) {\n            var arr = [], i = 0;\n            if (selector && !context) {\n                if (selector instanceof Dom7) {\n                    return selector;\n                }\n            }\n            if (selector) {\n                // String\n                if (typeof selector === 'string') {\n                    var els, tempParent, html = selector.trim();\n                    if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n                        var toCreate = 'div';\n                        if (html.indexOf('<li') === 0) toCreate = 'ul';\n                        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n                        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n                        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n                        if (html.indexOf('<option') === 0) toCreate = 'select';\n                        tempParent = document.createElement(toCreate);\n                        tempParent.innerHTML = selector;\n                        for (i = 0; i < tempParent.childNodes.length; i++) {\n                            arr.push(tempParent.childNodes[i]);\n                        }\n                    }\n                    else {\n                        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n                            // Pure ID selector\n                            els = [document.getElementById(selector.split('#')[1])];\n                        }\n                        else {\n                            // Other selectors\n                            els = (context || document).querySelectorAll(selector);\n                        }\n                        for (i = 0; i < els.length; i++) {\n                            if (els[i]) arr.push(els[i]);\n                        }\n                    }\n                }\n                // Node/element\n                else if (selector.nodeType || selector === window || selector === document) {\n                    arr.push(selector);\n                }\n                //Array of elements or instance of Dom\n                else if (selector.length > 0 && selector[0].nodeType) {\n                    for (i = 0; i < selector.length; i++) {\n                        arr.push(selector[i]);\n                    }\n                }\n            }\n            return new Dom7(arr);\n        };\n        Dom7.prototype = {\n            // Classes and attriutes\n            addClass: function (className) {\n                if (typeof className === 'undefined') {\n                    return this;\n                }\n                var classes = className.split(' ');\n                for (var i = 0; i < classes.length; i++) {\n                    for (var j = 0; j < this.length; j++) {\n                        this[j].classList.add(classes[i]);\n                    }\n                }\n                return this;\n            },\n            removeClass: function (className) {\n                var classes = className.split(' ');\n                for (var i = 0; i < classes.length; i++) {\n                    for (var j = 0; j < this.length; j++) {\n                        this[j].classList.remove(classes[i]);\n                    }\n                }\n                return this;\n            },\n            hasClass: function (className) {\n                if (!this[0]) return false;\n                else return this[0].classList.contains(className);\n            },\n            toggleClass: function (className) {\n                var classes = className.split(' ');\n                for (var i = 0; i < classes.length; i++) {\n                    for (var j = 0; j < this.length; j++) {\n                        this[j].classList.toggle(classes[i]);\n                    }\n                }\n                return this;\n            },\n            attr: function (attrs, value) {\n                if (arguments.length === 1 && typeof attrs === 'string') {\n                    // Get attr\n                    if (this[0]) return this[0].getAttribute(attrs);\n                    else return undefined;\n                }\n                else {\n                    // Set attrs\n                    for (var i = 0; i < this.length; i++) {\n                        if (arguments.length === 2) {\n                            // String\n                            this[i].setAttribute(attrs, value);\n                        }\n                        else {\n                            // Object\n                            for (var attrName in attrs) {\n                                this[i][attrName] = attrs[attrName];\n                                this[i].setAttribute(attrName, attrs[attrName]);\n                            }\n                        }\n                    }\n                    return this;\n                }\n            },\n            removeAttr: function (attr) {\n                for (var i = 0; i < this.length; i++) {\n                    this[i].removeAttribute(attr);\n                }\n                return this;\n            },\n            data: function (key, value) {\n                if (typeof value === 'undefined') {\n                    // Get value\n                    if (this[0]) {\n                        var dataKey = this[0].getAttribute('data-' + key);\n                        if (dataKey) return dataKey;\n                        else if (this[0].dom7ElementDataStorage && (key in this[0].dom7ElementDataStorage)) return this[0].dom7ElementDataStorage[key];\n                        else return undefined;\n                    }\n                    else return undefined;\n                }\n                else {\n                    // Set value\n                    for (var i = 0; i < this.length; i++) {\n                        var el = this[i];\n                        if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n                        el.dom7ElementDataStorage[key] = value;\n                    }\n                    return this;\n                }\n            },\n            // Transforms\n            transform : function (transform) {\n                for (var i = 0; i < this.length; i++) {\n                    var elStyle = this[i].style;\n                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;\n                }\n                return this;\n            },\n            transition: function (duration) {\n                if (typeof duration !== 'string') {\n                    duration = duration + 'ms';\n                }\n                for (var i = 0; i < this.length; i++) {\n                    var elStyle = this[i].style;\n                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;\n                }\n                return this;\n            },\n            //Events\n            on: function (eventName, targetSelector, listener, capture) {\n                function handleLiveEvent(e) {\n                    var target = e.target;\n                    if ($(target).is(targetSelector)) listener.call(target, e);\n                    else {\n                        var parents = $(target).parents();\n                        for (var k = 0; k < parents.length; k++) {\n                            if ($(parents[k]).is(targetSelector)) listener.call(parents[k], e);\n                        }\n                    }\n                }\n                var events = eventName.split(' ');\n                var i, j;\n                for (i = 0; i < this.length; i++) {\n                    if (typeof targetSelector === 'function' || targetSelector === false) {\n                        // Usual events\n                        if (typeof targetSelector === 'function') {\n                            listener = arguments[1];\n                            capture = arguments[2] || false;\n                        }\n                        for (j = 0; j < events.length; j++) {\n                            this[i].addEventListener(events[j], listener, capture);\n                        }\n                    }\n                    else {\n                        //Live events\n                        for (j = 0; j < events.length; j++) {\n                            if (!this[i].dom7LiveListeners) this[i].dom7LiveListeners = [];\n                            this[i].dom7LiveListeners.push({listener: listener, liveListener: handleLiveEvent});\n                            this[i].addEventListener(events[j], handleLiveEvent, capture);\n                        }\n                    }\n                }\n    \n                return this;\n            },\n            off: function (eventName, targetSelector, listener, capture) {\n                var events = eventName.split(' ');\n                for (var i = 0; i < events.length; i++) {\n                    for (var j = 0; j < this.length; j++) {\n                        if (typeof targetSelector === 'function' || targetSelector === false) {\n                            // Usual events\n                            if (typeof targetSelector === 'function') {\n                                listener = arguments[1];\n                                capture = arguments[2] || false;\n                            }\n                            this[j].removeEventListener(events[i], listener, capture);\n                        }\n                        else {\n                            // Live event\n                            if (this[j].dom7LiveListeners) {\n                                for (var k = 0; k < this[j].dom7LiveListeners.length; k++) {\n                                    if (this[j].dom7LiveListeners[k].listener === listener) {\n                                        this[j].removeEventListener(events[i], this[j].dom7LiveListeners[k].liveListener, capture);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                return this;\n            },\n            once: function (eventName, targetSelector, listener, capture) {\n                var dom = this;\n                if (typeof targetSelector === 'function') {\n                    targetSelector = false;\n                    listener = arguments[1];\n                    capture = arguments[2];\n                }\n                function proxy(e) {\n                    listener(e);\n                    dom.off(eventName, targetSelector, proxy, capture);\n                }\n                dom.on(eventName, targetSelector, proxy, capture);\n            },\n            trigger: function (eventName, eventData) {\n                for (var i = 0; i < this.length; i++) {\n                    var evt;\n                    try {\n                        evt = new window.CustomEvent(eventName, {detail: eventData, bubbles: true, cancelable: true});\n                    }\n                    catch (e) {\n                        evt = document.createEvent('Event');\n                        evt.initEvent(eventName, true, true);\n                        evt.detail = eventData;\n                    }\n                    this[i].dispatchEvent(evt);\n                }\n                return this;\n            },\n            transitionEnd: function (callback) {\n                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],\n                    i, j, dom = this;\n                function fireCallBack(e) {\n                    /*jshint validthis:true */\n                    if (e.target !== this) return;\n                    callback.call(this, e);\n                    for (i = 0; i < events.length; i++) {\n                        dom.off(events[i], fireCallBack);\n                    }\n                }\n                if (callback) {\n                    for (i = 0; i < events.length; i++) {\n                        dom.on(events[i], fireCallBack);\n                    }\n                }\n                return this;\n            },\n            // Sizing/Styles\n            width: function () {\n                if (this[0] === window) {\n                    return window.innerWidth;\n                }\n                else {\n                    if (this.length > 0) {\n                        return parseFloat(this.css('width'));\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n            outerWidth: function (includeMargins) {\n                if (this.length > 0) {\n                    if (includeMargins)\n                        return this[0].offsetWidth + parseFloat(this.css('margin-right')) + parseFloat(this.css('margin-left'));\n                    else\n                        return this[0].offsetWidth;\n                }\n                else return null;\n            },\n            height: function () {\n                if (this[0] === window) {\n                    return window.innerHeight;\n                }\n                else {\n                    if (this.length > 0) {\n                        return parseFloat(this.css('height'));\n                    }\n                    else {\n                        return null;\n                    }\n                }\n            },\n            outerHeight: function (includeMargins) {\n                if (this.length > 0) {\n                    if (includeMargins)\n                        return this[0].offsetHeight + parseFloat(this.css('margin-top')) + parseFloat(this.css('margin-bottom'));\n                    else\n                        return this[0].offsetHeight;\n                }\n                else return null;\n            },\n            offset: function () {\n                if (this.length > 0) {\n                    var el = this[0];\n                    var box = el.getBoundingClientRect();\n                    var body = document.body;\n                    var clientTop  = el.clientTop  || body.clientTop  || 0;\n                    var clientLeft = el.clientLeft || body.clientLeft || 0;\n                    var scrollTop  = window.pageYOffset || el.scrollTop;\n                    var scrollLeft = window.pageXOffset || el.scrollLeft;\n                    return {\n                        top: box.top  + scrollTop  - clientTop,\n                        left: box.left + scrollLeft - clientLeft\n                    };\n                }\n                else {\n                    return null;\n                }\n            },\n            css: function (props, value) {\n                var i;\n                if (arguments.length === 1) {\n                    if (typeof props === 'string') {\n                        if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n                    }\n                    else {\n                        for (i = 0; i < this.length; i++) {\n                            for (var prop in props) {\n                                this[i].style[prop] = props[prop];\n                            }\n                        }\n                        return this;\n                    }\n                }\n                if (arguments.length === 2 && typeof props === 'string') {\n                    for (i = 0; i < this.length; i++) {\n                        this[i].style[props] = value;\n                    }\n                    return this;\n                }\n                return this;\n            },\n    \n            //Dom manipulation\n            each: function (callback) {\n                for (var i = 0; i < this.length; i++) {\n                    callback.call(this[i], i, this[i]);\n                }\n                return this;\n            },\n            html: function (html) {\n                if (typeof html === 'undefined') {\n                    return this[0] ? this[0].innerHTML : undefined;\n                }\n                else {\n                    for (var i = 0; i < this.length; i++) {\n                        this[i].innerHTML = html;\n                    }\n                    return this;\n                }\n            },\n            text: function (text) {\n                if (typeof text === 'undefined') {\n                    if (this[0]) {\n                        return this[0].textContent.trim();\n                    }\n                    else return null;\n                }\n                else {\n                    for (var i = 0; i < this.length; i++) {\n                        this[i].textContent = text;\n                    }\n                    return this;\n                }\n            },\n            is: function (selector) {\n                if (!this[0]) return false;\n                var compareWith, i;\n                if (typeof selector === 'string') {\n                    var el = this[0];\n                    if (el === document) return selector === document;\n                    if (el === window) return selector === window;\n    \n                    if (el.matches) return el.matches(selector);\n                    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n                    else if (el.mozMatchesSelector) return el.mozMatchesSelector(selector);\n                    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n                    else {\n                        compareWith = $(selector);\n                        for (i = 0; i < compareWith.length; i++) {\n                            if (compareWith[i] === this[0]) return true;\n                        }\n                        return false;\n                    }\n                }\n                else if (selector === document) return this[0] === document;\n                else if (selector === window) return this[0] === window;\n                else {\n                    if (selector.nodeType || selector instanceof Dom7) {\n                        compareWith = selector.nodeType ? [selector] : selector;\n                        for (i = 0; i < compareWith.length; i++) {\n                            if (compareWith[i] === this[0]) return true;\n                        }\n                        return false;\n                    }\n                    return false;\n                }\n    \n            },\n            index: function () {\n                if (this[0]) {\n                    var child = this[0];\n                    var i = 0;\n                    while ((child = child.previousSibling) !== null) {\n                        if (child.nodeType === 1) i++;\n                    }\n                    return i;\n                }\n                else return undefined;\n            },\n            eq: function (index) {\n                if (typeof index === 'undefined') return this;\n                var length = this.length;\n                var returnIndex;\n                if (index > length - 1) {\n                    return new Dom7([]);\n                }\n                if (index < 0) {\n                    returnIndex = length + index;\n                    if (returnIndex < 0) return new Dom7([]);\n                    else return new Dom7([this[returnIndex]]);\n                }\n                return new Dom7([this[index]]);\n            },\n            append: function (newChild) {\n                var i, j;\n                for (i = 0; i < this.length; i++) {\n                    if (typeof newChild === 'string') {\n                        var tempDiv = document.createElement('div');\n                        tempDiv.innerHTML = newChild;\n                        while (tempDiv.firstChild) {\n                            this[i].appendChild(tempDiv.firstChild);\n                        }\n                    }\n                    else if (newChild instanceof Dom7) {\n                        for (j = 0; j < newChild.length; j++) {\n                            this[i].appendChild(newChild[j]);\n                        }\n                    }\n                    else {\n                        this[i].appendChild(newChild);\n                    }\n                }\n                return this;\n            },\n            prepend: function (newChild) {\n                var i, j;\n                for (i = 0; i < this.length; i++) {\n                    if (typeof newChild === 'string') {\n                        var tempDiv = document.createElement('div');\n                        tempDiv.innerHTML = newChild;\n                        for (j = tempDiv.childNodes.length - 1; j >= 0; j--) {\n                            this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n                        }\n                        // this[i].insertAdjacentHTML('afterbegin', newChild);\n                    }\n                    else if (newChild instanceof Dom7) {\n                        for (j = 0; j < newChild.length; j++) {\n                            this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n                        }\n                    }\n                    else {\n                        this[i].insertBefore(newChild, this[i].childNodes[0]);\n                    }\n                }\n                return this;\n            },\n            insertBefore: function (selector) {\n                var before = $(selector);\n                for (var i = 0; i < this.length; i++) {\n                    if (before.length === 1) {\n                        before[0].parentNode.insertBefore(this[i], before[0]);\n                    }\n                    else if (before.length > 1) {\n                        for (var j = 0; j < before.length; j++) {\n                            before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n                        }\n                    }\n                }\n            },\n            insertAfter: function (selector) {\n                var after = $(selector);\n                for (var i = 0; i < this.length; i++) {\n                    if (after.length === 1) {\n                        after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n                    }\n                    else if (after.length > 1) {\n                        for (var j = 0; j < after.length; j++) {\n                            after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n                        }\n                    }\n                }\n            },\n            next: function (selector) {\n                if (this.length > 0) {\n                    if (selector) {\n                        if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) return new Dom7([this[0].nextElementSibling]);\n                        else return new Dom7([]);\n                    }\n                    else {\n                        if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n                        else return new Dom7([]);\n                    }\n                }\n                else return new Dom7([]);\n            },\n            nextAll: function (selector) {\n                var nextEls = [];\n                var el = this[0];\n                if (!el) return new Dom7([]);\n                while (el.nextElementSibling) {\n                    var next = el.nextElementSibling;\n                    if (selector) {\n                        if($(next).is(selector)) nextEls.push(next);\n                    }\n                    else nextEls.push(next);\n                    el = next;\n                }\n                return new Dom7(nextEls);\n            },\n            prev: function (selector) {\n                if (this.length > 0) {\n                    if (selector) {\n                        if (this[0].previousElementSibling && $(this[0].previousElementSibling).is(selector)) return new Dom7([this[0].previousElementSibling]);\n                        else return new Dom7([]);\n                    }\n                    else {\n                        if (this[0].previousElementSibling) return new Dom7([this[0].previousElementSibling]);\n                        else return new Dom7([]);\n                    }\n                }\n                else return new Dom7([]);\n            },\n            prevAll: function (selector) {\n                var prevEls = [];\n                var el = this[0];\n                if (!el) return new Dom7([]);\n                while (el.previousElementSibling) {\n                    var prev = el.previousElementSibling;\n                    if (selector) {\n                        if($(prev).is(selector)) prevEls.push(prev);\n                    }\n                    else prevEls.push(prev);\n                    el = prev;\n                }\n                return new Dom7(prevEls);\n            },\n            parent: function (selector) {\n                var parents = [];\n                for (var i = 0; i < this.length; i++) {\n                    if (selector) {\n                        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n                    }\n                    else {\n                        parents.push(this[i].parentNode);\n                    }\n                }\n                return $($.unique(parents));\n            },\n            parents: function (selector) {\n                var parents = [];\n                for (var i = 0; i < this.length; i++) {\n                    var parent = this[i].parentNode;\n                    while (parent) {\n                        if (selector) {\n                            if ($(parent).is(selector)) parents.push(parent);\n                        }\n                        else {\n                            parents.push(parent);\n                        }\n                        parent = parent.parentNode;\n                    }\n                }\n                return $($.unique(parents));\n            },\n            find : function (selector) {\n                var foundElements = [];\n                for (var i = 0; i < this.length; i++) {\n                    var found = this[i].querySelectorAll(selector);\n                    for (var j = 0; j < found.length; j++) {\n                        foundElements.push(found[j]);\n                    }\n                }\n                return new Dom7(foundElements);\n            },\n            children: function (selector) {\n                var children = [];\n                for (var i = 0; i < this.length; i++) {\n                    var childNodes = this[i].childNodes;\n    \n                    for (var j = 0; j < childNodes.length; j++) {\n                        if (!selector) {\n                            if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n                        }\n                        else {\n                            if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) children.push(childNodes[j]);\n                        }\n                    }\n                }\n                return new Dom7($.unique(children));\n            },\n            remove: function () {\n                for (var i = 0; i < this.length; i++) {\n                    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n                }\n                return this;\n            },\n            add: function () {\n                var dom = this;\n                var i, j;\n                for (i = 0; i < arguments.length; i++) {\n                    var toAdd = $(arguments[i]);\n                    for (j = 0; j < toAdd.length; j++) {\n                        dom[dom.length] = toAdd[j];\n                        dom.length++;\n                    }\n                }\n                return dom;\n            }\n        };\n        $.fn = Dom7.prototype;\n        $.unique = function (arr) {\n            var unique = [];\n            for (var i = 0; i < arr.length; i++) {\n                if (unique.indexOf(arr[i]) === -1) unique.push(arr[i]);\n            }\n            return unique;\n        };\n    \n        return $;\n    })();\n    \n\n    /*===========================\n     Get Dom libraries\n     ===========================*/\n    var swiperDomPlugins = ['jQuery', 'Zepto', 'Dom7'];\n    for (var i = 0; i < swiperDomPlugins.length; i++) {\n    \tif (window[swiperDomPlugins[i]]) {\n    \t\taddLibraryPlugin(window[swiperDomPlugins[i]]);\n    \t}\n    }\n    // Required DOM Plugins\n    var domLib;\n    if (typeof Dom7 === 'undefined') {\n    \tdomLib = window.Dom7 || window.Zepto || window.jQuery;\n    }\n    else {\n    \tdomLib = Dom7;\n    }\n\n    /*===========================\n    Add .swiper plugin from Dom libraries\n    ===========================*/\n    function addLibraryPlugin(lib) {\n        lib.fn.swiper = function (params) {\n            var firstInstance;\n            lib(this).each(function () {\n                var s = new Swiper(this, params);\n                if (!firstInstance) firstInstance = s;\n            });\n            return firstInstance;\n        };\n    }\n    \n    if (domLib) {\n        if (!('transitionEnd' in domLib.fn)) {\n            domLib.fn.transitionEnd = function (callback) {\n                var events = ['webkitTransitionEnd', 'transitionend', 'oTransitionEnd', 'MSTransitionEnd', 'msTransitionEnd'],\n                    i, j, dom = this;\n                function fireCallBack(e) {\n                    /*jshint validthis:true */\n                    if (e.target !== this) return;\n                    callback.call(this, e);\n                    for (i = 0; i < events.length; i++) {\n                        dom.off(events[i], fireCallBack);\n                    }\n                }\n                if (callback) {\n                    for (i = 0; i < events.length; i++) {\n                        dom.on(events[i], fireCallBack);\n                    }\n                }\n                return this;\n            };\n        }\n        if (!('transform' in domLib.fn)) {\n            domLib.fn.transform = function (transform) {\n                for (var i = 0; i < this.length; i++) {\n                    var elStyle = this[i].style;\n                    elStyle.webkitTransform = elStyle.MsTransform = elStyle.msTransform = elStyle.MozTransform = elStyle.OTransform = elStyle.transform = transform;\n                }\n                return this;\n            };\n        }\n        if (!('transition' in domLib.fn)) {\n            domLib.fn.transition = function (duration) {\n                if (typeof duration !== 'string') {\n                    duration = duration + 'ms';\n                }\n                for (var i = 0; i < this.length; i++) {\n                    var elStyle = this[i].style;\n                    elStyle.webkitTransitionDuration = elStyle.MsTransitionDuration = elStyle.msTransitionDuration = elStyle.MozTransitionDuration = elStyle.OTransitionDuration = elStyle.transitionDuration = duration;\n                }\n                return this;\n            };\n        }\n        if (!('outerWidth' in domLib.fn)) {\n            domLib.fn.outerWidth = function (includeMargins) {\n                if (this.length > 0) {\n                    if (includeMargins)\n                        return this[0].offsetWidth + parseFloat(this.css('margin-right')) + parseFloat(this.css('margin-left'));\n                    else\n                        return this[0].offsetWidth;\n                }\n                else return null;\n            };\n        }\n    }\n\n    window.Swiper = Swiper;\n})();\n/*===========================\nSwiper AMD Export\n===========================*/\nif (typeof(module) !== 'undefined')\n{\n    module.exports = window.Swiper;\n}\nelse if (typeof define === 'function' && define.amd) {\n    define([], function () {\n        'use strict';\n        return window.Swiper;\n    });\n}\n//# sourceMappingURL=maps/swiper.js.map\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/swiper/dist/js/swiper.js\n ** module id = 4\n ** module chunks = 2\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 5\n ** module chunks = 2\n **/"],"sourceRoot":""}